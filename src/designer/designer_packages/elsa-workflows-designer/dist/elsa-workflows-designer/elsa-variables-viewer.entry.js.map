{"file":"elsa-variables-viewer.entry.esm.js","mappings":";;;;MASa,eAAe;;;;;;;EAM1B,MAAM;IACJ,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IACjC,MAAM,cAAc,GAAmCA,KAAgB,CAAC,cAAc,CAAC;IAEvF,QACE,eACE,WAAK,KAAK,EAAC,8EAA8E,IACvF,aAAO,KAAK,EAAC,eAAe,IAC1B,iBACA,cACE,UAAI,KAAK,EAAC,KAAK,WAAU,EACzB,UAAI,KAAK,EAAC,KAAK,WAAU,EACzB,UAAI,KAAK,EAAC,KAAK,cAAa,EAC5B,UAAI,KAAK,EAAC,KAAK,YAAW,CACvB,CACG,EACR,iBACC,SAAS,CAAC,GAAG,CAAC,QAAQ;;MACnB,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,qBAAqB,CAAC,CAAC;MACvF,MAAM,WAAW,GAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,mCAAI,GAAG,CAAC;MAChD,MAAM,UAAU,GAAGA,KAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC;MACnG,MAAM,eAAe,GAAG,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,WAAW,mCAAI,QAAQ,CAAC,QAAQ,CAAC;MACrE,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;MAE/D,QACE,cACE,UAAI,KAAK,EAAC,sBAAsB,IAAE,QAAQ,CAAC,IAAI,CAAM,EACrD,UAAI,KAAK,EAAC,sBAAsB,IAAE,eAAe,CAAM,EACvD,cAAK,WAAW,CAAM,EACtB,UAAI,KAAK,EAAC,SAAS,IAAE,aAAa,CAAM,CACrC,EAAE;KACV,CACF,CACO,CACF,CACJ,CACF,EACN;GACH;EAEO,gBAAgB,CAAC,QAAkB,EAAE,OAAgC;IAC3E,IAAG,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,MAAK,gFAAgF;MACvG,OAAO,IAAI,CAAC;IAEd,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAC/C,MAAM,mBAAmB,GAAG,gBAAgB,CAAC,UAAU,CAAC,6BAA6B,CAAC;IACtF,MAAM,GAAG,GAAG,GAAG,gBAAgB,CAAC,EAAE,cAAc,QAAQ,CAAC,IAAI,EAAE,CAAC;IAChE,OAAO,mBAAmB,CAAC,GAAG,CAAC,CAAC;GACjC;;;;;","names":["descriptorsStore"],"sources":["./src/modules/workflow-definitions/components/workflow-properties/variables-viewer.tsx"],"sourcesContent":["import {Component, h, Prop, } from \"@stencil/core\";\r\nimport {StorageDriverDescriptor, Variable, WorkflowInstance} from \"../../../../models\";\r\nimport descriptorsStore from \"../../../../data/descriptors-store\";\r\nimport {WorkflowDefinition} from \"../../models/entities\";\r\n\r\n@Component({\r\n  tag: 'elsa-variables-viewer',\r\n  shadow: false\r\n})\r\nexport class VariablesViewer {\r\n\r\n  @Prop() variables?: Array<Variable>;\r\n  @Prop() workflowDefinition: WorkflowDefinition;\r\n  @Prop() workflowInstance: WorkflowInstance;\r\n\r\n  render() {\r\n    const variables = this.variables;\r\n    const storageDrivers: Array<StorageDriverDescriptor> = descriptorsStore.storageDrivers;\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\r\n          <table class=\"default-table\">\r\n            <thead>\r\n            <tr>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Type</th>\r\n              <th scope=\"col\">Storage</th>\r\n              <th scope=\"col\">Value</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {variables.map(variable => {\r\n                const storage = storageDrivers.find(x => x.typeName == variable.storageDriverTypeName);\r\n                const storageName = storage?.displayName ?? '-';\r\n                const descriptor = descriptorsStore.variableDescriptors.find(x => x.typeName == variable.typeName);\r\n                const typeDisplayName = descriptor?.displayName ?? variable.typeName;\r\n                const variableValue = this.getVariableValue(variable, storage);\r\n\r\n                return (\r\n                  <tr>\r\n                    <td class=\"tw-whitespace-nowrap\">{variable.name}</td>\r\n                    <td class=\"tw-whitespace-nowrap\">{typeDisplayName}</td>\r\n                    <td>{storageName}</td>\r\n                    <td class=\"tw-pr-6\">{variableValue}</td>\r\n                  </tr>);\r\n              }\r\n            )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getVariableValue(variable: Variable, storage: StorageDriverDescriptor) : any {\r\n    if(storage?.typeName !== 'Elsa.Workflows.Core.Implementations.WorkflowStorageDriver, Elsa.Workflows.Core')\r\n      return null;\r\n\r\n    const workflowInstance = this.workflowInstance;\r\n    const persistentVariables = workflowInstance.properties.PersistentVariablesDictionary;\r\n    const key = `${workflowInstance.id}:Workflow1:${variable.name}`;\r\n    return persistentVariables[key];\r\n  }\r\n}\r\n"],"version":3}