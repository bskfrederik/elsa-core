{"version":3,"names":["MultiLineInput","this","getEditorHeight","options","editorHeightName","editorHeight","propertyEditor","textArea","onPropertyEditorChanged","e","inputElement","target","inputContext","inputChanged","value","SyntaxNames","Literal","onExpressionChanged","detail","expression","syntax","render","inputDescriptor","fieldName","name","fieldId","displayName","hint","description","input","getInputPropertyValue","defaultValue","getValueOrDefault","_a","_c","_b","type","defaultSyntax","h","label","id","rows","onChange"],"sources":["./src/components/inputs/multi-line.tsx"],"sourcesContent":["import {Component, Prop, h} from '@stencil/core';\r\nimport {LiteralExpression, SyntaxNames} from \"../../models\";\r\nimport {ActivityInputContext} from \"../../services/activity-input-driver\";\r\nimport {getInputPropertyValue} from \"../../utils\";\r\nimport {ExpressionChangedArs} from \"../shared/input-control-switch/input-control-switch\";\r\n\r\n@Component({\r\n  tag: 'elsa-multi-line-input',\r\n  shadow: false\r\n})\r\nexport class MultiLineInput {\r\n  @Prop() inputContext: ActivityInputContext;\r\n\r\n  public render() {\r\n    const inputContext = this.inputContext;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const fieldName = inputDescriptor.name;\r\n    const fieldId = inputDescriptor.name;\r\n    const displayName = inputDescriptor.displayName;\r\n    const hint = inputDescriptor.description;\r\n    const input = getInputPropertyValue(inputContext);\r\n    const options = inputDescriptor.options || {};\r\n    const editorHeight = this.getEditorHeight(options);\r\n    const defaultValue = inputDescriptor.defaultValue;\r\n    const value = this.getValueOrDefault((input?.expression as LiteralExpression)?.value, defaultValue);\r\n    const syntax = input?.expression?.type ?? inputDescriptor.defaultSyntax;\r\n    return (\r\n      <elsa-input-control-switch label={displayName} hint={hint} syntax={syntax} expression={value} onExpressionChanged={this.onExpressionChanged}>\r\n        <textarea name={fieldName} id={fieldId} value={value} rows={editorHeight.textArea} onChange={this.onPropertyEditorChanged}/>\r\n      </elsa-input-control-switch>\r\n    )\r\n  }\r\n\r\n  private getEditorHeight = (options: any) => {\r\n    const editorHeightName = options.editorHeight || 'Default';\r\n\r\n    switch (editorHeightName) {\r\n      case 'Large':\r\n        return {propertyEditor: '20em', textArea: 10}\r\n      default:\r\n        return {propertyEditor: '15em', textArea: 6}\r\n    }\r\n  };\r\n\r\n  private getValueOrDefault(value: string | undefined, defaultValue: string | undefined) {\r\n    return value ?? defaultValue ?? '';\r\n  }\r\n\r\n  private onPropertyEditorChanged = (e: Event) => {\r\n    const inputElement = e.target as HTMLTextAreaElement;\r\n    this.inputContext.inputChanged(inputElement.value, SyntaxNames.Literal);\r\n  };\r\n\r\n  private onExpressionChanged = (e: CustomEvent<ExpressionChangedArs>) => {\r\n    this.inputContext.inputChanged(e.detail.expression, e.detail.syntax);\r\n  }\r\n}\r\n"],"mappings":"4OAUaA,EAAc,M,yBAuBjBC,KAAAC,gBAAmBC,IACzB,MAAMC,EAAmBD,EAAQE,cAAgB,UAEjD,OAAQD,GACN,IAAK,QACH,MAAO,CAACE,eAAgB,OAAQC,SAAU,IAC5C,QACE,MAAO,CAACD,eAAgB,OAAQC,SAAU,G,EAQxCN,KAAAO,wBAA2BC,IACjC,MAAMC,EAAeD,EAAEE,OACvBV,KAAKW,aAAaC,aAAaH,EAAaI,MAAOC,EAAYC,QAAQ,EAGjEf,KAAAgB,oBAAuBR,IAC7BR,KAAKW,aAAaC,aAAaJ,EAAES,OAAOC,WAAYV,EAAES,OAAOE,OAAO,E,4BAzC/DC,S,UACL,MAAMT,EAAeX,KAAKW,aAC1B,MAAMU,EAAkBV,EAAaU,gBACrC,MAAMC,EAAYD,EAAgBE,KAClC,MAAMC,EAAUH,EAAgBE,KAChC,MAAME,EAAcJ,EAAgBI,YACpC,MAAMC,EAAOL,EAAgBM,YAC7B,MAAMC,EAAQC,EAAsBlB,GACpC,MAAMT,EAAUmB,EAAgBnB,SAAW,GAC3C,MAAME,EAAeJ,KAAKC,gBAAgBC,GAC1C,MAAM4B,EAAeT,EAAgBS,aACrC,MAAMjB,EAAQb,KAAK+B,mBAAkBC,EAACJ,IAAK,MAALA,SAAK,SAALA,EAAOV,cAAgC,MAAAc,SAAA,SAAAA,EAAEnB,MAAOiB,GACtF,MAAMX,GAASc,GAAAC,EAAAN,IAAK,MAALA,SAAK,SAALA,EAAOV,cAAU,MAAAgB,SAAA,SAAAA,EAAEC,QAAI,MAAAF,SAAA,EAAAA,EAAIZ,EAAgBe,cAC1D,OACEC,EAAA,6BAA2BC,MAAOb,EAAaC,KAAMA,EAAMP,OAAQA,EAAQD,WAAYL,EAAOG,oBAAqBhB,KAAKgB,qBACtHqB,EAAA,YAAUd,KAAMD,EAAWiB,GAAIf,EAASX,MAAOA,EAAO2B,KAAMpC,EAAaE,SAAUmC,SAAUzC,KAAKO,0B,CAgBhGwB,kBAAkBlB,EAA2BiB,G,MACnD,OAAOE,EAAAnB,IAAK,MAALA,SAAK,EAALA,EAASiB,KAAY,MAAAE,SAAA,EAAAA,EAAI,E"}