{"version":3,"names":["MultiTextInput","this","onPropertyEditorChanged","e","json","JSON","stringify","detail","inputContext","inputChanged","SyntaxNames","Object","onExpressionChanged","expression","syntax","render","inputDescriptor","fieldId","name","displayName","hint","description","input","getInputPropertyValue","_b","_a","type","defaultSyntax","_c","value","defaultValue","values","getObjectOrParseJson","length","h","label","onValueChanged"],"sources":["./src/components/inputs/multi-text.tsx"],"sourcesContent":["import {Component, Prop, h} from '@stencil/core';\r\nimport {ObjectExpression, LiteralExpression, SyntaxNames} from \"../../models\";\r\nimport {ActivityInputContext} from \"../../services/activity-input-driver\";\r\nimport {getInputPropertyValue, getObjectOrParseJson, parseJson} from \"../../utils\";\r\nimport {ExpressionChangedArs} from \"../shared/input-control-switch/input-control-switch\";\r\n\r\n@Component({\r\n  tag: 'elsa-multi-text-input',\r\n  shadow: false\r\n})\r\nexport class MultiTextInput {\r\n  @Prop() inputContext: ActivityInputContext;\r\n\r\n  public render() {\r\n    const inputContext = this.inputContext;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const fieldId = inputDescriptor.name;\r\n    const displayName = inputDescriptor.displayName;\r\n    const hint = inputDescriptor.description;\r\n    const input = getInputPropertyValue(inputContext);\r\n    const syntax = input?.expression?.type ?? inputDescriptor.defaultSyntax;\r\n    const json = (input?.expression as ObjectExpression)?.value;\r\n    const defaultValue = inputDescriptor.defaultValue;\r\n    let values = getObjectOrParseJson(json);\r\n\r\n    if (!values || values.length == 0)\r\n      values = getObjectOrParseJson(defaultValue) || [];\r\n\r\n    return (\r\n      <elsa-input-control-switch label={displayName} hint={hint} syntax={syntax} expression={json} onExpressionChanged={this.onExpressionChanged}>\r\n        <elsa-input-tags fieldId={fieldId} values={values} onValueChanged={this.onPropertyEditorChanged}/>\r\n      </elsa-input-control-switch>\r\n    );\r\n  }\r\n\r\n  private onPropertyEditorChanged = (e: CustomEvent<Array<string>>) => {\r\n    const json = JSON.stringify(e.detail);\r\n    this.inputContext.inputChanged(json, SyntaxNames.Object);\r\n  };\r\n\r\n  private onExpressionChanged = (e: CustomEvent<ExpressionChangedArs>) => {\r\n    this.inputContext.inputChanged(e.detail.expression, e.detail.syntax);\r\n  }\r\n}\r\n"],"mappings":"mPAUaA,EAAc,M,yBAyBjBC,KAAAC,wBAA2BC,IACjC,MAAMC,EAAOC,KAAKC,UAAUH,EAAEI,QAC9BN,KAAKO,aAAaC,aAAaL,EAAMM,EAAYC,OAAO,EAGlDV,KAAAW,oBAAuBT,IAC7BF,KAAKO,aAAaC,aAAaN,EAAEI,OAAOM,WAAYV,EAAEI,OAAOO,OAAO,E,4BA5B/DC,S,UACL,MAAMP,EAAeP,KAAKO,aAC1B,MAAMQ,EAAkBR,EAAaQ,gBACrC,MAAMC,EAAUD,EAAgBE,KAChC,MAAMC,EAAcH,EAAgBG,YACpC,MAAMC,EAAOJ,EAAgBK,YAC7B,MAAMC,EAAQC,EAAsBf,GACpC,MAAMM,GAASU,GAAAC,EAAAH,IAAK,MAALA,SAAK,SAALA,EAAOT,cAAU,MAAAY,SAAA,SAAAA,EAAEC,QAAI,MAAAF,SAAA,EAAAA,EAAIR,EAAgBW,cAC1D,MAAMvB,GAAOwB,EAACN,IAAK,MAALA,SAAK,SAALA,EAAOT,cAA+B,MAAAe,SAAA,SAAAA,EAAEC,MACtD,MAAMC,EAAed,EAAgBc,aACrC,IAAIC,EAASC,EAAqB5B,GAElC,IAAK2B,GAAUA,EAAOE,QAAU,EAC9BF,EAASC,EAAqBF,IAAiB,GAEjD,OACEI,EAAA,6BAA2BC,MAAOhB,EAAaC,KAAMA,EAAMN,OAAQA,EAAQD,WAAYT,EAAMQ,oBAAqBX,KAAKW,qBACrHsB,EAAA,mBAAiBjB,QAASA,EAASc,OAAQA,EAAQK,eAAgBnC,KAAKC,0B"}