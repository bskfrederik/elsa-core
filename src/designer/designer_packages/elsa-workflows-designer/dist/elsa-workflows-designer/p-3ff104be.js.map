{"version":3,"names":["async","enter","element","transitionName","classList","remove","transition","leave","add","toggle","contains","direction","animation","dataset","animationClass","charAt","toUpperCase","slice","genesis","split","start","end","addClasses","nextFrame","removeClasses","afterTransition","classes","Promise","resolve","requestAnimationFrame","computedDuration","getComputedStyle","transitionDuration","duration","Number","replace","setTimeout"],"sources":["../../node_modules/el-transition/index.js"],"sourcesContent":["export async function enter(element, transitionName = null) {\n    element.classList.remove('hidden')\n    await transition('enter', element, transitionName)\n}\n\nexport async function leave(element, transitionName = null) {\n    await transition('leave', element, transitionName)\n    element.classList.add('hidden')\n}\n\nexport async function toggle(element, transitionName = null) {\n    if (element.classList.contains('hidden')) {\n        await enter(element, transitionName)\n    } else {\n        await leave(element, transitionName)\n    }\n}\n\nasync function transition(direction, element, animation) {\n    const dataset = element.dataset\n    const animationClass = animation ? `${animation}-${direction}` : direction\n    let transition = `transition${direction.charAt(0).toUpperCase() + direction.slice(1)}`\n    const genesis = dataset[transition] ? dataset[transition].split(\" \") : [animationClass]\n    const start = dataset[`${transition}Start`] ? dataset[`${transition}Start`].split(\" \") : [`${animationClass}-start`]\n    const end = dataset[`${transition}End`] ? dataset[`${transition}End`].split(\" \") : [`${animationClass}-end`]\n\n    addClasses(element, genesis)\n    addClasses(element, start)\n    await nextFrame()\n    removeClasses(element, start)\n    addClasses(element, end);\n    await afterTransition(element)\n    removeClasses(element, end)\n    removeClasses(element, genesis)\n}\n\nfunction addClasses(element, classes) {\n    element.classList.add(...classes)\n}\n\nfunction removeClasses(element, classes) {\n    element.classList.remove(...classes)\n}\n\nfunction nextFrame() {\n    return new Promise(resolve => {\n        requestAnimationFrame(() => {\n            requestAnimationFrame(resolve)\n        });\n    });\n}\n\nfunction afterTransition(element) {\n    return new Promise(resolve => {\n        // safari return string with comma separate values\n        const computedDuration = getComputedStyle(element).transitionDuration.split(\",\")[0]\n        const duration = Number(computedDuration.replace('s', '')) * 1000;\n        setTimeout(() => {\n            resolve()\n        }, duration)\n    });\n}"],"mappings":"AAAOA,eAAeC,EAAMC,EAASC,EAAiB,MAClDD,EAAQE,UAAUC,OAAO,gBACnBC,EAAW,QAASJ,EAASC,EACvC,CAEOH,eAAeO,EAAML,EAASC,EAAiB,YAC5CG,EAAW,QAASJ,EAASC,GACnCD,EAAQE,UAAUI,IAAI,SAC1B,CAEOR,eAAeS,EAAOP,EAASC,EAAiB,MACnD,GAAID,EAAQE,UAAUM,SAAS,UAAW,OAChCT,EAAMC,EAASC,EAC7B,KAAW,OACGI,EAAML,EAASC,EAC7B,CACA,CAEAH,eAAeM,EAAWK,EAAWT,EAASU,GAC1C,MAAMC,EAAUX,EAAQW,QACxB,MAAMC,EAAiBF,EAAY,GAAGA,KAAaD,IAAcA,EACjE,IAAIL,EAAa,aAAaK,EAAUI,OAAO,GAAGC,cAAgBL,EAAUM,MAAM,KAClF,MAAMC,EAAUL,EAAQP,GAAcO,EAAQP,GAAYa,MAAM,KAAO,CAACL,GACxE,MAAMM,EAAQP,EAAQ,GAAGP,UAAqBO,EAAQ,GAAGP,UAAmBa,MAAM,KAAO,CAAC,GAAGL,WAC7F,MAAMO,EAAMR,EAAQ,GAAGP,QAAmBO,EAAQ,GAAGP,QAAiBa,MAAM,KAAO,CAAC,GAAGL,SAEvFQ,EAAWpB,EAASgB,GACpBI,EAAWpB,EAASkB,SACdG,IACNC,EAActB,EAASkB,GACvBE,EAAWpB,EAASmB,SACdI,EAAgBvB,GACtBsB,EAActB,EAASmB,GACvBG,EAActB,EAASgB,EAC3B,CAEA,SAASI,EAAWpB,EAASwB,GACzBxB,EAAQE,UAAUI,OAAOkB,EAC7B,CAEA,SAASF,EAActB,EAASwB,GAC5BxB,EAAQE,UAAUC,UAAUqB,EAChC,CAEA,SAASH,IACL,OAAO,IAAII,SAAQC,IACfC,uBAAsB,KAClBA,sBAAsBD,EAAO,GAC/B,GAEV,CAEA,SAASH,EAAgBvB,GACrB,OAAO,IAAIyB,SAAQC,IAEf,MAAME,EAAmBC,iBAAiB7B,GAAS8B,mBAAmBb,MAAM,KAAK,GACjF,MAAMc,EAAWC,OAAOJ,EAAiBK,QAAQ,IAAK,KAAO,IAC7DC,YAAW,KACPR,GAAO,GACRK,EAAQ,GAEnB,Q"}