{"file":"elsa-panel.entry.esm.js","mappings":"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","names":[],"sources":["./src/components/panel/resize.ts","./src/components/panel/panel.scss?tag=elsa-panel","./src/components/panel/panel.tsx"],"sourcesContent":["import { PanelPosition } from './models';\r\n\r\ntype ApplyResizeParams = {\r\n  position: PanelPosition;\r\n  isDefault?: boolean;\r\n  isHide?: boolean;\r\n  size?: number;\r\n};\r\n\r\nconst positionToLocalStorage = {\r\n  [PanelPosition.Right]: 'LS/rightPanelWidth',\r\n  [PanelPosition.Left]: 'LS/leftPanelWidth',\r\n  [PanelPosition.Bottom]: 'LS/bottomPanelWidth',\r\n};\r\n\r\nconst positionToCssVariable = {\r\n  [PanelPosition.Right]: '--workflow-editor-width',\r\n  [PanelPosition.Left]: '--activity-picker-width',\r\n  [PanelPosition.Bottom]: '--activity-editor-height',\r\n};\r\n\r\nconst positionToDefaultSize = {\r\n  [PanelPosition.Right]: 580,\r\n  [PanelPosition.Left]: 300,\r\n  [PanelPosition.Bottom]: 200,\r\n};\r\n\r\nfunction getPanelDefaultSize(position: PanelPosition) {\r\n  return localStorage.getItem(positionToLocalStorage[position]) || positionToDefaultSize[position];\r\n}\r\n\r\nfunction updatePanelDefaultSize(position: PanelPosition, size: number) {\r\n  return localStorage.setItem(positionToLocalStorage[position], size.toString());\r\n}\r\n\r\nexport function applyResize({ position, isDefault, isHide, size }: ApplyResizeParams) {\r\n  const root = document.querySelector<HTMLElement>(':root');\r\n\r\n  if (isHide) {\r\n    root.style.setProperty(positionToCssVariable[position], '1px');\r\n    return;\r\n  }\r\n\r\n  if (isDefault) {\r\n    root.style.setProperty(positionToCssVariable[position], `${getPanelDefaultSize(position)}px`);\r\n    return;\r\n  }\r\n\r\n  root.style.setProperty(positionToCssVariable[position], `${size}px`);\r\n  updatePanelDefaultSize(position, size);\r\n  return;\r\n}\r\n",".panel-state-collapsed {\r\n\r\n  &.panel {\r\n\r\n    &-position-bottom {\r\n      right: var(--workflow-editor-width);\r\n      left: var(--activity-picker-width);\r\n    }\r\n\r\n    &panel-position-top {\r\n      width: 0;\r\n    }\r\n\r\n    &panel-position-left {\r\n      height: 0;\r\n    }\r\n  }\r\n\r\n  .panel-content-container {\r\n    left: 0;\r\n    top: 0;\r\n    display: none;\r\n  }\r\n}","import { Component, Event, EventEmitter, h, Host, Prop, State } from '@stencil/core';\r\nimport { PanelPosition, PanelStateChangedArgs } from './models';\r\nimport { applyResize } from './resize';\r\n\r\n@Component({\r\n  tag: 'elsa-panel',\r\n  styleUrl: 'panel.scss',\r\n})\r\nexport class Panel {\r\n  @Prop() position: PanelPosition = PanelPosition.Left;\r\n  @Event() expandedStateChanged: EventEmitter<PanelStateChangedArgs>;\r\n  @State() isExpanded: boolean = true;\r\n  dragging = false;\r\n\r\n  private onToggleClick = () => {\r\n    if (this.isExpanded) {\r\n      applyResize({ position: this.position, isHide: true });\r\n    } else {\r\n      applyResize({ position: this.position, isDefault: true });\r\n    }\r\n    this.isExpanded = !this.isExpanded;\r\n    this.expandedStateChanged.emit({ expanded: this.isExpanded });\r\n  };\r\n\r\n  onBodyMouseUp = () => {\r\n    if (this.dragging) {\r\n      this.clearJSEvents();\r\n    }\r\n  };\r\n\r\n  componentWillLoad() {\r\n    document.addEventListener('mouseup', this.onBodyMouseUp);\r\n    applyResize({ position: this.position, isDefault: true });\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    document.removeEventListener('mouseup', this.onBodyMouseUp);\r\n  }\r\n\r\n  clearJSEvents() {\r\n    const body = document.body;\r\n    this.dragging = false;\r\n    body.removeEventListener('mousemove', this.resize);\r\n  }\r\n\r\n  resize = (e: MouseEvent) => {\r\n    if (this.position === PanelPosition.Right) {\r\n      applyResize({ position: PanelPosition.Right, size: document.body.clientWidth - e.pageX });\r\n    }\r\n    if (this.position === PanelPosition.Left) {\r\n      applyResize({ position: PanelPosition.Left, size: e.pageX });\r\n    }\r\n    if (this.position === PanelPosition.Bottom) {\r\n      applyResize({ position: PanelPosition.Bottom, size: document.body.offsetHeight - e.pageY });\r\n    }\r\n  };\r\n\r\n  onDragBarMouseDown = (e: MouseEvent) => {\r\n    e.preventDefault();\r\n    const body = document.body;\r\n    this.dragging = true;\r\n    body.addEventListener('mousemove', this.resize);\r\n  };\r\n\r\n  render() {\r\n    const isExpanded = this.isExpanded;\r\n    const position = this.position;\r\n    const stateClass = isExpanded ? 'panel-state-expanded' : 'panel-state-collapsed';\r\n\r\n    const containerClassMap = [];\r\n    containerClassMap[PanelPosition.Left] = 'panel-position-left tw-left-0 tw-top-0 tw-bottom-0 tw-border-r';\r\n    containerClassMap[PanelPosition.Top] = 'panel-position-top tw-left-0 tw-top-0 tw-right-0 tw-border-b';\r\n    containerClassMap[PanelPosition.Bottom] = 'panel-position-bottom h-0 tw-bottom-0 tw-border-t';\r\n    containerClassMap[PanelPosition.Right] = 'panel-position-right tw-right-0 tw-top-0 tw-bottom-0 tw-border-l';\r\n    const containerCssClass = containerClassMap[position];\r\n\r\n    const toggleClassMap = {};\r\n    toggleClassMap[PanelPosition.Left] = 'elsa-panel-toggle-left';\r\n    toggleClassMap[PanelPosition.Top] = 'elsa-panel-toggle-top';\r\n    toggleClassMap[PanelPosition.Right] = 'elsa-panel-toggle-right';\r\n    toggleClassMap[PanelPosition.Bottom] = 'elsa-panel-toggle-bottom';\r\n\r\n    const toggleCssClass = toggleClassMap[position];\r\n    const iconOrientationCssClass = isExpanded ? 'tw-rotate-180': '';\r\n\r\n    const dragBarClassMap = {\r\n      [PanelPosition.Left]: 'tw-right-0 tw-h-full tw-cursor-col-resize tw-w-1',\r\n      [PanelPosition.Right]: 'tw-left-0 tw-h-full tw-cursor-col-resize tw-w-1',\r\n      [PanelPosition.Bottom]: 'tw-top-0 tw-w-full tw-cursor-row-resize tw-h-1',\r\n    };\r\n\r\n    const dragBarClass = dragBarClassMap[this.position];\r\n\r\n    return (\r\n      <Host class={`panel tw-absolute tw-bg-white tw-z-20 ${containerCssClass} ${stateClass}`}>\r\n        <div class={`tw-absolute tw-opacity-0 tw-bg-blue-400 tw-transition tw-ease-in-out tw-duration-300 hover:tw-opacity-100 tw-z-10 ${dragBarClass}`} onMouseDown={this.onDragBarMouseDown} />\r\n        <div class=\"panel-content-container\">\r\n          <slot />\r\n        </div>\r\n\r\n        <div class={`tw-text-white ${toggleCssClass}`} onClick={() => this.onToggleClick()}>\r\n          <svg\r\n            class={`tw-h-6 tw-w-6 tw-text-gray-700 ${iconOrientationCssClass}`}\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke-width=\"2\"\r\n            stroke=\"currentColor\"\r\n            fill=\"none\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          >\r\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n            <polyline points=\"9 6 15 12 9 18\" />\r\n          </svg>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}