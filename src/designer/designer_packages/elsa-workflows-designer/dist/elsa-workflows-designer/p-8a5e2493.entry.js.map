{"version":3,"names":["CheckList","this","getSelectedValues","selectList","isFlagsEnum","selectedValue","selectedValues","onCheckChanged","e","checkbox","target","checked","value","isFlags","newValue","parseInt","selectedValuesChanged","emit","uniq","filter","x","items","render","fieldName","h","class","map","item","index","inputId","optionIsString","text","isSelected","findIndex","id","type","name","onChange","htmlFor"],"sources":["./src/components/shared/check-list/check-list.tsx"],"sourcesContent":["import {Component, h, Prop, Event, EventEmitter} from '@stencil/core';\r\nimport {uniq} from 'lodash'\r\nimport {SelectList} from \"../../../models\";\r\n\r\n@Component({\r\n  tag: 'elsa-check-list',\r\n  shadow: false\r\n})\r\nexport class CheckList {\r\n  @Prop() selectList: SelectList = {items: [], isFlagsEnum: false};\r\n  @Prop({mutable: true}) selectedValues?: Array<string> = [];\r\n  @Prop({mutable: true}) selectedValue?: number;\r\n  @Prop() fieldName: string;\r\n  @Event() selectedValuesChanged: EventEmitter<Array<string> | number>;\r\n\r\n  public render() {\r\n    const selectList = this.selectList;\r\n    const fieldName = this.fieldName;\r\n\r\n    return (\r\n      <div class=\"tw-max-w-lg tw-space-y-4 tw-my-4\">\r\n        {selectList.items.map((item, index) => {\r\n          const inputId = `${fieldName}_check-list_${index}`;\r\n          const optionIsString = typeof (item as any) == 'string';\r\n          const value = optionIsString ? item : item.value;\r\n          const text = optionIsString ? item : item.text;\r\n          const isSelected = selectList.isFlagsEnum\r\n            ? (this.selectedValue & (parseInt(value as string))) == parseInt(value as string)\r\n            : this.selectedValues.findIndex(x => x == value) >= 0;\r\n\r\n          return (\r\n            <div class=\"tw-relative tw-flex tw-items-start\">\r\n              <div class=\"tw-flex tw-items-center tw-h-5\">\r\n                <input id={inputId} type=\"checkbox\" name={fieldName} checked={isSelected} value={value}\r\n                       onChange={e => this.onCheckChanged(e)}\r\n                       class=\"focus:tw-ring-blue-500 tw-h-4 tw-w-4 tw-text-blue-600 tw-border-gray-300 tw-rounded\"/>\r\n              </div>\r\n              <div class=\"tw-ml-3 tw-text-sm\">\r\n                <label htmlFor={inputId} class=\"tw-font-medium tw-text-gray-700\">{text}</label>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getSelectedValues = (selectList: SelectList): number | Array<string> => {\r\n    return selectList.isFlagsEnum ? this.selectedValue : this.selectedValues || [];\r\n  };\r\n\r\n  private onCheckChanged = (e: Event) => {\r\n    const checkbox = (e.target as HTMLInputElement);\r\n    const checked = checkbox.checked;\r\n    const value = checkbox.value;\r\n    const isFlags = this.selectList.isFlagsEnum;\r\n\r\n    if (isFlags) {\r\n      let newValue = this.selectedValue;\r\n\r\n      if (checked)\r\n        newValue = newValue | parseInt(value);\r\n      else\r\n        newValue = newValue & ~parseInt(value);\r\n\r\n      this.selectedValue = newValue;\r\n      this.selectedValuesChanged.emit(newValue);\r\n    } else {\r\n      let newValue = this.selectedValues;\r\n\r\n      if (checked)\r\n        newValue = uniq([...newValue, value]);\r\n      else\r\n        newValue = newValue.filter(x => x !== value);\r\n\r\n      this.selectedValues = newValue;\r\n      this.selectedValuesChanged.emit(newValue);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"oHAQaA,EAAS,M,sFAuCZC,KAAAC,kBAAqBC,GACpBA,EAAWC,YAAcH,KAAKI,cAAgBJ,KAAKK,gBAAkB,GAGtEL,KAAAM,eAAkBC,IACxB,MAAMC,EAAYD,EAAEE,OACpB,MAAMC,EAAUF,EAASE,QACzB,MAAMC,EAAQH,EAASG,MACvB,MAAMC,EAAUZ,KAAKE,WAAWC,YAEhC,GAAIS,EAAS,CACX,IAAIC,EAAWb,KAAKI,cAEpB,GAAIM,EACFG,EAAWA,EAAWC,SAASH,QAE/BE,EAAWA,GAAYC,SAASH,GAElCX,KAAKI,cAAgBS,EACrBb,KAAKe,sBAAsBC,KAAKH,E,KAC3B,CACL,IAAIA,EAAWb,KAAKK,eAEpB,GAAIK,EACFG,EAAWI,OAAK,IAAIJ,EAAUF,SAE9BE,EAAWA,EAASK,QAAOC,GAAKA,IAAMR,IAExCX,KAAKK,eAAiBQ,EACtBb,KAAKe,sBAAsBC,KAAKH,E,mBAnEH,CAACO,MAAO,GAAIjB,YAAa,O,oBACF,G,sDAKjDkB,SACL,MAAMnB,EAAaF,KAAKE,WACxB,MAAMoB,EAAYtB,KAAKsB,UAEvB,OACEC,EAAA,OAAKC,MAAM,oCACRtB,EAAWkB,MAAMK,KAAI,CAACC,EAAMC,KAC3B,MAAMC,EAAU,GAAGN,gBAAwBK,IAC3C,MAAME,SAAyBH,GAAgB,SAC/C,MAAMf,EAAQkB,EAAiBH,EAAOA,EAAKf,MAC3C,MAAMmB,EAAOD,EAAiBH,EAAOA,EAAKI,KAC1C,MAAMC,EAAa7B,EAAWC,aACzBH,KAAKI,cAAiBU,SAASH,KAAsBG,SAASH,GAC/DX,KAAKK,eAAe2B,WAAUb,GAAKA,GAAKR,KAAU,EAEtD,OACEY,EAAA,OAAKC,MAAM,sCACTD,EAAA,OAAKC,MAAM,kCACTD,EAAA,SAAOU,GAAIL,EAASM,KAAK,WAAWC,KAAMb,EAAWZ,QAASqB,EAAYpB,MAAOA,EAC1EyB,SAAU7B,GAAKP,KAAKM,eAAeC,GACnCiB,MAAM,yFAEfD,EAAA,OAAKC,MAAM,sBACTD,EAAA,SAAOc,QAAST,EAASJ,MAAM,mCAAmCM,IAEhE,I"}