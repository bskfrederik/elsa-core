{"file":"elsa-workflow-definition-version-history.entry.esm.js","mappings":";;;;;;;;;;;;;;;MAYa,gCAAgC;EAK3C;;;;;IAaA,uBAAkB,GAAG,CAAC,CAAQ,EAAE,OAA2B;MACzD,CAAC,CAAC,cAAc,EAAE,CAAC;MACnB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACpC,CAAC;IAEF,yBAAoB,GAAG,OAAO,CAAQ,EAAE,OAA2B;MACjE,CAAC,CAAC,cAAc,EAAE,CAAC;MACnB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAC1B,MAAM,eAAe,CAAC,OAAO,CAAC,+CAA+C,CAAC,EAC9E;QACE,SAAS,EAAE,SAAS,CAAC,YAAY;QACjC,OAAO,EAAE,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,mBAAmB,CAAC,MAAM,EAAE,CAAC;OACnH,CAAC,CAAC;KACN,CAAC;IAEF,yBAAoB,GAAG,CAAC,CAAQ,EAAE,OAA2B;MAC3D,CAAC,CAAC,cAAc,EAAE,CAAC;MACnB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACzC,CAAC;;;;IA9BA,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxC,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACnE,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;GAC7D;EA6BD,MAAM;IACJ,QACE,eACE,iBACE,iBACA,cACE,aAAK,EACL,wBAAgB,EAChB,wBAAgB,EAChB,aAAK,EACL,aAAK,CACF,CACG,EACR,iBACC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;MACxB,IAAI,SAAS,GAAG,EAAE,CAAC;MACnB,SAAS,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,EAAC,UAAU,OAAE,EAAC,CAAC,CAAC;MAErG,IAAI,CAAC,CAAC,CAAC,QAAQ;QACb,SAAS,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,EAAC,UAAU,OAAE,EAAC,CAAC,CAAC;MAEvG,QACE,cACE,cAAK,CAAC,CAAC,WAAW,GAAG,EAAC,aAAa,OAAE,GAAG,EAAE,CAAM,EAChD,cAAK,CAAC,CAAC,OAAO,CAAM,EACpB,cAAKA,KAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAM,EAC5D,cACE,cAAQ,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,EAC3C,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,EACnD,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,GAAG,2BAA2B,GAAG,6BAA6B,WAE7G,CACN,EACL,cACG,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,WAAW,GAAG,SAAS,GAAG,yBAAmB,SAAS,EAAE,SAAS,GAAG,CACrF,CACF,EACL;KACH,CACF,CACO,CACF,CACJ,EACN;GACH;;;;;","names":["moment"],"sources":["./src/modules/workflow-definitions/components/workflow-properties/version-history.tsx"],"sourcesContent":["import {Component, Event, EventEmitter, h, Prop, Watch} from '@stencil/core';\r\nimport {Container} from \"typedi\";\r\nimport {EventBus} from \"../../../../services\";\r\nimport {WorkflowDefinition} from \"../../models/entities\";\r\nimport {WorkflowDefinitionsApi} from \"../../services/api\";\r\nimport {DeleteIcon, RevertIcon, PublishedIcon} from \"../../../../components/icons/tooling\";\r\nimport moment from \"moment\";\r\nimport {ModalDialogService, DefaultModalActions, DefaultContents, ModalType} from \"../../../../components/shared/modal-dialog\";\r\n\r\n@Component({\r\n  tag: 'elsa-workflow-definition-version-history',\r\n})\r\nexport class WorkflowDefinitionVersionHistory {\r\n  private readonly eventBus: EventBus;\r\n  private readonly workflowDefinitionApi: WorkflowDefinitionsApi;\r\n  private readonly modalDialogService: ModalDialogService;\r\n\r\n  constructor() {\r\n    this.eventBus = Container.get(EventBus);\r\n    this.workflowDefinitionApi = Container.get(WorkflowDefinitionsApi);\r\n    this.modalDialogService = Container.get(ModalDialogService);\r\n  }\r\n\r\n  @Prop() selectedVersion: WorkflowDefinition;\r\n  @Prop() workflowVersions: Array<WorkflowDefinition>;\r\n  @Prop() serverUrl: string;\r\n  @Event() versionSelected: EventEmitter<WorkflowDefinition>;\r\n  @Event() deleteVersionClicked: EventEmitter<WorkflowDefinition>;\r\n  @Event() revertVersionClicked: EventEmitter<WorkflowDefinition>;\r\n\r\n  onViewVersionClick = (e: Event, version: WorkflowDefinition) => {\r\n    e.preventDefault();\r\n    this.versionSelected.emit(version);\r\n  };\r\n\r\n  onDeleteVersionClick = async (e: Event, version: WorkflowDefinition) => {\r\n    e.preventDefault();\r\n    this.modalDialogService.show(\r\n      () => DefaultContents.Warning(\"Are you sure you want to delete this version?\"),\r\n      {\r\n        modalType: ModalType.Confirmation,\r\n        actions: [DefaultModalActions.Delete(() => this.deleteVersionClicked.emit(version)), DefaultModalActions.Cancel()]\r\n      });\r\n  };\r\n\r\n  onRevertVersionClick = (e: Event, version: WorkflowDefinition) => {\r\n    e.preventDefault();\r\n    this.revertVersionClicked.emit(version);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th/>\r\n            <th>Version</th>\r\n            <th>Created</th>\r\n            <th/>\r\n            <th/>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {this.workflowVersions.map(v => {\r\n              let menuItems = [];\r\n              menuItems.push({text: 'Delete', handler: e => this.onDeleteVersionClick(e, v), icon: <DeleteIcon/>});\r\n\r\n              if (!v.isLatest)\r\n                menuItems.push({text: 'Revert', handler: e => this.onRevertVersionClick(e, v), icon: <RevertIcon/>});\r\n\r\n              return (\r\n                <tr>\r\n                  <td>{v.isPublished ? <PublishedIcon/> : \"\"}</td>\r\n                  <td>{v.version}</td>\r\n                  <td>{moment(v.createdAt).format('DD-MM-YYYY HH:mm:ss')}</td>\r\n                  <td>\r\n                    <button onClick={e => this.onViewVersionClick(e, v)}\r\n                            type=\"button\"\r\n                            disabled={this.selectedVersion.version == v.version}\r\n                            class={this.selectedVersion.version == v.version ? \"elsa-btn elsa-btn-primary\" : \"elsa-btn elsa-btn-secondary\"}>\r\n                      View\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    {v.isPublished || v.isPublished ? undefined : <elsa-context-menu menuItems={menuItems}/>}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }\r\n          )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n"],"version":3}