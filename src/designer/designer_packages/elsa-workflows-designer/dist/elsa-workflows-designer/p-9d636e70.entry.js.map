{"version":3,"names":["bound01","n","max","isOnePointZero","isPercent","isPercentage","Math","min","parseFloat","parseInt","String","abs","clamp01","val","indexOf","boundAlpha","a","isNaN","convertToPercentage","concat","Number","pad2","c","length","rgbToRgb","r","g","b","rgbToHsl","h","s","l","d","hue2rgb","p","q","t","hslToRgb","rgbToHsv","v","hsvToRgb","i","floor","f","mod","rgbToHex","allow3Char","hex","round","toString","startsWith","charAt","join","rgbaToHex","allow4Char","convertDecimalToHex","convertHexToDecimal","parseIntFromHex","numberInputToObject","color","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gold","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","inputToRGB","rgb","ok","format","stringInputToObject","isValidCSSUnit","substr","Object","prototype","hasOwnProperty","call","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","matchers","RegExp","rgba","hsl","hsla","hsv","hsva","hex3","hex6","hex4","hex8","trim","toLowerCase","named","match","exec","Boolean","TinyColor","opts","_a","this","originalInput","roundA","gradientType","isValid","isDark","getBrightness","isLight","toRgb","getLuminance","R","G","B","RsRGB","GsRGB","BsRGB","pow","getAlpha","setAlpha","alpha","isMonochrome","toHsl","toHsv","toHsvString","toHslString","toHex","toHexString","toHex8","toHex8String","toHexShortString","allowShortChar","toRgbString","toPercentageRgb","fmt","x","toPercentageRgbString","rnd","toName","_i","entries","_b","key","value","formatSet","formattedString","hasAlpha","needsAlphaFormat","toNumber","clone","lighten","amount","brighten","darken","tint","mix","shade","desaturate","saturate","greyscale","spin","hue","rgb1","rgb2","analogous","results","slices","part","ret","push","complement","monochromatic","res","modification","splitcomplement","onBackground","background","fg","bg","triad","polyad","tetrad","result","increment","equals","state","onChange","createStore","labels","Badge","text","foreColor","backColor","style","backgroundColor","class","ConfigIcon","fill","viewBox","stroke","LabelPicker","constructor","hostRef","renderFlyout","selectedLabels","filteredLabels","searchText","ref","el","flyoutPanel","xmlns","placeholder","role","type","searchTextElement","onInput","e","onSearchTextChanged","map","label","colorStyle","isSelected","find","id","href","onClick","onLabelClick","TickIcon","undefined","name","description","renderLabel","labelId","labelStore","closeFlyoutPanel","leave","toggleFlyoutPanel","filterLabelsDebounced","toggle","focus","filterLabels","isNullOrWhitespace","toLocaleLowerCase","filter","includes","getFilteredSelectedLabels","selectedLabelsChanged","emit","target","debounce","onWindowClicked","event","element","contains","render","containerClass","buttonClass"],"sources":["../../node_modules/@ctrl/tinycolor/dist/module/util.js","../../node_modules/@ctrl/tinycolor/dist/module/conversion.js","../../node_modules/@ctrl/tinycolor/dist/module/css-color-names.js","../../node_modules/@ctrl/tinycolor/dist/module/format-input.js","../../node_modules/@ctrl/tinycolor/dist/module/index.js","./src/modules/labels/label-store.ts","./src/components/shared/badge/badge.tsx","./src/components/icons/tooling/config.tsx","./src/modules/labels/label-picker.tsx"],"sourcesContent":["/**\n * Take input from [0, n] and return it as [0, 1]\n * @hidden\n */\nexport function bound01(n, max) {\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    var isPercent = isPercentage(n);\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n    // Automatically convert percentage into number\n    if (isPercent) {\n        n = parseInt(String(n * max), 10) / 100;\n    }\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    // Convert into [0, 1] range if it isn't already\n    if (max === 360) {\n        // If n is a hue given in degrees,\n        // wrap around out-of-range values into [0, 360] range\n        // then convert into [0, 1].\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\n    }\n    else {\n        // If n not a hue given in degrees\n        // Convert into [0, 1] range if it isn't already.\n        n = (n % max) / parseFloat(String(max));\n    }\n    return n;\n}\n/**\n * Force a number between 0 and 1\n * @hidden\n */\nexport function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\n/**\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n * @hidden\n */\nexport function isOnePointZero(n) {\n    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\n}\n/**\n * Check to see if string passed in is a percentage\n * @hidden\n */\nexport function isPercentage(n) {\n    return typeof n === 'string' && n.indexOf('%') !== -1;\n}\n/**\n * Return a valid alpha value [0,1] with all invalid values being set to 1\n * @hidden\n */\nexport function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n    return a;\n}\n/**\n * Replace a decimal with it's percentage value\n * @hidden\n */\nexport function convertToPercentage(n) {\n    if (n <= 1) {\n        return \"\".concat(Number(n) * 100, \"%\");\n    }\n    return n;\n}\n/**\n * Force a hex value to have 2 characters\n * @hidden\n */\nexport function pad2(c) {\n    return c.length === 1 ? '0' + c : String(c);\n}\n","import { bound01, pad2 } from './util';\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n/**\n * Handle bounds / percentage checking to conform to CSS color spec\n * <http://www.w3.org/TR/css3-color/>\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\n * *Returns:* { r, g, b } in [0, 255]\n */\nexport function rgbToRgb(r, g, b) {\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255,\n    };\n}\n/**\n * Converts an RGB color value to HSL.\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n * *Returns:* { h, s, l } in [0,1]\n */\nexport function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (max + min) / 2;\n    if (max === min) {\n        s = 0;\n        h = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, l: l };\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * (6 * t);\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n/**\n * Converts an HSL color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hslToRgb(h, s, l) {\n    var r;\n    var g;\n    var b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n    if (s === 0) {\n        // achromatic\n        g = l;\n        b = l;\n        r = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color value to HSV\n *\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n * *Returns:* { h, s, v } in [0,1]\n */\nexport function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var v = max;\n    var d = max - min;\n    var s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n/**\n * Converts an HSV color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color to hex\n *\n * Assumes r, g, and b are contained in the set [0, 255]\n * Returns a 3 or 6 character hex\n */\nexport function rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    // Return a 3 character hex if possible\n    if (allow3Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color plus alpha transparency to hex\n *\n * Assumes r, g, b are contained in the set [0, 255] and\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\n */\n// eslint-disable-next-line max-params\nexport function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n        pad2(convertDecimalToHex(a)),\n    ];\n    // Return a 4 character hex if possible\n    if (allow4Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1)) &&\n        hex[3].startsWith(hex[3].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color to an ARGB Hex8 string\n * Rarely used, but required for \"toFilter()\"\n */\nexport function rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    return hex.join('');\n}\n/** Converts a decimal to a hex value */\nexport function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n/** Converts a hex value to a decimal */\nexport function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n}\n/** Parse a base-16 hex value into a base-10 integer */\nexport function parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\nexport function numberInputToObject(color) {\n    return {\n        r: color >> 16,\n        g: (color & 0xff00) >> 8,\n        b: color & 0xff,\n    };\n}\n","// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json\n/**\n * @hidden\n */\nexport var names = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    goldenrod: '#daa520',\n    gold: '#ffd700',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavenderblush: '#fff0f5',\n    lavender: '#e6e6fa',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32',\n};\n","/* eslint-disable @typescript-eslint/no-redundant-type-constituents */\nimport { convertHexToDecimal, hslToRgb, hsvToRgb, parseIntFromHex, rgbToRgb } from './conversion';\nimport { names } from './css-color-names';\nimport { boundAlpha, convertToPercentage } from './util';\n/**\n * Given a string or object, convert that input to RGB\n *\n * Possible string inputs:\n * ```\n * \"red\"\n * \"#f00\" or \"f00\"\n * \"#ff0000\" or \"ff0000\"\n * \"#ff000000\" or \"ff000000\"\n * \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n * \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n * \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n * \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n * \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n * \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n * \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n * ```\n */\nexport function inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color === 'string') {\n        color = stringInputToObject(color);\n    }\n    if (typeof color === 'object') {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = 'hsv';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = 'hsl';\n        }\n        if (Object.prototype.hasOwnProperty.call(color, 'a')) {\n            a = color.a;\n        }\n    }\n    a = boundAlpha(a);\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: Math.min(255, Math.max(rgb.r, 0)),\n        g: Math.min(255, Math.max(rgb.g, 0)),\n        b: Math.min(255, Math.max(rgb.b, 0)),\n        a: a,\n    };\n}\n// <http://www.w3.org/TR/css3-values/#integers>\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// <http://www.w3.org/TR/css3-values/#number-value>\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\nvar CSS_UNIT = \"(?:\".concat(CSS_NUMBER, \")|(?:\").concat(CSS_INTEGER, \")\");\n// Actual matching.\n// Parentheses and commas are optional, but not required.\n// Whitespace can take the place of commas or opening paren\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\nvar matchers = {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\n    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\n    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\n    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\n    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\n    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n};\n/**\n * Permissive string parsing.  Take in a number of formats, and output an object\n * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n */\nexport function stringInputToObject(color) {\n    color = color.trim().toLowerCase();\n    if (color.length === 0) {\n        return false;\n    }\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color === 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };\n    }\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match = matchers.rgb.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    match = matchers.rgba.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    match = matchers.hsl.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    match = matchers.hsla.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    match = matchers.hsv.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    match = matchers.hsva.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    match = matchers.hex8.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex6.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    match = matchers.hex4.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            a: convertHexToDecimal(match[4] + match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex3.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    return false;\n}\n/**\n * Check to see if it looks like a CSS unit\n * (see `matchers` above for definition).\n */\nexport function isValidCSSUnit(color) {\n    return Boolean(matchers.CSS_UNIT.exec(String(color)));\n}\n","import { numberInputToObject, rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv } from './conversion';\nimport { names } from './css-color-names';\nimport { inputToRGB } from './format-input';\nimport { bound01, boundAlpha, clamp01 } from './util';\nvar TinyColor = /** @class */ (function () {\n    function TinyColor(color, opts) {\n        if (color === void 0) { color = ''; }\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        // If input is already a tinycolor, return itself\n        if (color instanceof TinyColor) {\n            // eslint-disable-next-line no-constructor-return\n            return color;\n        }\n        if (typeof color === 'number') {\n            color = numberInputToObject(color);\n        }\n        this.originalInput = color;\n        var rgb = inputToRGB(color);\n        this.originalInput = color;\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        this.a = rgb.a;\n        this.roundA = Math.round(100 * this.a) / 100;\n        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n        this.gradientType = opts.gradientType;\n        // Don't let the range of [0,255] come back in [0,1].\n        // Potentially lose a little bit of precision here, but will fix issues where\n        // .5 gets interpreted as half of the total, instead of half of 1\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n        if (this.r < 1) {\n            this.r = Math.round(this.r);\n        }\n        if (this.g < 1) {\n            this.g = Math.round(this.g);\n        }\n        if (this.b < 1) {\n            this.b = Math.round(this.b);\n        }\n        this.isValid = rgb.ok;\n    }\n    TinyColor.prototype.isDark = function () {\n        return this.getBrightness() < 128;\n    };\n    TinyColor.prototype.isLight = function () {\n        return !this.isDark();\n    };\n    /**\n     * Returns the perceived brightness of the color, from 0-255.\n     */\n    TinyColor.prototype.getBrightness = function () {\n        // http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    };\n    /**\n     * Returns the perceived luminance of a color, from 0-1.\n     */\n    TinyColor.prototype.getLuminance = function () {\n        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var R;\n        var G;\n        var B;\n        var RsRGB = rgb.r / 255;\n        var GsRGB = rgb.g / 255;\n        var BsRGB = rgb.b / 255;\n        if (RsRGB <= 0.03928) {\n            R = RsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (GsRGB <= 0.03928) {\n            G = GsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (BsRGB <= 0.03928) {\n            B = BsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n        }\n        return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    };\n    /**\n     * Returns the alpha value of a color, from 0-1.\n     */\n    TinyColor.prototype.getAlpha = function () {\n        return this.a;\n    };\n    /**\n     * Sets the alpha value on the current color.\n     *\n     * @param alpha - The new alpha value. The accepted range is 0-1.\n     */\n    TinyColor.prototype.setAlpha = function (alpha) {\n        this.a = boundAlpha(alpha);\n        this.roundA = Math.round(100 * this.a) / 100;\n        return this;\n    };\n    /**\n     * Returns whether the color is monochrome.\n     */\n    TinyColor.prototype.isMonochrome = function () {\n        var s = this.toHsl().s;\n        return s === 0;\n    };\n    /**\n     * Returns the object as a HSVA object.\n     */\n    TinyColor.prototype.toHsv = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\n    };\n    /**\n     * Returns the hsva values interpolated into a string with the following format:\n     * \"hsva(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHsvString = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        var h = Math.round(hsv.h * 360);\n        var s = Math.round(hsv.s * 100);\n        var v = Math.round(hsv.v * 100);\n        return this.a === 1 ? \"hsv(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%)\") : \"hsva(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the object as a HSLA object.\n     */\n    TinyColor.prototype.toHsl = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\n    };\n    /**\n     * Returns the hsla values interpolated into a string with the following format:\n     * \"hsla(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHslString = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        var h = Math.round(hsl.h * 360);\n        var s = Math.round(hsl.s * 100);\n        var l = Math.round(hsl.l * 100);\n        return this.a === 1 ? \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\") : \"hsla(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the hex value of the color.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHex = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return rgbToHex(this.r, this.g, this.b, allow3Char);\n    };\n    /**\n     * Returns the hex value of the color -with a # prefixed.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHexString = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return '#' + this.toHex(allow3Char);\n    };\n    /**\n     * Returns the hex 8 value of the color.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8 = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n    };\n    /**\n     * Returns the hex 8 value of the color -with a # prefixed.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8String = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return '#' + this.toHex8(allow4Char);\n    };\n    /**\n     * Returns the shorter hex value of the color depends on its alpha -with a # prefixed.\n     * @param allowShortChar will shorten hex value to 3 or 4 char if possible\n     */\n    TinyColor.prototype.toHexShortString = function (allowShortChar) {\n        if (allowShortChar === void 0) { allowShortChar = false; }\n        return this.a === 1 ? this.toHexString(allowShortChar) : this.toHex8String(allowShortChar);\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toRgb = function () {\n        return {\n            r: Math.round(this.r),\n            g: Math.round(this.g),\n            b: Math.round(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA values interpolated into a string with the following format:\n     * \"RGBA(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toRgbString = function () {\n        var r = Math.round(this.r);\n        var g = Math.round(this.g);\n        var b = Math.round(this.b);\n        return this.a === 1 ? \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\") : \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toPercentageRgb = function () {\n        var fmt = function (x) { return \"\".concat(Math.round(bound01(x, 255) * 100), \"%\"); };\n        return {\n            r: fmt(this.r),\n            g: fmt(this.g),\n            b: fmt(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA relative values interpolated into a string\n     */\n    TinyColor.prototype.toPercentageRgbString = function () {\n        var rnd = function (x) { return Math.round(bound01(x, 255) * 100); };\n        return this.a === 1\n            ? \"rgb(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%)\")\n            : \"rgba(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * The 'real' name of the color -if there is one.\n     */\n    TinyColor.prototype.toName = function () {\n        if (this.a === 0) {\n            return 'transparent';\n        }\n        if (this.a < 1) {\n            return false;\n        }\n        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);\n        for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            if (hex === value) {\n                return key;\n            }\n        }\n        return false;\n    };\n    TinyColor.prototype.toString = function (format) {\n        var formatSet = Boolean(format);\n        format = format !== null && format !== void 0 ? format : this.format;\n        var formattedString = false;\n        var hasAlpha = this.a < 1 && this.a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === 'name' && this.a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === 'rgb') {\n            formattedString = this.toRgbString();\n        }\n        if (format === 'prgb') {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === 'hex' || format === 'hex6') {\n            formattedString = this.toHexString();\n        }\n        if (format === 'hex3') {\n            formattedString = this.toHexString(true);\n        }\n        if (format === 'hex4') {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === 'hex8') {\n            formattedString = this.toHex8String();\n        }\n        if (format === 'name') {\n            formattedString = this.toName();\n        }\n        if (format === 'hsl') {\n            formattedString = this.toHslString();\n        }\n        if (format === 'hsv') {\n            formattedString = this.toHsvString();\n        }\n        return formattedString || this.toHexString();\n    };\n    TinyColor.prototype.toNumber = function () {\n        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n    };\n    TinyColor.prototype.clone = function () {\n        return new TinyColor(this.toString());\n    };\n    /**\n     * Lighten the color a given amount. Providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.lighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Brighten the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.brighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var rgb = this.toRgb();\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n        return new TinyColor(rgb);\n    };\n    /**\n     * Darken the color a given amount, from 0 to 100.\n     * Providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.darken = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the color with pure white, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.tint = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('white', amount);\n    };\n    /**\n     * Mix the color with pure black, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.shade = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('black', amount);\n    };\n    /**\n     * Desaturate the color a given amount, from 0 to 100.\n     * Providing 100 will is the same as calling greyscale\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.desaturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Saturate the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.saturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Completely desaturates a color into greyscale.\n     * Same as calling `desaturate(100)`\n     */\n    TinyColor.prototype.greyscale = function () {\n        return this.desaturate(100);\n    };\n    /**\n     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n     * Values outside of this range will be wrapped into this range.\n     */\n    TinyColor.prototype.spin = function (amount) {\n        var hsl = this.toHsl();\n        var hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the current color a given amount with another color, from 0 to 100.\n     * 0 means no mixing (return current color).\n     */\n    TinyColor.prototype.mix = function (color, amount) {\n        if (amount === void 0) { amount = 50; }\n        var rgb1 = this.toRgb();\n        var rgb2 = new TinyColor(color).toRgb();\n        var p = amount / 100;\n        var rgba = {\n            r: (rgb2.r - rgb1.r) * p + rgb1.r,\n            g: (rgb2.g - rgb1.g) * p + rgb1.g,\n            b: (rgb2.b - rgb1.b) * p + rgb1.b,\n            a: (rgb2.a - rgb1.a) * p + rgb1.a,\n        };\n        return new TinyColor(rgba);\n    };\n    TinyColor.prototype.analogous = function (results, slices) {\n        if (results === void 0) { results = 6; }\n        if (slices === void 0) { slices = 30; }\n        var hsl = this.toHsl();\n        var part = 360 / slices;\n        var ret = [this];\n        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(new TinyColor(hsl));\n        }\n        return ret;\n    };\n    /**\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\n     */\n    TinyColor.prototype.complement = function () {\n        var hsl = this.toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.monochromatic = function (results) {\n        if (results === void 0) { results = 6; }\n        var hsv = this.toHsv();\n        var h = hsv.h;\n        var s = hsv.s;\n        var v = hsv.v;\n        var res = [];\n        var modification = 1 / results;\n        while (results--) {\n            res.push(new TinyColor({ h: h, s: s, v: v }));\n            v = (v + modification) % 1;\n        }\n        return res;\n    };\n    TinyColor.prototype.splitcomplement = function () {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        return [\n            this,\n            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n        ];\n    };\n    /**\n     * Compute how the color would appear on a background\n     */\n    TinyColor.prototype.onBackground = function (background) {\n        var fg = this.toRgb();\n        var bg = new TinyColor(background).toRgb();\n        var alpha = fg.a + bg.a * (1 - fg.a);\n        return new TinyColor({\n            r: (fg.r * fg.a + bg.r * bg.a * (1 - fg.a)) / alpha,\n            g: (fg.g * fg.a + bg.g * bg.a * (1 - fg.a)) / alpha,\n            b: (fg.b * fg.a + bg.b * bg.a * (1 - fg.a)) / alpha,\n            a: alpha,\n        });\n    };\n    /**\n     * Alias for `polyad(3)`\n     */\n    TinyColor.prototype.triad = function () {\n        return this.polyad(3);\n    };\n    /**\n     * Alias for `polyad(4)`\n     */\n    TinyColor.prototype.tetrad = function () {\n        return this.polyad(4);\n    };\n    /**\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\n     */\n    TinyColor.prototype.polyad = function (n) {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        var result = [this];\n        var increment = 360 / n;\n        for (var i = 1; i < n; i++) {\n            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\n        }\n        return result;\n    };\n    /**\n     * compare color vs current color\n     */\n    TinyColor.prototype.equals = function (color) {\n        return this.toRgbString() === new TinyColor(color).toRgbString();\n    };\n    return TinyColor;\n}());\nexport { TinyColor };\n// kept for backwards compatability with v1\nexport function tinycolor(color, opts) {\n    if (color === void 0) { color = ''; }\n    if (opts === void 0) { opts = {}; }\n    return new TinyColor(color, opts);\n}\n","﻿import { createStore } from '@stencil/store';\r\n\r\nconst { state, onChange } = createStore({\r\n  labels: [],\r\n});\r\n\r\nexport default state;\r\n","import {FunctionalComponent, h} from \"@stencil/core\";\r\nimport { TinyColor } from '@ctrl/tinycolor';\r\n\r\nexport interface BadgeProps {\r\n  text?: string;\r\n  color?: string;\r\n}\r\n\r\nexport const Badge: FunctionalComponent<BadgeProps> = ({text, color}) => {\r\n  const foreColor = color;\r\n  const backColor = new TinyColor(color).lighten(55).toHexString();\r\n\r\n  const style = {\r\n    color: foreColor,\r\n    backgroundColor: backColor\r\n  };\r\n\r\n  return <span class=\"tw-inline-flex tw-items-center tw-px-3 tw-py-0.5 tw-rounded-full tw-text-sm tw-font-medium\" style={style}>{text}</span>;\r\n};\r\n","import {FunctionalComponent, h} from \"@stencil/core\";\r\n\r\nexport const ConfigIcon: FunctionalComponent = () =>\r\n  <svg class=\"tw-h-6 tw-w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n          d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"/>\r\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"/>\r\n  </svg>\r\n;\r\n","import {Component, h, Listen, Prop, State, Element, Event, EventEmitter, Watch} from \"@stencil/core\";\r\nimport {TinyColor} from \"@ctrl/tinycolor\";\r\nimport {debounce} from 'lodash';\r\nimport {leave, toggle, enter} from 'el-transition';\r\nimport {Label} from \"./models\";\r\nimport labelStore from './label-store';\r\nimport {Badge} from \"../../components/shared/badge/badge\";\r\nimport {ConfigIcon} from \"../../components/icons/tooling/config\";\r\nimport {TickIcon} from \"../../components/icons/tooling/tick\";\r\nimport {isNullOrWhitespace} from \"../../utils\";\r\n\r\n@Component({\r\n  tag: 'elsa-label-picker',\r\n  shadow: false,\r\n})\r\nexport class LabelPicker {\r\n  @Element() private element: HTMLElement;\r\n  private searchTextElement: HTMLInputElement;\r\n  private flyoutPanel: HTMLElement;\r\n  private readonly filterLabelsDebounced: () => void;\r\n\r\n  constructor() {\r\n    this.filterLabelsDebounced = debounce(this.filterLabels, 200);\r\n    this.filteredLabels = labelStore.labels;\r\n  }\r\n\r\n  @Prop() public selectedLabels: Array<string> = [];\r\n  @Prop() public buttonClass?: string = 'tw-text-blue-500 hover:tw-text-blue-300';\r\n  @Prop() public containerClass?: string;\r\n\r\n  @Event() public selectedLabelsChanged: EventEmitter<Array<string>>;\r\n\r\n  @State() private selectedLabelsState: Array<string> = [];\r\n  @State() private searchText?: string;\r\n  @State() private filteredLabels: Array<Label>;\r\n\r\n  @Listen('click', {target: 'window'})\r\n  private onWindowClicked(event: Event) {\r\n    const target = event.target as HTMLElement;\r\n\r\n    if (!this.element.contains(target))\r\n      this.closeFlyoutPanel();\r\n  }\r\n\r\n  public render() {\r\n    const selectedLabels = this.getFilteredSelectedLabels();\r\n\r\n    return <div class={`tw-flex ${this.containerClass}`}>\r\n      <div class=\"tw-flex tw-flex-grow\">\r\n        {selectedLabels.map(this.renderLabel)}\r\n      </div>\r\n      <div class=\"tw-relative\">\r\n        <button onClick={e => this.toggleFlyoutPanel()} class={this.buttonClass}>\r\n          <ConfigIcon/>\r\n        </button>\r\n        {this.renderFlyout()}\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  private renderFlyout = () => {\r\n    const selectedLabels = this.selectedLabels;\r\n    const labels = this.filteredLabels;\r\n    const searchText = this.searchText;\r\n\r\n    return <div ref={el => this.flyoutPanel = el} class=\"tw-absolute tw-z-10 tw-right-0 tw-transform tw-mt-3 tw-px-2 tw-w-screen tw-max-w-md tw-px-0 hidden\"\r\n                data-transition-enter=\"tw-transition tw-ease-out tw-duration-200\"\r\n                data-transition-enter-start=\"tw-opacity-0 tw-translate-y-1\"\r\n                data-transition-enter-end=\"tw-opacity-100 tw-translate-y-0\"\r\n                data-transition-leave=\"tw-transition tw-ease-in tw-duration-150\"\r\n                data-transition-leave-start=\"tw-opacity-100 tw-translate-y-0\"\r\n                data-transition-leave-end=\"tw-opacity-0 tw-translate-y-1\"\r\n    >\r\n      <div class=\"tw-rounded-lg tw-shadow-lg tw-ring-1 tw-ring-black tw-ring-opacity-5 tw-overflow-hidden\">\r\n        <div class=\"tw-mx-auto tw-max-w-3xl tw-transform tw-divide-y tw-divide-gray-100 tw-overflow-hidden tw-rounded-xl tw-bg-white tw-shadow-2xl tw-ring-1 tw-ring-black tw-ring-opacity-5 tw-transition-all tw-opacity-100 tw-scale-100\">\r\n          <div class=\"tw-relative\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" class=\"tw-pointer-events-none tw-absolute top-3.5 left-4 tw-h-5 tw-w-5 tw-text-gray-400\">\r\n              <path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clip-rule=\"evenodd\"/>\r\n            </svg>\r\n            <input class=\"tw-h-12 tw-w-full tw-border-0 tw-bg-transparent tw-pl-11 tw-pr-4 tw-text-gray-800 tw-placeholder-gray-400 focus:tw-ring-0 sm:tw-text-sm\"\r\n                   placeholder=\"Search...\"\r\n                   role=\"combobox\"\r\n                   type=\"text\"\r\n                   ref={el => this.searchTextElement = el}\r\n                   onInput={e => this.onSearchTextChanged(e)}\r\n                   value={searchText}/></div>\r\n\r\n          <ul class=\"tw-max-h-96 tw-scroll-py-3 tw-overflow-y-auto tw-p-1\" role=\"listbox\">\r\n            {labels.map(label => {\r\n\r\n              const color = new TinyColor(label.color).lighten(40).toHexString();\r\n              const colorStyle = {backgroundColor: color};\r\n              const isSelected = !!selectedLabels.find(x => x == label.id);\r\n\r\n              return (\r\n                <li role=\"option\" tab-index=\"-1\">\r\n                  <a class=\"tw-block tw-select-none tw-rounded-xl tw-p-3 tw-bg-white hover:tw-bg-gray-100\" href=\"#\" onClick={e => this.onLabelClick(e, label)}>\r\n                    <div class=\"tw-flex tw-justify-start tw-gap-1.5\">\r\n                      <div class=\"tw-flex-none tw-w-8\">\r\n                        {isSelected ? <TickIcon/> : undefined}\r\n                      </div>\r\n                      <div class=\"tw-flex-grow \">\r\n                        <div class=\"tw-flex tw-gap-1.5\">\r\n                          <div class=\"tw-flex-shrink-0 tw-flex tw-flex-col tw-justify-center \">\r\n                            <div class=\"tw-w-4 tw-h-4 tw-rounded-full\" style={colorStyle} aria-hidden=\"true\"/>\r\n                          </div>\r\n                          <div class=\"tw-flex-grow\">\r\n                            <p class=\"tw-text-sm tw-font-medium tw-text-gray-900 tw-font-bold\">{label.name}</p>\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <p class=\"tw-text-sm tw-font-normal tw-text-gray-500\">{label.description}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n  };\r\n\r\n  private renderLabel = (labelId: string) => {\r\n    const label = labelStore.labels.find(x => x.id == labelId);\r\n    return <div class=\"tw-mr-2\">\r\n      <Badge text={label.name} color={label.color}/>\r\n    </div>\r\n  };\r\n\r\n  private closeFlyoutPanel = () => {\r\n    if (!!this.flyoutPanel)\r\n      leave(this.flyoutPanel);\r\n  };\r\n\r\n  private toggleFlyoutPanel = () => {\r\n    this.filterLabelsDebounced();\r\n    this.searchText = null;\r\n    toggle(this.flyoutPanel);\r\n\r\n    if (!!this.searchTextElement)\r\n      this.searchTextElement.value = '';\r\n      this.searchTextElement.focus();\r\n  };\r\n\r\n  private filterLabels = () => {\r\n    const searchText = this.searchText;\r\n\r\n    if (isNullOrWhitespace(searchText)) {\r\n      this.filteredLabels = labelStore.labels;\r\n      return;\r\n    }\r\n\r\n    const s = searchText.toLocaleLowerCase();\r\n    this.filteredLabels = labelStore.labels.filter(x => x.name.toLocaleLowerCase().includes(s) || x.description.toLocaleLowerCase().includes(s));\r\n  };\r\n\r\n  private getFilteredSelectedLabels = (): Array<string> => {\r\n    const labels = labelStore.labels;\r\n    return this.selectedLabels.filter(labelId => !!labels.find(x => x.id == labelId));\r\n  };\r\n\r\n  private onLabelClick = (e: Event, label: Label) => {\r\n    if (!this.selectedLabels.find(x => x == label.id))\r\n      this.selectedLabels = [...this.selectedLabels, label.id];\r\n    else\r\n      this.selectedLabels = this.selectedLabels.filter(x => x != label.id);\r\n\r\n    const selectedLabels = this.getFilteredSelectedLabels();\r\n    this.selectedLabels = selectedLabels;\r\n    this.selectedLabelsChanged.emit(selectedLabels);\r\n  };\r\n\r\n  private onSearchTextChanged = (e: Event) => {\r\n    const value = (e.target as HTMLInputElement).value.trim();\r\n    this.searchText = value;\r\n\r\n    this.filterLabelsDebounced();\r\n  };\r\n}\r\n\r\n\r\n"],"mappings":"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"}