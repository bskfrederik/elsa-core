{"file":"elsa-workflow-definition-properties-editor.entry.esm.js","mappings":"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","names":["descriptorsStore"],"sources":["./src/modules/workflow-definitions/components/workflow-properties/properties.tsx"],"sourcesContent":["import {Component, Event, EventEmitter, h, Method, Prop, State, Watch} from '@stencil/core';\r\nimport {Container} from \"typedi\";\r\nimport {EventBus} from \"../../../../services\";\r\nimport {InputDefinition, OutputDefinition, WorkflowDefinition, WorkflowOptions} from \"../../models/entities\";\r\nimport {PropertiesTabModel, TabModel, Widget, WorkflowDefinitionPropsUpdatedArgs, WorkflowPropertiesEditorDisplayingArgs, WorkflowPropertiesEditorEventTypes, WorkflowPropertiesEditorModel} from \"../../models/ui\";\r\nimport {CheckboxFormEntry, FormEntry} from \"../../../../components/shared/forms/form-entry\";\r\nimport {isNullOrWhitespace} from \"../../../../utils\";\r\nimport {InfoList} from \"../../../../components/shared/forms/info-list\";\r\nimport {TabChangedArgs, Variable} from \"../../../../models\";\r\nimport {WorkflowDefinitionsApi} from \"../../services/api\";\r\nimport descriptorsStore from \"../../../../data/descriptors-store\";\r\nimport {WorkflowPropertiesEditorTabs} from \"../../models/props-editor-tabs\";\r\n\r\n@Component({\r\n  tag: 'elsa-workflow-definition-properties-editor',\r\n})\r\nexport class WorkflowDefinitionPropertiesEditor {\r\n  private readonly eventBus: EventBus;\r\n  private slideOverPanel: HTMLElsaSlideOverPanelElement;\r\n  private readonly workflowDefinitionApi: WorkflowDefinitionsApi;\r\n\r\n  constructor() {\r\n    this.eventBus = Container.get(EventBus);\r\n    this.workflowDefinitionApi = Container.get(WorkflowDefinitionsApi);\r\n\r\n    this.model = {\r\n      tabModels: [],\r\n    }\r\n  }\r\n\r\n  @Prop() workflowDefinition?: WorkflowDefinition;\r\n  @Prop() workflowVersions: Array<WorkflowDefinition>;\r\n  @Prop() readonly: boolean;\r\n  @Event() workflowPropsUpdated: EventEmitter<WorkflowDefinitionPropsUpdatedArgs>;\r\n  @Event() versionSelected: EventEmitter<WorkflowDefinition>;\r\n  @Event() deleteVersionClicked: EventEmitter<WorkflowDefinition>;\r\n  @Event() revertVersionClicked: EventEmitter<WorkflowDefinition>;\r\n  @State() private model: WorkflowPropertiesEditorModel;\r\n  @State() private selectedTabIndex: number = 0;\r\n\r\n  @Method()\r\n  public async show(): Promise<void> {\r\n    await this.slideOverPanel.show();\r\n  }\r\n\r\n  @Method()\r\n  public async hide(): Promise<void> {\r\n    await this.slideOverPanel.hide();\r\n  }\r\n\r\n  @Watch('workflowDefinition')\r\n  async onWorkflowDefinitionChanged() {\r\n    await this.createModel();\r\n  }\r\n\r\n  @Watch('workflowVersions')\r\n  async onWorkflowVersionsChanged() {\r\n    await this.createModel();\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    await this.createModel();\r\n  }\r\n\r\n  public render() {\r\n    const workflowDefinition = this.workflowDefinition;\r\n    const title = workflowDefinition?.name ?? 'Untitled';\r\n    const subTitle = 'Workflow Definition'\r\n    const tabs = this.model.tabModels.map(x => x.tab);\r\n\r\n    return (\r\n      <elsa-form-panel\r\n        isReadonly={this.readonly}\r\n        mainTitle={title}\r\n        subTitle={subTitle}\r\n        tabs={tabs}\r\n        selectedTabIndex={this.selectedTabIndex}\r\n        onSelectedTabIndexChanged={e => this.onSelectedTabIndexChanged(e)}/>\r\n    );\r\n  }\r\n\r\n  private createModel = async () => {\r\n    const model = {\r\n      tabModels: []\r\n    };\r\n\r\n    const workflowDefinition = this.workflowDefinition;\r\n    const options: WorkflowOptions = workflowDefinition.options || {};\r\n    const autoUpdateConsumingWorkflows = options.autoUpdateConsumingWorkflows ?? false;\r\n    const usableAsActivity = options.usableAsActivity ?? false;\r\n\r\n    if (!workflowDefinition) {\r\n      this.model = model;\r\n      return;\r\n    }\r\n\r\n    const propertiesTabModel: PropertiesTabModel = {\r\n      name: 'properties',\r\n      tab: null,\r\n      Widgets: [{\r\n        name: 'workflowName',\r\n        content: () => {\r\n          const workflow = this.workflowDefinition;\r\n          return <FormEntry label=\"Name\" fieldId=\"workflowName\" hint=\"The name of the workflow.\">\r\n            <input type=\"text\" name=\"workflowName\" id=\"workflowName\" value={workflow.name} onChange={e => this.onPropertyEditorChanged(wf => wf.name = (e.target as HTMLInputElement).value)}/>\r\n          </FormEntry>;\r\n        },\r\n        order: 0\r\n      }, {\r\n        name: 'workflowDescription',\r\n        content: () => {\r\n          const workflow = this.workflowDefinition;\r\n          return <FormEntry label=\"Description\" fieldId=\"workflowDescription\" hint=\"A brief description about the workflow.\">\r\n            <textarea name=\"workflowDescription\" id=\"workflowDescription\" value={workflow.description} rows={6} onChange={e => this.onPropertyEditorChanged(wf => wf.description = (e.target as HTMLTextAreaElement).value)}/>\r\n          </FormEntry>;\r\n        },\r\n        order: 5\r\n      }, {\r\n        name: 'workflowInfo',\r\n        content: () => {\r\n          const workflow = this.workflowDefinition;\r\n\r\n          const workflowDetails = {\r\n            'Definition ID': isNullOrWhitespace(workflow.definitionId) ? '(new)' : workflow.definitionId,\r\n            'Version ID': isNullOrWhitespace(workflow.id) ? '(new)' : workflow.id,\r\n            'Version': workflow.version.toString(),\r\n            'Status': workflow.isPublished ? 'Published' : 'Draft',\r\n            'Readonly': workflow.isReadonly ? 'Yes' : 'No'\r\n          };\r\n\r\n          return <InfoList title=\"Information\" dictionary={workflowDetails}/>;\r\n        },\r\n        order: 10\r\n      }]\r\n    };\r\n\r\n    propertiesTabModel.tab = {\r\n      displayText: 'Properties',\r\n      order: 0,\r\n      content: () => this.renderPropertiesTab(propertiesTabModel)\r\n    };\r\n\r\n    const variablesTabModel: TabModel = {\r\n      name: 'variables',\r\n      tab: {\r\n        displayText: 'Variables',\r\n        order: 5,\r\n        content: () => this.renderVariablesTab()\r\n      }\r\n    }\r\n\r\n    const strategies = descriptorsStore.workflowActivationStrategyDescriptors;\r\n    const firstStrategy = strategies.length > 0 ? strategies[0] : null;\r\n    const defaultDescription = firstStrategy?.description ?? '';\r\n\r\n    const settingsWidgets: Array<Widget> = [\r\n      {\r\n        name: 'workflowActivationValidator',\r\n        order: 0,\r\n        content: () => <FormEntry label=\"Activation Strategy\" fieldId=\"workflowActivationStrategyType\" hint={defaultDescription}>\r\n          <select name=\"workflowActivationStrategyType\" onChange={e => this.onPropertyEditorChanged(wf => {\r\n            const selectElement = (e.target as HTMLSelectElement);\r\n            options.activationStrategyType = selectElement.value;\r\n            wf.options = options;\r\n\r\n            const hintElement: HTMLElement = selectElement.closest('.form-entry').getElementsByClassName('form-field-hint')[0] as HTMLElement;\r\n            const strategy = strategies.find(x => x.typeName == selectElement.value);\r\n            hintElement.innerText = strategy.description;\r\n          })}>\r\n            {strategies.map(strategy => <option value={strategy.typeName} selected={strategy.typeName == options.activationStrategyType}>{strategy.displayName}</option>)}\r\n          </select>\r\n        </FormEntry>\r\n      },\r\n      {\r\n        name: 'usableAsActivity',\r\n        order: 0,\r\n        content: () => <CheckboxFormEntry label=\"Usable As Activity\" fieldId=\"UsableAsActivity\" hint=\"Allow this workflow to be used as an activity.\">\r\n          <input type=\"checkbox\" id=\"UsableAsActivity\" name=\"UsableAsActivity\" checked={usableAsActivity} onChange={e => this.onPropertyEditorChanged(wf => {\r\n            const inputElement = (e.target as HTMLInputElement);\r\n            wf.options.usableAsActivity = inputElement.checked;\r\n            this.createModel();\r\n          })}/>\r\n        </CheckboxFormEntry>\r\n      },\r\n      {\r\n        name: 'autoUpdateConsumingWorkflows',\r\n        order: 0,\r\n        content: () =>\r\n          <CheckboxFormEntry fieldId=\"UpdateConsumingWorkflows\" label=\"Auto-update consuming workflows\" hint=\"When you publish a new version, all of the consuming workflows will be updated to point to the new version of this workflow.\">\r\n            <input type=\"checkbox\" name=\"UpdateConsumingWorkflows\" id=\"UpdateConsumingWorkflows\" checked={autoUpdateConsumingWorkflows} onChange={e => this.onPropertyEditorChanged(wf => {\r\n              const inputElement = e.target as HTMLInputElement;\r\n              options.autoUpdateConsumingWorkflows = inputElement.checked;\r\n              wf.options = options;\r\n            })}/>\r\n          </CheckboxFormEntry>\r\n      }\r\n    ];\r\n\r\n    const settingsTabModel: TabModel = {\r\n      name: 'settings',\r\n      tab: {\r\n        displayText: 'Settings',\r\n        order: 10,\r\n        content: () => <elsa-widgets widgets={settingsWidgets}/>\r\n      }\r\n    }\r\n\r\n    const inputOutputTabModel: TabModel = {\r\n      name: 'input-output',\r\n      tab: {\r\n        displayText: 'Input/output',\r\n        order: 15,\r\n        content: () => this.renderInputOutputTab()\r\n      }\r\n    }\r\n\r\n    const versionHistoryTabModel: TabModel = {\r\n      name: 'versionHistory',\r\n      tab: {\r\n        displayText: 'Version History',\r\n        order: 20,\r\n        content: () => this.renderVersionHistoryTab()\r\n      }\r\n    }\r\n\r\n    model.tabModels = [propertiesTabModel, variablesTabModel, settingsTabModel, versionHistoryTabModel, inputOutputTabModel];\r\n\r\n    const args: WorkflowPropertiesEditorDisplayingArgs = {\r\n      workflowDefinition,\r\n      model,\r\n      notifyWorkflowDefinitionChanged: () => this.onWorkflowDefinitionUpdated()\r\n    };\r\n\r\n    await this.eventBus.emit(WorkflowPropertiesEditorEventTypes.Displaying, this, args);\r\n\r\n    this.model = model;\r\n  }\r\n\r\n  private renderPropertiesTab = (tabModel: PropertiesTabModel) => <elsa-widgets widgets={tabModel.Widgets}/>;\r\n\r\n  private renderVariablesTab = () => {\r\n    const variables: Array<Variable> = this.workflowDefinition?.variables ?? [];\r\n\r\n    return <div>\r\n      <elsa-variables-editor variables={variables} onVariablesChanged={e => this.onVariablesUpdated(e)}/>\r\n    </div>\r\n  };\r\n\r\n  private renderInputOutputTab = () => {\r\n    const inputs: Array<InputDefinition> = this.workflowDefinition?.inputs ?? [];\r\n    const outputs: Array<OutputDefinition> = this.workflowDefinition?.outputs ?? [];\r\n    const outcomes: Array<string> = this.workflowDefinition?.outcomes ?? [];\r\n\r\n    return <div>\r\n      <elsa-workflow-definition-input-output-settings\r\n        inputs={inputs}\r\n        outputs={outputs}\r\n        outcomes={outcomes}\r\n        onInputsChanged={e => this.onInputsUpdated(e)}\r\n        onOutputsChanged={e => this.onOutputsUpdated(e)}\r\n        onOutcomesChanged={e => this.onOutcomesUpdated(e)}\r\n      />\r\n    </div>\r\n  };\r\n\r\n  private renderVersionHistoryTab = () => {\r\n    return <div>\r\n      <elsa-workflow-definition-version-history\r\n        selectedVersion={this.workflowDefinition}\r\n        workflowVersions={this.workflowVersions}\r\n      />\r\n    </div>\r\n  };\r\n\r\n  private onSelectedTabIndexChanged = (e: CustomEvent<TabChangedArgs>) => this.selectedTabIndex = e.detail.selectedTabIndex;\r\n\r\n  private onPropertyEditorChanged = (apply: (w: WorkflowDefinition) => void) => {\r\n    const workflowDefinition = this.workflowDefinition;\r\n    apply(workflowDefinition);\r\n    this.workflowPropsUpdated.emit({workflowDefinition: workflowDefinition});\r\n  }\r\n\r\n  private onVariablesUpdated = async (e: CustomEvent<Array<Variable>>) => this.onPropsUpdated('variables', e.detail)\r\n\r\n  private onInputsUpdated = async (e: CustomEvent<Array<InputDefinition>>) => this.onPropsUpdated('inputs', e.detail)\r\n  private onOutputsUpdated = async (e: CustomEvent<Array<OutputDefinition>>) => this.onPropsUpdated('outputs', e.detail)\r\n\r\n  private onOutcomesUpdated = async (e: CustomEvent<Array<string>>) => this.onPropsUpdated('outcomes', e.detail)\r\n\r\n  private onPropsUpdated = async (\r\n    propName: string,\r\n    propValue: Array<Variable> | Array<InputDefinition> | Array<OutputDefinition> | Array<string>\r\n  ) => {\r\n    const workflowDefinition = this.workflowDefinition;\r\n\r\n    if (!workflowDefinition || !workflowDefinition.isLatest) {\r\n      console.debug('onPropsUpdated: workflowDefinition is not latest');\r\n      return;\r\n    }\r\n\r\n    workflowDefinition[propName] = propValue;\r\n    const updatedTab = this.getPropEditorSectionByPropName(propName);\r\n    this.workflowPropsUpdated.emit({workflowDefinition, updatedTab});\r\n    await this.createModel();\r\n  };\r\n\r\n  private onWorkflowDefinitionUpdated = () => {\r\n    const workflowDefinition = this.workflowDefinition;\r\n    this.workflowPropsUpdated.emit({workflowDefinition});\r\n  };\r\n\r\n  private getPropEditorSectionByPropName(propName: string): WorkflowPropertiesEditorTabs {\r\n    const enumKey = Object.keys(WorkflowPropertiesEditorTabs).find(key => WorkflowPropertiesEditorTabs[key as keyof typeof WorkflowPropertiesEditorTabs] === propName);\r\n\r\n    if (enumKey) {\r\n      return WorkflowPropertiesEditorTabs[enumKey as keyof typeof WorkflowPropertiesEditorTabs];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n"],"version":3}