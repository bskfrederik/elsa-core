{"version":3,"file":"form-panel.js","sourceRoot":"","sources":["../../../../src/components/shared/form-panel/form-panel.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Component, Event, EventEmitter, h, Prop} from '@stencil/core';\r\nimport {TabChangedArgs, TabDefinition} from '../../../models';\r\nimport {isNullOrWhitespace} from \"../../../utils\";\r\nimport {PanelActionClickArgs, PanelActionDefinition, PanelActionType} from \"./models\";\r\n\r\n@Component({\r\n  tag: 'elsa-form-panel'\r\n})\r\nexport class FormPanel {\r\n  @Prop() public mainTitle: string;\r\n  @Prop() public subTitle: string;\r\n  @Prop() public isReadonly: boolean;\r\n  @Prop() public orientation: 'Landscape' | 'Portrait' = 'Portrait';\r\n  @Prop() public tabs: Array<TabDefinition> = [];\r\n  @Prop({mutable: true}) public selectedTabIndex?: number;\r\n  @Prop() public actions: Array<PanelActionDefinition> = [];\r\n\r\n  @Event() public submitted: EventEmitter<FormData>;\r\n  @Event() public selectedTabIndexChanged: EventEmitter<TabChangedArgs>;\r\n  @Event() public actionInvoked: EventEmitter<PanelActionClickArgs>;\r\n\r\n  public render() {\r\n    return this.renderPanel();\r\n  }\r\n\r\n  private onTabClick(e: Event, tab: TabDefinition) {\r\n    e.preventDefault();\r\n    const selectedTabIndex = this.selectedTabIndex = this.tabs.findIndex(x => tab == x);\r\n    this.selectedTabIndexChanged.emit({selectedTabIndex: selectedTabIndex});\r\n  }\r\n\r\n  private onSubmit(e: Event) {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target as HTMLFormElement);\r\n    this.submitted.emit(formData);\r\n  }\r\n\r\n  private renderPanel() {\r\n    const tabs = this.tabs.sort((a, b) => a.order < b.order ? -1 : a.order > b.order ? 1 : 0);\r\n    const selectedTabIndex = this.selectedTabIndex;\r\n    const actions = this.actions;\r\n    const mainTitle = this.mainTitle;\r\n    const subTitle = this.subTitle;\r\n    const orientation = this.orientation;\r\n    const readonly = this.isReadonly;\r\n\r\n    return (\r\n      <div class=\"tw-absolute tw-inset-0 tw-overflow-hidden\">\r\n        <form class=\"tw-h-full tw-flex tw-flex-col tw-bg-white tw-shadow-xl\" onSubmit={e => this.onSubmit(e)} method=\"post\">\r\n        \r\n          <div class=\"tw-flex tw-flex-col tw-flex-1\">\r\n\r\n            {orientation == 'Portrait' && (\r\n              <div class=\"tw-px-4 tw-py-6 tw-bg-gray-50\">\r\n\r\n                <div class=\"tw-flex tw-items-start tw-justify-between tw-space-x-3\">\r\n                  <div class=\"tw-space-y-1\">\r\n                    <h2 class=\"tw-text-lg tw-font-medium tw-text-gray-900\">\r\n                      {mainTitle}\r\n                    </h2>\r\n                    {!isNullOrWhitespace(subTitle) ? <h3 class=\"tw-text-sm tw-text-gray-700\">{subTitle}</h3> : undefined}\r\n                  </div>\r\n                </div>\r\n              </div>)}\r\n\r\n            {orientation == 'Landscape' && (\r\n              <div class=\"tw-px-10 tw-py-4 tw-bg-gray-50\">\r\n                <div class=\"tw-flex tw-items-start tw-justify-between tw-space-x-3\">\r\n                  <div class=\"tw-space-y-0\">\r\n                    <h2 class=\"tw-text-base tw-font-medium tw-text-gray-900\">\r\n                      {mainTitle}\r\n                    </h2>\r\n                    {!isNullOrWhitespace(subTitle) ? <h3 class=\"tw-text-xs tw-text-gray-700\">{subTitle}</h3> : undefined}\r\n                  </div>\r\n                </div>\r\n              </div>)}\r\n\r\n            <div class={`tw-border-b tw-border-gray-200 ${orientation == 'Landscape' ? 'tw-pl-10' : 'tw-pl-4'}`}>\r\n              <nav class=\"-tw-mb-px tw-flex tw-justify-start tw-space-x-5\" aria-label=\"Tabs\">\r\n                {tabs.map((tab, tabIndex) => {\r\n                  const cssClass = tabIndex == selectedTabIndex ? 'tw-border-blue-500 tw-text-blue-600' : 'tw-border-transparent tw-text-gray-500 hover:tw-text-gray-700 hover:tw-border-gray-300';\r\n                  return <a href=\"#\"\r\n                            onClick={e => this.onTabClick(e, tab)}\r\n                            class={`${cssClass} tw-py-4 tw-px-1 tw-text-center tw-border-b-2 tw-font-medium tw-text-sm`}>\r\n                    {tab.displayText}\r\n                  </a>\r\n                })}\r\n              </nav>\r\n            </div>\r\n\r\n            <div class={`tw-flex-1 tw-relative`}>\r\n              <div class={`tw-absolute tw-inset-0 tw-overflow-y-scroll ${orientation == 'Landscape' ? 'tw-px-6' : ''}`}>\r\n               \r\n                {tabs.map((tab, tabIndex) => {\r\n                  const cssClass = tabIndex == selectedTabIndex ? '' : 'hidden';\r\n                  return <div class={cssClass}>\r\n                    <fieldset disabled={readonly}>\r\n                      {tab.content()}\r\n                    </fieldset>\r\n                  </div>\r\n                })}\r\n               \r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {actions.length > 0 ? (\r\n            <div class=\"tw-flex-shrink-0 tw-px-4 tw-border-t tw-border-gray-200 tw-py-5 sm:tw-px-6\">\r\n              <div class=\"tw-space-x-3 tw-flex tw-justify-end\">\r\n                {actions.map(action => {\r\n\r\n                  if (action.display)\r\n                    return action.display(action);\r\n\r\n                  const cssClass = action.isPrimary\r\n                    ? 'tw-text-white tw-bg-blue-600 hover:tw-bg-blue-700 tw-border-transparent focus:tw-ring-blue-500'\r\n                    : action.isDangerous ? 'tw-text-white tw-bg-red-600 hover:tw-bg-red-700 tw-border-transparent focus:tw-ring-red-500'\r\n                      : 'tw-bg-white tw-border-gray-300 tw-text-gray-700 hover:tw-bg-gray-50 focus:tw-ring-blue-500';\r\n\r\n                  const buttonType = action.type == PanelActionType.Submit ? 'submit' : 'button';\r\n\r\n                  const cancelHandler = () => {\r\n                  };\r\n\r\n                  const defaultHandler = (e: any, action: PanelActionDefinition) => this.actionInvoked.emit({e, action: action});\r\n                  const clickHandler = !!action.onClick ? action.onClick : action.type == PanelActionType.Cancel ? cancelHandler : defaultHandler;\r\n\r\n                  return <button type={buttonType}\r\n                                 onClick={e => clickHandler(e, action)}\r\n                                 class={`${cssClass} tw-py-2 tw-px-4 tw-border tw-rounded-md tw-shadow-sm tw-text-sm tw-font-medium focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-offset-2`}>\r\n                    {action.text}\r\n                  </button>\r\n                })}\r\n              </div>\r\n              </div>) : undefined}\r\n        \r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}