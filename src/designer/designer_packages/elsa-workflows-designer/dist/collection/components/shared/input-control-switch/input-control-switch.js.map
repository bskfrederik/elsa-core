{"version":3,"file":"input-control-switch.js","sourceRoot":"","sources":["../../../../src/components/shared/input-control-switch/input-control-switch.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Component, Event, EventEmitter, Listen, h, Prop, State} from '@stencil/core';\r\nimport {debounce} from 'lodash';\r\nimport {enter, leave, toggle} from 'el-transition'\r\nimport {IntellisenseContext, SyntaxNames} from \"../../../models\";\r\nimport {SyntaxSelectorIcon} from \"../../icons/tooling/syntax-selector\";\r\nimport {MonacoValueChangedArgs} from \"../monaco-editor/monaco-editor\";\r\nimport {Hint} from \"../forms/hint\";\r\nimport {mapSyntaxToLanguage} from \"../../../utils\";\r\nimport {Container} from \"typedi\";\r\nimport {ElsaClientProvider} from \"../../../services\";\r\nimport InputControlSwitchContextState from \"./state\";\r\n\r\nexport interface ExpressionChangedArs {\r\n  expression: string;\r\n  syntax: string;\r\n}\r\n\r\n@Component({\r\n  tag: 'elsa-input-control-switch',\r\n  shadow: false,\r\n})\r\nexport class InputControlSwitch {\r\n  private contextMenu: HTMLElement;\r\n  private monacoEditor: HTMLElsaMonacoEditorElement;\r\n  private contextMenuWidget: HTMLElement;\r\n  private readonly onExpressionChangedDebounced: (e: MonacoValueChangedArgs) => void;\r\n\r\n  constructor() {\r\n    this.onExpressionChangedDebounced = debounce(this.onExpressionChanged, 10);\r\n  }\r\n\r\n  // Tunneled props.\r\n  @Prop({mutable: true}) workflowDefinitionId: string;\r\n  @Prop({mutable: true}) activityType: string;\r\n  @Prop({mutable: true}) propertyName: string;\r\n\r\n  @Prop() label: string;\r\n  @Prop() hideLabel: boolean;\r\n  @Prop() hint: string;\r\n  @Prop() fieldName?: string;\r\n  @Prop() syntax?: string;\r\n  @Prop() expression?: string;\r\n  @Prop() defaultSyntax: string = SyntaxNames.Literal;\r\n  @Prop() supportedSyntaxes: Array<string> = ['JavaScript', 'Liquid']; // TODO: Get available syntaxes from server.\r\n  @Prop() isReadOnly?: boolean;\r\n  @Prop() codeEditorHeight: string = '16em';\r\n  @Prop() codeEditorSingleLineMode: boolean = false;\r\n  @Prop() context?: IntellisenseContext;\r\n\r\n  @Event() syntaxChanged: EventEmitter<string>;\r\n  @Event() expressionChanged: EventEmitter<ExpressionChangedArs>;\r\n\r\n  @State() currentExpression?: string;\r\n\r\n  @Listen('click', {target: 'window'})\r\n  private onWindowClicked(event: Event) {\r\n    const target = event.target as HTMLElement;\r\n\r\n    if (!this.contextMenuWidget || !this.contextMenuWidget.contains(target))\r\n      this.closeContextMenu();\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    this.currentExpression = this.expression;\r\n  }\r\n\r\n  async componentDidLoad() {\r\n    const elsaClient = await Container.get(ElsaClientProvider).getElsaClient();\r\n    const workflowDefinitionId = this.workflowDefinitionId;\r\n    const activityTypeName = this.activityType;\r\n    const propertyName = this.propertyName;\r\n    const typeDefinitions = await elsaClient.scripting.javaScriptApi.getTypeDefinitions({workflowDefinitionId, activityTypeName, propertyName});\r\n    const libUri = 'defaultLib:lib.es6.d.ts';\r\n    await this.monacoEditor.addJavaScriptLib(typeDefinitions, libUri);\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.hideLabel && !this.shouldRenderMonaco()) {\r\n      return <div class=\"tw-p-4\">\r\n        <div class=\"tw-flex\">\r\n          <div class=\"tw-flex-1\">\r\n            {this.renderEditor()}\r\n          </div>\r\n          {this.renderContextMenuWidget()}\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n    return <div class=\"tw-p-4\">\r\n      <div class=\"tw-mb-1\">\r\n        <div class=\"tw-flex\">\r\n          <div class=\"tw-flex-1\">\r\n            {this.renderLabel()}\r\n          </div>\r\n          {this.renderContextMenuWidget()}\r\n        </div>\r\n      </div>\r\n      {this.renderEditor()}\r\n    </div>\r\n  }\r\n\r\n  private renderLabel() {\r\n    const fieldId = this.fieldName;\r\n    const fieldLabel = this.label || fieldId;\r\n\r\n    return <label htmlFor={fieldId} class=\"tw-block tw-text-sm tw-font-medium tw-text-gray-700\">\r\n      {fieldLabel}\r\n    </label>;\r\n  }\r\n\r\n  private renderContextMenuWidget() {\r\n    if (this.supportedSyntaxes.length == 0)\r\n      return undefined;\r\n\r\n    const selectedSyntax = this.syntax;\r\n    const advancedButtonClass = selectedSyntax ? 'tw-text-blue-500' : 'tw-text-gray-300'\r\n\r\n    return <div class=\"tw-relative\" ref={el => this.contextMenuWidget = el}>\r\n      <button type=\"button\" class={`tw-border-0 focus:tw-outline-none tw-text-sm ${advancedButtonClass}`} onClick={e => this.onSettingsClick(e)}>\r\n        {!this.isReadOnly ? this.renderContextMenuButton() : \"\"}\r\n      </button>\r\n      <div>\r\n        <div ref={el => this.contextMenu = el}\r\n             data-transition-enter=\"tw-transition tw-ease-out tw-duration-100\"\r\n             data-transition-enter-start=\"tw-transform tw-opacity-0 tw-scale-95\"\r\n             data-transition-enter-end=\"tw-transform tw-opacity-100 tw-scale-100\"\r\n             data-transition-leave=\"tw-transition tw-ease-in tw-duration-75\"\r\n             data-transition-leave-start=\"tw-transform tw-opacity-100 tw-scale-100\"\r\n             data-transition-leave-end=\"tw-transform tw-opacity-0 tw-scale-95\"\r\n             class=\"hidden tw-origin-top-right tw-absolute tw-right-1 tw-mt-1 tw-w-56 tw-rounded-md tw-shadow-lg tw-bg-white tw-ring-1 tw-ring-black tw-ring-opacity-5 tw-divide-y tw-divide-gray-100 focus:tw-outline-none tw-z-10\" role=\"menu\"\r\n             aria-orientation=\"vertical\"\r\n             aria-labelledby=\"options-menu\">\r\n          <div class=\"tw-py-1\" role=\"none\">\r\n            <a onClick={e => this.selectSyntax(e, null)} href=\"#\" class={`tw-block tw-px-4 tw-py-2 tw-text-sm hover:tw-bg-gray-100 hover:tw-text-gray-900 ${!selectedSyntax ? 'tw-text-blue-700' : 'tw-text-gray-700'}`} role=\"menuitem\">Default</a>\r\n          </div>\r\n          <div class=\"tw-py-1\" role=\"none\">\r\n            {this.supportedSyntaxes.map(syntax => (\r\n              <a onClick={e => this.selectSyntax(e, syntax)} href=\"#\"\r\n                 class={`tw-block tw-px-4 tw-py-2 tw-text-sm hover:tw-bg-gray-100 hover:tw-text-gray-900 ${selectedSyntax == syntax ? 'tw-text-blue-700' : 'tw-text-gray-700'}`} role=\"menuitem\">{syntax}</a>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n  }\r\n\r\n  private shouldRenderMonaco = () => !!this.syntax && this.syntax != 'Literal' && !!this.supportedSyntaxes.find(x => x === this.syntax)\r\n  private renderContextMenuButton = () => this.shouldRenderMonaco() ? <span>{this.syntax}</span> : <SyntaxSelectorIcon/>;\r\n\r\n  private renderEditor = () => {\r\n    const selectedSyntax = this.syntax;\r\n    const monacoLanguage = mapSyntaxToLanguage(selectedSyntax);\r\n    const value = this.expression;\r\n    const showMonaco = !!selectedSyntax && selectedSyntax != 'Literal' && !!this.supportedSyntaxes.find(x => x === selectedSyntax);\r\n    const expressionEditorClass = showMonaco ? 'tw-block' : 'hidden';\r\n    const defaultEditorClass = showMonaco ? 'hidden' : 'tw-block';\r\n\r\n    return (\r\n      <div>\r\n        <div class={expressionEditorClass}>\r\n          <elsa-monaco-editor\r\n            value={value}\r\n            language={monacoLanguage}\r\n            editor-height={this.codeEditorHeight}\r\n            single-line={this.codeEditorSingleLineMode}\r\n            onValueChanged={e => this.onExpressionChangedDebounced(e.detail)}\r\n            ref={el => this.monacoEditor = el}/>\r\n        </div>\r\n        <div class={defaultEditorClass}>\r\n          <slot/>\r\n        </div>\r\n        <Hint text={this.hint}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private toggleContextMenu() {\r\n    toggle(this.contextMenu);\r\n  }\r\n\r\n  private openContextMenu() {\r\n    enter(this.contextMenu);\r\n  }\r\n\r\n  private closeContextMenu() {\r\n    if (!!this.contextMenu)\r\n      leave(this.contextMenu);\r\n  }\r\n\r\n  private selectDefaultEditor(e: Event) {\r\n    e.preventDefault();\r\n    this.syntax = undefined;\r\n    this.closeContextMenu();\r\n  }\r\n\r\n  private async selectSyntax(e: Event, syntax: string) {\r\n    e.preventDefault();\r\n\r\n    this.syntax = syntax;\r\n    this.syntaxChanged.emit(syntax);\r\n    this.expressionChanged.emit({expression: this.currentExpression, syntax});\r\n\r\n    this.closeContextMenu();\r\n  }\r\n\r\n  private onSettingsClick(e: Event) {\r\n    this.toggleContextMenu();\r\n  }\r\n\r\n  private onExpressionChanged(e: MonacoValueChangedArgs) {\r\n    const expression = e.value;\r\n    this.currentExpression = expression;\r\n    this.expressionChanged.emit({expression, syntax: this.syntax});\r\n  }\r\n}\r\n\r\nInputControlSwitchContextState.injectProps(InputControlSwitch, ['workflowDefinitionId', 'activityType', 'propertyName'])\r\n"]}