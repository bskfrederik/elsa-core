{"version":3,"file":"modal-dialog.js","sourceRoot":"","sources":["../../../../src/components/shared/modal-dialog/modal-dialog.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Component, Host, h, State, Listen, Method, Event, Element, EventEmitter, Prop} from '@stencil/core';\r\nimport {enter, leave} from 'el-transition'\r\nimport {ModalActionClickArgs, ModalActionDefinition, ModalActionType, ModalDialogInstance} from \"./models\";\r\nimport {ModalType} from \"./modal-type\";\r\n\r\n@Component({\r\n  tag: 'elsa-modal-dialog',\r\n  shadow: false,\r\n})\r\nexport class ModalDialog {\r\n  private overlay: HTMLElement\r\n  private modal: HTMLElement\r\n\r\n  @Prop() modalDialogInstance: ModalDialogInstance;\r\n  @Prop() actions: Array<ModalActionDefinition> = [];\r\n  @Prop() size: string = 'tw-max-w-6xl';\r\n  @Prop() type: ModalType = ModalType.Default;\r\n  @Prop() autoHide: boolean = true;\r\n  @Prop() content: () => any = () => <div/>;\r\n  @Event() shown: EventEmitter;\r\n  @Event() hidden: EventEmitter;\r\n  @Event() actionInvoked: EventEmitter<ModalActionClickArgs>;\r\n  @State() private isVisible: boolean = true;\r\n  @Element() element;\r\n\r\n  @Method()\r\n  async show(animate: boolean = true) {\r\n    this.showInternal(animate);\r\n  }\r\n\r\n  @Method()\r\n  async hide(animate: boolean = true) {\r\n    this.hideInternal(animate);\r\n  }\r\n\r\n  handleDefaultClose = async () => {\r\n    await this.hide();\r\n  }\r\n\r\n  showInternal(animate: boolean) {\r\n    this.isVisible = true;\r\n\r\n    if (!animate) {\r\n      this.overlay.style.opacity = '1';\r\n      this.modal.style.opacity = '1';\r\n    }\r\n\r\n    enter(this.overlay);\r\n    enter(this.modal).then(this.shown.emit);\r\n  }\r\n\r\n  hideInternal(animate: boolean) {\r\n    if (!animate) {\r\n      this.isVisible = false\r\n    }\r\n\r\n    leave(this.overlay);\r\n    leave(this.modal).then(() => {\r\n      this.isVisible = false;\r\n      this.hidden.emit();\r\n    });\r\n  }\r\n\r\n  @Listen('keydown', {target: 'window'})\r\n  async handleKeyDown(e: KeyboardEvent) {\r\n    if (this.isVisible && e.key === 'Escape') {\r\n      await this.hide(true);\r\n    }\r\n  }\r\n\r\n  componentDidRender() {\r\n    if (this.isVisible) {\r\n      enter(this.overlay);\r\n      enter(this.modal).then(this.shown.emit);\r\n    }\r\n\r\n    this.modalDialogInstance.modalDialogContentRef = this.element.querySelector('.modal-content').children[0];\r\n  }\r\n\r\n  render() {\r\n    const actions = this.actions;\r\n    const content = this.content();\r\n\r\n    return (\r\n      <Host class={{'hidden': !this.isVisible, 'tw-block': true}}>\r\n        <div class=\"tw-fixed tw-z-50 tw-inset-0 tw-overflow-y-auto\">\r\n          <div class=\"tw-flex tw-items-end tw-justify-center tw-min-tw-h-screen tw-pt-4 tw-px-4 tw-pb-20 tw-text-center sm:tw-block sm:tw-p-0\">\r\n            <div ref={el => this.overlay = el}\r\n                 onClick={() => this.hide(true)}\r\n                 data-transition-enter=\"tw-ease-out tw-duration-300\" data-transition-enter-start=\"tw-opacity-0\"\r\n                 data-transition-enter-end=\"tw-opacity-0\" data-transition-leave=\"tw-ease-in tw-duration-200\"\r\n                 data-transition-leave-start=\"tw-opacity-0\" data-transition-leave-end=\"tw-opacity-0\"\r\n                 class=\"hidden tw-fixed tw-inset-0 tw-transition-opacity\" aria-hidden=\"true\">\r\n              <div class=\"tw-absolute tw-inset-0 tw-bg-gray-500 tw-opacity-75\"/>\r\n            </div>\r\n\r\n            <span class=\"hidden sm:tw-inline-block sm:tw-align-middle sm:tw-h-screen\" aria-hidden=\"true\"/>\r\n            <div ref={el => this.modal = el}\r\n                 data-transition-enter=\"tw-ease-out tw-duration-300\"\r\n                 data-transition-enter-start=\"tw-opacity-0 tw-translate-y-4 sm:tw-translate-y-0 sm:tw-scale-95\"\r\n                 data-transition-enter-end=\"tw-opacity-0 tw-translate-y-0 sm:tw-scale-100\"\r\n                 data-transition-leave=\"tw-ease-in tw-duration-200\"\r\n                 data-transition-leave-start=\"tw-opacity-0 tw-translate-y-0 sm:tw-scale-100\"\r\n                 data-transition-leave-end=\"tw-opacity-0 tw-translate-y-4 sm:tw-translate-y-0 sm:tw-scale-95\"\r\n                 class={`hidden tw-inline-block sm:tw-align-top tw-bg-white tw-rounded-lg tw-text-left tw-overflow-visible tw-shadow-xl tw-transform tw-transition-all sm:tw-my-8 sm:tw-align-top ${this.size}`}\r\n                 role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\r\n              <div class=\"modal-content\">\r\n                {content}\r\n              </div>\r\n\r\n              <div class=\"tw-bg-gray-50 tw-px-4 tw-py-3 sm:tw-px-6 sm:tw-flex sm:tw-flex-row-reverse\">\r\n\r\n                {actions.map(action => {\r\n\r\n                  if (action.display)\r\n                    return action.display(action);\r\n\r\n                  const cssClass = action.isPrimary\r\n                    ? 'tw-text-white tw-bg-blue-600 hover:tw-bg-blue-700 tw-border-transparent focus:tw-ring-blue-500'\r\n                    : action.isDangerous ? 'tw-text-white tw-bg-red-600 hover:tw-bg-red-700 tw-border-transparent focus:tw-ring-red-500'\r\n                      : 'tw-bg-white tw-border-gray-300 tw-text-gray-700 hover:tw-bg-gray-50 focus:tw-ring-blue-500';\r\n\r\n                  const buttonType = action.type == ModalActionType.Submit ? 'submit' : 'button';\r\n                  const cancelHandler = () => this.hideInternal(true);\r\n                  const defaultHandler = (args: ModalActionClickArgs) => this.actionInvoked.emit(args);\r\n                  const clickHandler = !!action.onClick ? action.onClick : action.type == ModalActionType.Cancel ? cancelHandler : defaultHandler;\r\n\r\n                  return <button type={buttonType}\r\n                                 onClick={e => {\r\n                                   clickHandler({e, action, instance: this.modalDialogInstance});\r\n                                   if (this.autoHide)\r\n                                     this.hideInternal(true);\r\n                                 }}\r\n                                 class={`${cssClass} tw-mt-3 tw-w-full tw-inline-flex tw-justify-center tw-rounded-md tw-border tw-shadow-sm tw-px-4 tw-py-2 tw-text-base tw-font-medium focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-offset-2 sm:tw-mt-0 sm:tw-ml-3 sm:tw-w-auto sm:tw-text-sm`}>\r\n                    {action.text}\r\n                  </button>\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}