{"version":3,"file":"workflow-toolbar-menu.js","sourceRoot":"","sources":["../../../../src/components/toolbar/workflow-toolbar-menu/workflow-toolbar-menu.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Component, Event, EventEmitter, Host, h, Listen, Prop, State} from '@stencil/core';\r\nimport {leave, toggle} from 'el-transition';\r\nimport {EventBus} from \"../../../services\";\r\nimport {Container} from \"typedi\";\r\nimport {ToolbarMenuItem} from \"./models\";\r\nimport toolbarButtonMenuItemStore from \"../../../data/toolbar-button-menu-item-store\";\r\nimport NotificationService from \"../../../modules/notifications/notification-service\";\r\n\r\n@Component({\r\n  tag: 'elsa-workflow-toolbar-menu',\r\n  shadow: false,\r\n})\r\nexport class WorkflowToolbarMenu {\r\n  private readonly eventBus: EventBus;\r\n  private menu: HTMLElement;\r\n  private element: HTMLElement;\r\n  private isMenuOpen = false;\r\n\r\n  constructor() {\r\n    this.eventBus = Container.get(EventBus);\r\n  }\r\n\r\n  private closeMenu = () => {\r\n    leave(this.menu);\r\n    this.isMenuOpen = false;\r\n  };\r\n\r\n  private toggleMenu = () => {\r\n    toggle(this.menu);\r\n    this.isMenuOpen = !this.isMenuOpen;\r\n    if (this.isMenuOpen) {\r\n      NotificationService.hideAllNotifications();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const menuItems: Array<ToolbarMenuItem> = toolbarButtonMenuItemStore.items;\r\n\r\n    return (\r\n      <Host class=\"tw-block\" ref={el => this.element = el}>\r\n        <div class=\"elsa-toolbar-menu-wrapper tw-relative\">\r\n          <div>\r\n            <button onClick={() => this.toggleMenu()}\r\n                    type=\"button\"\r\n                    class=\"tw-bg-gray-800 tw-flex tw-text-sm tw-rounded-full focus:tw-outline-none focus:tw-ring-1 focus:tw-ring-offset-1 focus:tw-ring-gray-600\"\r\n                    aria-expanded=\"false\" aria-haspopup=\"true\">\r\n              <span class=\"tw-sr-only\">Open user menu</span>\r\n              <svg class=\"tw-h-8 tw-w-8 tw-text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div ref={el => this.menu = el}\r\n               data-transition-enter=\"tw-transition tw-ease-out tw-duration-100\"\r\n               data-transition-enter-start=\"tw-transform tw-opacity-0 tw-scale-95\"\r\n               data-transition-enter-end=\"tw-transform tw-opacity-100 tw-scale-100\"\r\n               data-transition-leave=\"tw-transition tw-ease-in tw-duration-75\"\r\n               data-transition-leave-start=\"tw-transform tw-opacity-100 tw-scale-100\"\r\n               data-transition-leave-end=\"tw-transform tw-opacity-0 tw-scale-95\"\r\n               class=\"hidden tw-origin-top-right tw-absolute tw-right-0 tw-mt-2 tw-w-48 tw-rounded-md tw-shadow-lg tw-py-1 tw-bg-white tw-ring-1 tw-ring-black tw-ring-opacity-5 focus:tw-outline-none\"\r\n               role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu-button\" tabindex=\"-1\">\r\n            {menuItems.map(menuItem => <a onClick={e => this.onMenuItemClick(e, menuItem)} href=\"#\" role=\"menuitem\" tabindex=\"-1\">{menuItem.text}</a>)}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  @Listen('click', {target: 'window'})\r\n  private onWindowClicked(event: Event) {\r\n    const target = event.target as HTMLElement;\r\n\r\n    if (!this.element.contains(target))\r\n      this.closeMenu();\r\n  }\r\n\r\n  private onMenuItemClick = async (e: MouseEvent, menuItem: ToolbarMenuItem) => {\r\n    e.preventDefault();\r\n    await menuItem.onClick();\r\n    this.closeMenu();\r\n  };\r\n}\r\n"]}