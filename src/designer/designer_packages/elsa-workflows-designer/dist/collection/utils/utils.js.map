{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport {v4 as uuid} from 'uuid';\r\nimport _, {camelCase} from 'lodash';\r\nimport {ActivityInput, VersionOptions} from '../models';\r\nimport {ActivityInputContext} from '../services/activity-input-driver';\r\n\r\nexport interface Hash<TValue> {\r\n  [key: string]: TValue;\r\n}\r\n\r\nexport function formatTimestamp(timestamp?: Date, defaultText?: string): string {\r\n  return !!timestamp ? moment(timestamp).format('DD-MM-YYYY HH:mm:ss') : defaultText;\r\n}\r\n\r\nexport function formatTime(timestamp?: Date, defaultText?: string): string {\r\n  return !!timestamp ? moment(timestamp).format('HH:mm:ss') : defaultText;\r\n}\r\n\r\nexport function getDuration(a: Date, b: Date): moment.Duration {\r\n  const diff = moment(a).diff(moment(b));\r\n  return moment.duration(diff);\r\n}\r\n\r\nexport function getObjectOrParseJson(value: string | object) {\r\n  return typeof value === 'string' ? parseJson(value) : value;\r\n}\r\n\r\nexport function parseJson(json: string): any {\r\n  if (!json)\r\n    return null;\r\n\r\n  if (json.trim().length === 0)\r\n    return null;\r\n\r\n  try {\r\n    return JSON.parse(json);\r\n  } catch (e) {\r\n    console.warn(`Error parsing JSON: ${e}`);\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport const getVersionOptionsString = (versionOptions?: VersionOptions) => {\r\n\r\n  if (!versionOptions)\r\n    return '';\r\n\r\n  return versionOptions.allVersions\r\n    ? 'AllVersions'\r\n    : versionOptions.isDraft\r\n      ? 'Draft'\r\n      : versionOptions.isLatest\r\n        ? 'Latest'\r\n        : versionOptions.isPublished\r\n          ? 'Published'\r\n          : versionOptions.isLatestOrPublished\r\n            ? 'LatestOrPublished'\r\n            : versionOptions.version.toString();\r\n};\r\n\r\nexport const mapSyntaxToLanguage = (syntax: string): string => {\r\n  switch (syntax) {\r\n    case 'Json':\r\n      return 'json';\r\n    case 'JavaScript':\r\n      return 'javascript';\r\n    case 'Liquid':\r\n      return 'handlebars';\r\n    default:\r\n      return 'plaintext';\r\n  }\r\n};\r\n\r\nexport const getInputPropertyName = (inputContext: ActivityInputContext) => {\r\n  const inputProperty = inputContext.inputDescriptor;\r\n  const propertyName = inputProperty.name;\r\n  return camelCase(propertyName);\r\n}\r\n\r\nexport const getInputPropertyValue = (inputContext: ActivityInputContext): ActivityInput => {\r\n  const propName = getInputPropertyName(inputContext);\r\n  return inputContext.activity[propName] as ActivityInput;\r\n};\r\n\r\nexport const getPropertyValue = (inputContext: ActivityInputContext): any => {\r\n  const propName = getInputPropertyName(inputContext);\r\n  return inputContext.activity[propName] as any\r\n};\r\n\r\nexport const stripActivityNameSpace = (name: string): string => {\r\n  const lastDotIndex = name.lastIndexOf('.');\r\n  return lastDotIndex < 0 ? name : name.substr(lastDotIndex + 1);\r\n};\r\n\r\nexport const isNullOrWhitespace = (input) => !input || !input.trim();\r\n\r\nexport const serializeQueryString = (queryString: object): string => {\r\n  const filteredItems = _(queryString).omitBy(_.isUndefined).omitBy(_.isNull).value();\r\n  const queryStringItems = _.map(filteredItems, (v: any, k) => {\r\n    if (Array.isArray(v)) {\r\n      return v.map(item => `${k}=${item}`).join('&');\r\n    }\r\n    ;\r\n    return `${k}=${v}`;\r\n  });\r\n  return queryStringItems.length > 0 ? `?${queryStringItems.join('&')}` : '';\r\n};\r\n\r\nexport function durationToString(duration: moment.Duration) {\r\n  return !!duration ? duration.asHours() > 1\r\n      ? `${duration.asHours().toFixed(3)} h`\r\n      : duration.asMinutes() > 1\r\n        ? `${duration.asMinutes().toFixed(3)} m`\r\n        : duration.asSeconds() > 1\r\n          ? `${duration.asSeconds().toFixed(3)} s`\r\n          : `${duration.asMilliseconds()} ms`\r\n    : null;\r\n}\r\n\r\nexport function htmlToElement<TElement>(html: string): TElement {\r\n  const template = document.createElement('template');\r\n  html = html.trim(); // Never return a text node of whitespace as the result\r\n  template.innerHTML = html;\r\n  return template.content.firstChild as unknown as TElement;\r\n}\r\n\r\nexport function generateIdentity() {\r\n  return uuid().replace(/-/g, '');\r\n}\r\n\r\nexport function formatTextWithLineBreaks(text: any) {\r\n  if(typeof(text) != 'string')\r\n    return text;\r\n\r\n  return text?.replace(/\\n/g, '<br />');\r\n}\r\n"]}