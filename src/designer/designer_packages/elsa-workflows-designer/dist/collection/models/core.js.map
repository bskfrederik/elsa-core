{"version":3,"file":"core.js","sourceRoot":"","sources":["../../src/models/core.ts"],"names":[],"mappings":"AAGA,MAAM,CAAN,IAAY,YAKX;AALD,WAAY,YAAY;EACtB,iCAAiB,CAAA;EACjB,mCAAmB,CAAA;EACnB,2BAAW,CAAA;EACX,6BAAa,CAAA;AACf,CAAC,EALW,YAAY,KAAZ,YAAY,QAKvB;AAkHD,MAAM,CAAN,IAAY,QAGX;AAHD,WAAY,QAAQ;EAClB,iCAAqB,CAAA;EACrB,yBAAa,CAAA;AACf,CAAC,EAHW,QAAQ,KAAR,QAAQ,QAGnB;AA6BD,MAAM,CAAN,IAAY,WAKX;AALD,WAAY,WAAW;EACrB,kCAAmB,CAAA;EACnB,wCAAyB,CAAA;EACzB,gCAAiB,CAAA;EACjB,gCAAiB,CAAA;AACnB,CAAC,EALW,WAAW,KAAX,WAAW,QAKtB","sourcesContent":["import {Type} from \"./shared\";\r\nimport {Expression} from \"./expressions\";\r\n\r\nexport enum ActivityKind {\r\n  Action = 'Action',\r\n  Trigger = 'Trigger',\r\n  Job = 'Job',\r\n  Task = 'Task'\r\n}\r\n\r\nexport type Lookup<T> = { [key: string]: T };\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  type: string;\r\n  version: number;\r\n  metadata: any;\r\n  canStartWorkflow?: boolean;\r\n  runAsynchronously?: boolean;\r\n  customProperties: any;\r\n\r\n  [name: string]: any;\r\n}\r\n\r\nexport interface Trigger extends Activity {\r\n}\r\n\r\nexport interface Container extends Activity {\r\n  activities: Array<Activity>;\r\n  variables: Array<Variable>;\r\n}\r\n\r\nexport interface Workflow extends Activity {\r\n  root: Activity;\r\n  variables: Array<Variable>;\r\n}\r\n\r\nexport interface Variable {\r\n  id: string;\r\n  name: string;\r\n  typeName: string;\r\n  isArray: boolean;\r\n  value?: any;\r\n  storageDriverTypeName?: string;\r\n}\r\n\r\nexport interface ActivityInput {\r\n  typeName: Type;\r\n  expression: Expression;\r\n  memoryReference: MemoryReference;\r\n}\r\n\r\nexport interface ActivityOutput {\r\n  typeName: Type;\r\n  memoryReference: MemoryReference;\r\n}\r\n\r\nexport interface MemoryReference {\r\n  id: string;\r\n}\r\n\r\nexport interface VersionedEntity {\r\n  id: string;\r\n  version: number;\r\n  isLatest: boolean;\r\n  isPublished: boolean;\r\n  createdAt?: Date;\r\n}\r\n\r\nexport interface WorkflowState {\r\n  id: string;\r\n  activityOutput: Map<string, Map<string, any>>;\r\n  completionCallbacks: Array<CompletionCallbackState>;\r\n  activityExecutionContexts: Array<ActivityExecutionContextState>;\r\n  properties: Map<string, any>;\r\n}\r\n\r\nexport interface ActivityDescriptor {\r\n  typeName: string;\r\n  version: number;\r\n  displayName: string;\r\n  category: string;\r\n  description: string;\r\n  inputs: Array<InputDescriptor>;\r\n  outputs: Array<OutputDescriptor>;\r\n  kind: ActivityKind;\r\n  ports: Array<Port>;\r\n  customProperties: any;\r\n  isContainer: boolean;\r\n  isBrowsable: boolean;\r\n}\r\n\r\nexport interface PropertyDescriptor {\r\n  name: string;\r\n  typeName: Type;\r\n  displayName?: string;\r\n  description?: string;\r\n  order?: number;\r\n  isBrowsable?: boolean;\r\n}\r\n\r\nexport interface InputDescriptor extends PropertyDescriptor {\r\n  isWrapped?: boolean;\r\n  uiHint?: string;\r\n  options?: any;\r\n  category?: string;\r\n  defaultValue?: any;\r\n  defaultSyntax?: string;\r\n  supportedSyntaxes?: Array<string>;\r\n  isReadOnly?: boolean;\r\n}\r\n\r\nexport interface OutputDescriptor extends PropertyDescriptor {\r\n}\r\n\r\nexport interface Port {\r\n  name: string;\r\n  displayName: string;\r\n  type: PortType;\r\n  isBrowsable?: boolean;\r\n}\r\n\r\nexport enum PortType {\r\n  Embedded = 'Embedded',\r\n  Flow = 'Flow'\r\n}\r\n\r\nexport interface CompletionCallbackState {\r\n  ownerId: string;\r\n  childId: string;\r\n  methodName: string;\r\n}\r\n\r\nexport interface ActivityExecutionContextState {\r\n  id: string;\r\n  parentActivityExecutionContextId?: string;\r\n  scheduledActivityId: string;\r\n  ownerActivityId?: string;\r\n  properties: Map<string, any>;\r\n}\r\n\r\nexport interface WorkflowExecutionLogRecord {\r\n  id: string;\r\n  nodeId: string;\r\n  activityInstanceId: string;\r\n  parentActivityInstanceId?: string;\r\n  activityId: string;\r\n  activityType: string;\r\n  timestamp: Date;\r\n  eventName: string;\r\n  payload?: any;\r\n  activityState: Map<string, any>;\r\n}\r\n\r\nexport enum SyntaxNames {\r\n  Literal = 'Literal',\r\n  JavaScript = 'JavaScript',\r\n  Liquid = 'Liquid',\r\n  Object = 'Object'\r\n}\r\n\r\nexport interface ActivityMetadata {\r\n  displayText: string;\r\n  designer: ActivityDesignerMetadata;\r\n}\r\n\r\nexport interface ActivityDesignerMetadata {\r\n  position: Point\r\n}\r\n\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n"]}