{"version":3,"file":"input-control-registry.js","sourceRoot":"","sources":["../../src/services/input-control-registry.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAC,CAAC,EAAC,MAAM,eAAe,CAAC;AAChC,OAAO,EAAC,OAAO,EAAC,MAAM,QAAQ,CAAC;AAK/B,wDAAwD;AAEjD,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;EAG/B;IAFQ,aAAQ,GAAgD,IAAI,GAAG,EAA0C,CAAC;IAGhH,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,8BAAwB,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACzE,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,6BAAuB,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACvE,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,2BAAqB,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACnE,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,6BAAuB,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACvE,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,6BAAuB,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACvE,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,6BAAuB,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACvE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,8BAAwB,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACzE,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,2BAAqB,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACnE,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAC,kCAA4B,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACjF,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,8BAAwB,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACzE,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,gCAA0B,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IAC7E,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,iCAA2B,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;EACjF,CAAC;EAEM,GAAG,CAAC,MAAc,EAAE,OAAuC;IAChE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;EACrC,CAAC;EAEM,GAAG,CAAC,MAAc;IACvB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EACnC,CAAC;EAED,GAAG,CAAC,MAAc;IAChB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EACnC,CAAC;CACF,CAAA;AA7BY,oBAAoB;EADhC,OAAO,EAAE;;GACG,oBAAoB,CA6BhC;SA7BY,oBAAoB","sourcesContent":["import {h} from '@stencil/core';\r\nimport {Service} from \"typedi\";\r\nimport {UIHint} from \"../models\";\r\n\r\nexport type RenderActivityPropInputControl = (InputContext) => any;\r\n\r\n// A registry of input controls mapped against UI hints.\r\n@Service()\r\nexport class InputControlRegistry {\r\n  private inputMap: Map<UIHint, RenderActivityPropInputControl> = new Map<UIHint, RenderActivityPropInputControl>();\r\n\r\n  constructor() {\r\n    this.add('single-line', c => <elsa-single-line-input inputContext={c}/>);\r\n    this.add('multi-line', c => <elsa-multi-line-input inputContext={c}/>);\r\n    this.add('dropdown', c => <elsa-dropdown-input inputContext={c}/>);\r\n    this.add('check-list', c => <elsa-check-list-input inputContext={c}/>);\r\n    this.add('radio-list', c => <elsa-radio-list-input inputContext={c}/>);\r\n    this.add('multi-text', c => <elsa-multi-text-input inputContext={c}/>);\r\n    this.add('code-editor', c => <elsa-code-editor-input inputContext={c}/>);\r\n    this.add('checkbox', c => <elsa-checkbox-input inputContext={c}/>);\r\n    this.add('variable-picker', c => <elsa-variable-picker-input inputContext={c}/>);\r\n    this.add('type-picker', c => <elsa-type-picker-input inputContext={c}/>);\r\n    this.add('output-picker', c => <elsa-output-picker-input inputContext={c}/>);\r\n    this.add('outcome-picker', c => <elsa-outcome-picker-input inputContext={c}/>);\r\n  }\r\n\r\n  public add(uiHint: UIHint, control: RenderActivityPropInputControl) {\r\n    this.inputMap.set(uiHint, control);\r\n  }\r\n\r\n  public get(uiHint: UIHint): RenderActivityPropInputControl {\r\n    return this.inputMap.get(uiHint);\r\n  }\r\n\r\n  has(uiHint: string): boolean {\r\n    return this.inputMap.has(uiHint);\r\n  }\r\n}\r\n"]}