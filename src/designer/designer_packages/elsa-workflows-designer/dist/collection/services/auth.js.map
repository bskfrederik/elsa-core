{"version":3,"file":"auth.js","sourceRoot":"","sources":["../../src/services/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata';\r\nimport {Container, Service} from \"typedi\";\r\nimport cookies from 'js-cookie';\r\nimport authStore from \"../data/auth-store\";\r\nimport {EventBus} from \"./event-bus\";\r\nimport {EventTypes} from \"../models\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const AuthEventTypes = {\r\n  Unauthorized: 'auth:unauthorized'\r\n}\r\n\r\n@Service()\r\nexport class AuthContext {\r\n  private eventBus: EventBus;\r\n\r\n  constructor(eventBus: EventBus) {\r\n    this.eventBus = eventBus;\r\n    const sessionData = sessionStorage.getItem('dashboard-session');\r\n    const data = sessionData || cookies.get('dashboard-session');\r\n\r\n    if (data && data.length > 0) {\r\n      const authData = JSON.parse(data);\r\n      authStore.name = authData.name;\r\n      authStore.permissions = authData.permissions;\r\n      authStore.signedIn = authData.signedIn;\r\n      authStore.accessToken = authData.accessToken;\r\n      authStore.refreshToken = authData.refreshToken;\r\n    }\r\n  }\r\n\r\n  async signin(accessToken: string, refreshToken: string, createPersistentCookie: boolean){\r\n    await this.updateTokens(accessToken, refreshToken, createPersistentCookie);\r\n    await this.eventBus.emit(EventTypes.Auth.SignedIn)\r\n  }\r\n\r\n  async updateTokens(accessToken: string, refreshToken: string, createPersistentCookie: boolean){\r\n    const claims = jwt_decode<any>(accessToken);\r\n    const permissions = claims.permissions || [];\r\n    const name = claims.name || '';\r\n    await this.updateSession(name, permissions, accessToken, refreshToken, createPersistentCookie);\r\n  }\r\n\r\n  updateSession(name: string, permissions: Array<string>, accessToken: string, refreshToken: string, createPersistentCookie: boolean) {\r\n    authStore.name = name;\r\n    authStore.permissions = permissions;\r\n    authStore.signedIn = true;\r\n    authStore.accessToken = accessToken;\r\n    authStore.refreshToken = refreshToken;\r\n\r\n    const data = JSON.stringify(authStore);\r\n    sessionStorage.setItem('dashboard-session', data);\r\n\r\n    if (createPersistentCookie) {\r\n      cookies.set(\"dashboard-session\", data);\r\n    }\r\n  }\r\n\r\n  async signOut() {\r\n    authStore.name = null;\r\n    authStore.permissions = [];\r\n    authStore.signedIn = false;\r\n    authStore.accessToken = null;\r\n    authStore.refreshToken = null;\r\n    sessionStorage.clear();\r\n    cookies.remove('dashboard-session');\r\n    await this.eventBus.emit(EventTypes.Auth.SignedOut)\r\n  }\r\n\r\n  getIsSignedIn() {\r\n    return authStore.signedIn;\r\n  }\r\n\r\n  getAccessToken() {\r\n    return authStore.accessToken;\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return authStore.refreshToken;\r\n  }\r\n}\r\n"]}