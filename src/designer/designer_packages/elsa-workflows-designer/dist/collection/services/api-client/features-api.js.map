{"version":3,"file":"features-api.js","sourceRoot":"","sources":["../../../src/services/api-client/features-api.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAC,OAAO,EAAC,MAAM,QAAQ,CAAC;AAMxB,IAAM,WAAW,GAAjB,MAAM,WAAW;EAGtB,YAAY,UAAyB;IACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;EAC/B,CAAC;EAED,KAAK,CAAC,oBAAoB;IACxB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,oBAAoB,CAAC,CAAC;IAC3E,OAAO,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC;EACzC,CAAC;CACF,CAAA;AAXY,WAAW;EADvB,OAAO,EAAE;;GACG,WAAW,CAWvB;SAXY,WAAW","sourcesContent":["import {Service} from \"typedi\";\r\nimport {ElsaClientProvider} from \"./elsa-client\";\r\nimport { PackageVersion } from \"../../models\";\r\nimport {AxiosInstance} from \"axios\";\r\n\r\n@Service()\r\nexport class FeaturesApi {\r\n  private httpClient: AxiosInstance;\r\n\r\n  constructor(httpClient: AxiosInstance) {\r\n    this.httpClient = httpClient;\r\n  }\r\n\r\n  async getInstalledFeatures(): Promise<Array<FeatureDescriptor>> {\r\n    const response = await this.httpClient.get<Response>(`features/installed`);\r\n    return response.data.installedFeatures;\r\n  }\r\n}\r\n\r\nexport interface FeatureDescriptor {\r\n  name: string;\r\n  displayName: string;\r\n  description: string;\r\n}\r\n\r\ninterface Response {\r\n  installedFeatures: Array<FeatureDescriptor>;\r\n}\r\n"]}