{"version":3,"file":"packages-api.js","sourceRoot":"","sources":["../../../src/services/api-client/packages-api.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAC,OAAO,EAAC,MAAM,QAAQ,CAAC;AAC/B,OAAO,EAAC,kBAAkB,EAAC,MAAM,eAAe,CAAC;AAI1C,IAAM,WAAW,GAAjB,MAAM,WAAW;EAGtB,YAAY,QAA4B;IAUhC,kBAAa,GAAG,KAAK,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;IATtE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EAC3B,CAAC;EAED,KAAK,CAAC,UAAU;IACd,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;IAC9C,MAAM,QAAQ,GAAG,MAAM,UAAU,CAAC,GAAG,CAAiB,iBAAiB,CAAC,CAAC;IACzE,OAAO,QAAQ,CAAC,IAAI,CAAC;EACvB,CAAC;CAGF,CAAA;AAdY,WAAW;EADvB,OAAO,EAAE;mCAIc,kBAAkB;GAH7B,WAAW,CAcvB;SAdY,WAAW","sourcesContent":["import {Service} from \"typedi\";\r\nimport {ElsaClientProvider} from \"./elsa-client\";\r\nimport { PackageVersion } from \"../../models\";\r\n\r\n@Service()\r\nexport class PackagesApi {\r\n  private provider: ElsaClientProvider;\r\n\r\n  constructor(provider: ElsaClientProvider) {\r\n    this.provider = provider;\r\n  }\r\n\r\n  async getVersion(): Promise<PackageVersion> {\r\n    const httpClient = await this.getHttpClient();\r\n    const response = await httpClient.get<PackageVersion>(`package/version`);\r\n    return response.data;\r\n  }\r\n\r\n  private getHttpClient = async () => await this.provider.getHttpClient();\r\n}\r\n"]}