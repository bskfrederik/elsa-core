{"version":3,"file":"activity-name-formatter.js","sourceRoot":"","sources":["../../src/services/activity-name-formatter.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO,EAAC,OAAO,EAAC,MAAM,QAAQ,CAAC;AAC/B,OAAO,EAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC,MAAM,QAAQ,CAAC;AAElE,OAAO,EAAC,sBAAsB,EAAC,MAAM,UAAU,CAAC;AAYzC,IAAM,qBAAqB,6BAA3B,MAAM,qBAAqB;EAA3B;IASE,aAAQ,GAAyB,uBAAqB,CAAC,kBAAkB,CAAC;EAKnF,CAAC;EAHQ,MAAM,CAAC,OAAqC;IACjD,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;EAChC,CAAC;;AAXsB,qCAAe,GAAyB,OAAO,CAAC,EAAE,CAAC,GAAG,sBAAsB,CAAC,OAAO,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;AACpI,wCAAkB,GAAyB,OAAO,CAAC,EAAE,CAAC,GAAG,sBAAsB,CAAC,OAAO,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;AACxI,wCAAkB,GAAyB,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,uBAAqB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC7I,uCAAiB,GAAyB,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,uBAAqB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;AAC/G,uCAAiB,GAAyB,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,uBAAqB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;AAC/G,uCAAiB,GAAyB,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,uBAAqB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;AAP3H,qBAAqB;EADjC,OAAO,EAAE;GACG,qBAAqB,CAcjC;SAdY,qBAAqB","sourcesContent":["import {Service} from 'typedi';\r\nimport {camelCase, startCase, snakeCase, kebabCase} from 'lodash';\r\nimport {Activity, ActivityDescriptor} from \"../models\";\r\nimport {stripActivityNameSpace} from \"../utils\";\r\nimport {ActivityNode} from \"./activity-walker\";\r\n\r\nexport type ActivityNameStrategy = (context: ActivityNameFormatterContext) => string;\r\n\r\nexport interface ActivityNameFormatterContext {\r\n  activityDescriptor: ActivityDescriptor;\r\n  count: number;\r\n  activities: Array<Activity>;\r\n}\r\n\r\n@Service()\r\nexport class ActivityNameFormatter {\r\n\r\n  public static readonly DefaultStrategy: ActivityNameStrategy = context => `${stripActivityNameSpace(context.activityDescriptor.typeName)}${context.count}`;\r\n  public static readonly UnderscoreStrategy: ActivityNameStrategy = context => `${stripActivityNameSpace(context.activityDescriptor.typeName)}_${context.count}`;\r\n  public static readonly PascalCaseStrategy: ActivityNameStrategy = context => startCase(camelCase(ActivityNameFormatter.DefaultStrategy(context))).replace(/ /g, '');\r\n  public static readonly CamelCaseStrategy: ActivityNameStrategy = context => camelCase(ActivityNameFormatter.DefaultStrategy(context));\r\n  public static readonly SnakeCaseStrategy: ActivityNameStrategy = context => snakeCase(ActivityNameFormatter.DefaultStrategy(context));\r\n  public static readonly KebabCaseStrategy: ActivityNameStrategy = context => kebabCase(ActivityNameFormatter.DefaultStrategy(context));\r\n\r\n  public strategy: ActivityNameStrategy = ActivityNameFormatter.PascalCaseStrategy;\r\n\r\n  public format(context: ActivityNameFormatterContext): string {\r\n    return this.strategy(context);\r\n  }\r\n}\r\n"]}