{"version":3,"file":"event-bus.js","sourceRoot":"","sources":["../../src/services/event-bus.ts"],"names":[],"mappings":";;;;;;AAAC,OAAO,EAAC,OAAO,EAAC,MAAM,QAAQ,CAAC;AAChC,OAAO,cAA+B,MAAM,oBAAoB,CAAC;AAG1D,IAAM,QAAQ,GAAd,MAAM,QAAQ;EAAd;IACG,aAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;EAqC1C,CAAC;EAnCC;;;;;KAKG;EACH,KAAK,CAAC,IAAI,CAAW,SAAiB,EAAE,OAAW,EAAE,GAAG,IAAW;IACjE,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAI,SAAS,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;EAC3D,CAAC;EAED;;;;KAIG;EACH,EAAE,CAAC,SAAiB,EAAE,QAAuB;IAC3C,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;EACxC,CAAC;EAED;;;KAGG;EACH,GAAG,CAAC,SAAiB;IACnB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;EAC/B,CAAC;EAED;;;;KAIG;EACH,MAAM,CAAC,SAAiB,EAAE,QAAwB;IAChD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;EAC/B,CAAC;CACF,CAAA;AAtCY,QAAQ;EADpB,OAAO,EAAE;GACG,QAAQ,CAsCpB;SAtCY,QAAQ","sourcesContent":["ï»¿import {Service} from 'typedi';\r\nimport CustomEventBus, {EventCallback} from './custom-event-bus';\r\n\r\n@Service()\r\nexport class EventBus {\r\n  private eventBus = new CustomEventBus();\r\n\r\n  /**\r\n   * Emit the event asynchronously.\r\n   * @param {string} eventName - name of the event.\r\n   * @param context\r\n   * @param args\r\n   */\r\n  async emit<C = null>(eventName: string, context?: C, ...args: any[]): Promise<void> {\r\n    await this.eventBus.emit<C>(eventName, context, ...args);\r\n  }\r\n\r\n  /**\r\n   * Attach a callback to an event.\r\n   * @param {string} eventName - name of the event.\r\n   * @param {function} callback - callback executed when this event is triggered\r\n   */\r\n  on(eventName: string, callback: EventCallback): void {\r\n    this.eventBus.on(eventName, callback);\r\n  }\r\n\r\n  /**\r\n   * Kill an event with all it's callbacks.\r\n   * @param {string} eventName - name of the event.\r\n   */\r\n  off(eventName: string): void {\r\n    this.eventBus.off(eventName);\r\n  }\r\n\r\n  /**\r\n   * Remove the callback for the given event.\r\n   * @param {string} eventName - name of the event.\r\n   * @param {callback} callback - the callback to remove (undefined to remove all of them).\r\n   */\r\n  detach(eventName: string, callback?: EventCallback): void {\r\n    this.eventBus.off(eventName);\r\n  }\r\n}\r\n"]}