{"version":3,"file":"editor-instance.js","sourceRoot":"","sources":["../../../../src/modules/workflow-definitions/services/editor-instance.tsx"],"names":[],"mappings":"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","sourcesContent":["import {WorkflowDefinition} from \"../models/entities\";\r\nimport studioComponentStore from \"../../../data/studio-component-store\";\r\nimport {h} from \"@stencil/core\";\r\nimport {WorkflowDefinitionUpdatedArgs} from \"../models/ui\";\r\nimport NotificationService from \"../../notifications/notification-service\";\r\nimport {uuid} from \"@antv/x6/es/util/string/uuid\";\r\nimport {NotificationDisplayType} from \"../../notifications/models\";\r\nimport {Container} from \"typedi\";\r\nimport {WorkflowDefinitionManager} from \"./manager\";\r\nimport {PublishClickedArgs} from \"../components/publish-button\";\r\nimport {WorkflowDefinitionsApi} from \"./api\";\r\nimport {ActivityDescriptorManager} from \"../../../services\";\r\nimport toolbarComponentStore from \"../../../data/toolbar-component-store\";\r\nimport {htmlToElement} from \"../../../utils\";\r\nimport {WorkflowDefinitionEditorService} from \"./editor-service\";\r\n\r\nexport class WorkflowDefinitionEditorInstance {\r\n\r\n  private readonly api: WorkflowDefinitionsApi;\r\n  private readonly activityDescriptorManager: ActivityDescriptorManager;\r\n  private readonly workflowDefinitionManager: WorkflowDefinitionManager;\r\n  private readonly workflowDefinitionEditorService: WorkflowDefinitionEditorService;\r\n  private workflowDefinitionEditorElement: HTMLElsaWorkflowDefinitionEditorElement\r\n\r\n  constructor(private readonly workflowDefinition: WorkflowDefinition) {\r\n    this.api = Container.get(WorkflowDefinitionsApi);\r\n    this.activityDescriptorManager = Container.get(ActivityDescriptorManager);\r\n    this.workflowDefinitionManager = Container.get(WorkflowDefinitionManager);\r\n    this.workflowDefinitionEditorService = Container.get(WorkflowDefinitionEditorService);\r\n\r\n      toolbarComponentStore.components = [() => <elsa-workflow-publish-button\r\n        onPublishClicked={this.onPublishClicked}\r\n        onUnPublishClicked={this.onUnPublishClicked}\r\n        onExportClicked={this.onExportClicked}\r\n        onImportClicked={this.onImportClicked}\r\n        disabled={workflowDefinition.isReadonly}\r\n      />];\r\n\r\n    studioComponentStore.activeComponentFactory = () => <elsa-workflow-definition-editor\r\n      workflowDefinition={workflowDefinition} onWorkflowUpdated={this.onWorkflowUpdated}\r\n      ref={el => this.workflowDefinitionEditorElement = el}/>;\r\n  }\r\n\r\n  private import = async () => {\r\n    const fileInput = htmlToElement<HTMLInputElement>('<input type=\"file\" />');\r\n\r\n    document.body.append(fileInput);\r\n    fileInput.click();\r\n\r\n    fileInput.addEventListener('change', async e => {\r\n      const files = fileInput.files;\r\n\r\n      if (files.length == 0) {\r\n        fileInput.remove();\r\n        return;\r\n      }\r\n\r\n      const file = files[0];\r\n      const importedWorkflow = await this.workflowDefinitionManager.importWorkflow(null, file);\r\n      fileInput.remove();\r\n      this.workflowDefinitionEditorService.show(importedWorkflow);\r\n    });\r\n  };\r\n\r\n  private onPublishClicked = async (e: CustomEvent<PublishClickedArgs>) => {\r\n    const definition = await this.workflowDefinitionEditorElement.getWorkflowDefinition();\r\n\r\n    if (!definition.isLatest) {\r\n      console.debug('Workflow definition is not latest. Skipping publish.');\r\n      return;\r\n    }\r\n\r\n    e.detail.begin();\r\n\r\n    const notification = NotificationService.createNotification({\r\n      title: 'Publishing',\r\n      id: uuid(),\r\n      text: 'Workflow is being published. Please wait.',\r\n      type: NotificationDisplayType.InProgress\r\n    });\r\n\r\n    await this.saveWorkflowDefinition(definition, true)\r\n      .then(async () => {\r\n        NotificationService.updateNotification(notification, {title: 'Workflow published', text: 'Published!'})\r\n        e.detail.complete();\r\n\r\n        if(definition.options?.autoUpdateConsumingWorkflows)\r\n          await this.updateCompositeActivityReferences(definition);\r\n\r\n        // Reload activity descriptors.\r\n        await this.activityDescriptorManager.refresh();\r\n      }).catch(() => {\r\n        NotificationService.updateNotification(notification, {\r\n          title: 'Error while publishing',\r\n          text: <span>Workflow {definition.definitionId} could not be published.</span>,\r\n          type: NotificationDisplayType.Error\r\n        });\r\n        e.detail.complete();\r\n      });\r\n  }\r\n\r\n  private onUnPublishClicked = async (e: CustomEvent) => {\r\n    const definition = await this.workflowDefinitionEditorElement.getWorkflowDefinition();\r\n\r\n    const notification = NotificationService.createNotification({\r\n      title: 'Unpublishing',\r\n      id: uuid(),\r\n      text: 'Unpublishing the workflow. Please wait.',\r\n      type: NotificationDisplayType.InProgress\r\n    });\r\n\r\n    await this.workflowDefinitionManager.retractWorkflow(definition)\r\n      .then(async () => {\r\n        NotificationService.updateNotification(notification, {title: 'Workflow unpublished', text: 'Unpublished!'})\r\n        await this.activityDescriptorManager.refresh();\r\n      }).catch(() => {\r\n        NotificationService.updateNotification(notification, {\r\n          title: 'Error while unpublishing',\r\n          text: <span>Workflow {definition.definitionId} could not be unpublished.</span>,\r\n          type: NotificationDisplayType.Error\r\n        });\r\n      });\r\n  }\r\n\r\n  private onExportClicked = async (e: CustomEvent) => {\r\n    const workflowDefinition = await this.workflowDefinitionEditorElement.getWorkflowDefinition();\r\n    await this.workflowDefinitionManager.exportWorkflow(workflowDefinition);\r\n  }\r\n\r\n  private onImportClicked = async (e: CustomEvent) => {\r\n    await this.import();\r\n  }\r\n\r\n  private onWorkflowUpdated = async (e: CustomEvent<WorkflowDefinitionUpdatedArgs>) => {\r\n    const updatedWorkflowDefinition = e.detail.workflowDefinition;\r\n    await this.saveWorkflowDefinition(updatedWorkflowDefinition, false)\r\n      .catch(() => {\r\n        NotificationService.createNotification({\r\n          title: 'Error while saving',\r\n          id: uuid(),\r\n          text: <span>Workflow {e.detail.workflowDefinition.definitionId} could not be saved. </span>,\r\n          type: NotificationDisplayType.Error\r\n        });\r\n      });\r\n  }\r\n\r\n  saveWorkflowDefinition = async (definition: WorkflowDefinition, publish: boolean): Promise<WorkflowDefinition> => {\r\n\r\n    if (!definition.isLatest) {\r\n      console.debug('Workflow definition is not latest. Skipping save.');\r\n      return;\r\n    }\r\n\r\n    const workflowDefinitionManager = Container.get(WorkflowDefinitionManager);\r\n    const updatedWorkflow = await workflowDefinitionManager.saveWorkflow(definition, publish);\r\n    let reload = false;\r\n\r\n    if (definition.id != updatedWorkflow.id) reload = true;\r\n    if (definition.definitionId != updatedWorkflow.definitionId) reload = true;\r\n    if (definition.version != updatedWorkflow.version) reload = true;\r\n    if (definition.isPublished != updatedWorkflow.isPublished) reload = true;\r\n    if (definition.isLatest != updatedWorkflow.isLatest) reload = true;\r\n\r\n    if (reload) {\r\n      await this.workflowDefinitionEditorElement.updateWorkflowDefinition(updatedWorkflow);\r\n      await this.workflowDefinitionEditorElement.loadWorkflowVersions();\r\n    }\r\n\r\n    return definition;\r\n  }\r\n\r\n  private updateCompositeActivityReferences = async (definition: WorkflowDefinition) => {\r\n\r\n    await this.api.updateWorkflowReferences({definitionId: definition.definitionId})\r\n      .then(async (response) => {\r\n        var message = 'The following consuming workflows have been successfully updated:\\n\\n' + response.affectedWorkflows.join('\\n');\r\n        if (response.affectedWorkflows.length > 0){\r\n          NotificationService.createNotification({\r\n            title: 'Consuming Workflows',\r\n            id: uuid(),\r\n            text: message,\r\n            type: NotificationDisplayType.Success\r\n          });\r\n        }\r\n      }).catch(() => {\r\n        NotificationService.createNotification({\r\n          title: 'Error while updating consuming workflows',\r\n          id: uuid(),\r\n          text: 'Consuming workflows could not be updated',\r\n          type: NotificationDisplayType.Error\r\n        });\r\n      });\r\n  }\r\n}\r\n"]}