{"version":3,"file":"editor.js","sourceRoot":"","sources":["../../../../src/modules/workflow-definitions/components/editor.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Component, Element, Event, EventEmitter, h, Listen, Method, Prop, State, Watch} from '@stencil/core';\nimport {debounce, isEqual} from 'lodash';\nimport {Container} from \"typedi\";\nimport {PanelPosition, PanelStateChangedArgs} from '../../../components/panel/models';\nimport {\n  Activity,\n  ActivityDescriptor,\n  ActivitySelectedArgs,\n  ChildActivitySelectedArgs,\n  ContainerSelectedArgs, GraphUpdatedArgs\n} from '../../../models';\nimport {ActivityDriverRegistry, ActivityNameFormatter, EventBus, PluginRegistry, PortProviderRegistry} from '../../../services';\nimport {MonacoEditorSettings} from \"../../../services/monaco-editor-settings\";\nimport {WorkflowDefinitionPropsUpdatedArgs, WorkflowDefinitionUpdatedArgs, ActivityUpdatedArgs, WorkflowEditorEventTypes} from \"../models/ui\";\nimport {WorkflowDefinition} from \"../models/entities\";\nimport {WorkflowDefinitionsApi} from \"../services/api\"\nimport WorkflowDefinitionTunnel, {WorkflowDefinitionState} from \"../state\";\nimport {LayoutDirection, UpdateActivityArgs} from \"../../flowchart/models\";\nimport {cloneDeep} from '@antv/x6/lib/util/object/object';\nimport {removeGuidsFromPortNames} from '../../../utils/graph';\nimport {WorkflowPropertiesEditorTabs} from '../models/props-editor-tabs';\n\n@Component({\n  tag: 'elsa-workflow-definition-editor',\n  styleUrl: 'editor.scss',\n})\nexport class WorkflowDefinitionEditor {\n  @Element() el: HTMLElsaWorkflowDefinitionEditorElement;\n\n  private readonly pluginRegistry: PluginRegistry;\n  private readonly eventBus: EventBus;\n  private readonly activityNameFormatter: ActivityNameFormatter;\n  private readonly portProviderRegistry: PortProviderRegistry;\n  private flowchart: HTMLElsaFlowchartElement;\n  private container: HTMLDivElement;\n  private toolbox: HTMLElsaWorkflowDefinitionEditorToolboxElement;\n  private readonly saveChangesDebounced: () => void;\n  private readonly workflowDefinitionApi: WorkflowDefinitionsApi;\n\n  constructor() {\n    this.eventBus = Container.get(EventBus);\n    this.pluginRegistry = Container.get(PluginRegistry);\n    this.activityNameFormatter = Container.get(ActivityNameFormatter);\n    this.portProviderRegistry = Container.get(PortProviderRegistry);\n    this.saveChangesDebounced = debounce(this.saveChanges, 1000);\n    this.workflowDefinitionApi = Container.get(WorkflowDefinitionsApi);\n  }\n\n  @Prop() workflowDefinition?: WorkflowDefinition;\n  @Prop({attribute: 'monaco-lib-path'}) monacoLibPath: string;\n  @Event() workflowUpdated: EventEmitter<WorkflowDefinitionUpdatedArgs>\n  @State() private workflowDefinitionState: WorkflowDefinition;\n  @State() private selectedActivity?: Activity;\n  @State() private workflowVersions: Array<WorkflowDefinition> = [];\n\n  @Watch('monacoLibPath')\n  private handleMonacoLibPath(value: string) {\n    const settings = Container.get(MonacoEditorSettings);\n    settings.monacoLibPath = value;\n  }\n\n  @Watch('workflowDefinition')\n  async onWorkflowDefinitionChanged(value: WorkflowDefinition) {\n    await this.importWorkflow(value);\n  }\n\n  @Listen('resize', {target: 'window'})\n  private async handleResize() {\n    await this.updateLayout();\n  }\n\n  @Listen('containerSelected')\n  private async handleContainerSelected(e: CustomEvent<ContainerSelectedArgs>) {\n    this.selectedActivity = e.detail.activity;\n  }\n\n  @Method()\n  async getFlowchart(): Promise<HTMLElsaFlowchartElement> {\n    return this.flowchart;\n  }\n\n  @Method()\n  async registerActivityDrivers(register: (registry: ActivityDriverRegistry) => void): Promise<void> {\n    const registry = Container.get(ActivityDriverRegistry);\n    register(registry);\n  }\n\n  @Method()\n  getWorkflowDefinition(): Promise<WorkflowDefinition> {\n    return this.getWorkflowDefinitionInternal();\n  }\n\n  @Method()\n  async importWorkflow(workflowDefinition: WorkflowDefinition): Promise<void> {\n    await this.updateWorkflowDefinition(workflowDefinition);\n    await this.loadWorkflowVersions();\n\n    // Update the flowchart after state is updated.\n    window.requestAnimationFrame(async () => {\n      await this.flowchart.updateGraph();\n      await this.updateSelectedActivity();\n    });\n\n    await this.eventBus.emit(WorkflowEditorEventTypes.WorkflowDefinition.Imported, this, {workflowDefinition});\n  }\n\n  // Updates the workflow definition without importing it into the designer.\n  @Method()\n  async updateWorkflowDefinition(workflowDefinition: WorkflowDefinition): Promise<void> {\n    if (this.workflowDefinitionState != workflowDefinition) {\n      this.workflowDefinitionState = workflowDefinition;\n\n      window.requestAnimationFrame(async () => {\n        await this.updateSelectedActivity();\n        await this.eventBus.emit(WorkflowEditorEventTypes.WorkflowEditor.WorkflowLoaded, this, {workflowEditor: this, workflowDefinition: workflowDefinition});\n      });\n    }\n  }\n\n  @Method()\n  async newWorkflow(): Promise<WorkflowDefinition> {\n\n    const newRoot = await this.flowchart.newRoot();\n\n    const workflowDefinition: WorkflowDefinition = {\n      root: newRoot,\n      id: '',\n      name: 'Workflow 1',\n      definitionId: '',\n      version: 1,\n      isLatest: true,\n      isPublished: false,\n      isReadonly: false,\n      materializerName: 'Json'\n    }\n\n    await this.updateWorkflowDefinition(workflowDefinition);\n    return workflowDefinition;\n  }\n\n  @Method()\n  async loadWorkflowVersions(): Promise<void> {\n    if (this.workflowDefinitionState.definitionId != null && this.workflowDefinitionState.definitionId.length > 0) {\n      const workflowVersions = await this.workflowDefinitionApi.getVersions(this.workflowDefinitionState.definitionId);\n      this.workflowVersions = workflowVersions.sort((a, b) => a.version > b.version ? -1 : 1);\n    } else {\n      this.workflowVersions = [];\n    }\n  }\n\n  @Method()\n  async updateActivity(activity: Activity) {\n    const args: UpdateActivityArgs = {\n      activity: activity,\n      id: activity.id,\n      originalId: activity.id\n    };\n    await this.updateActivityInternal(args);\n  }\n\n  async componentWillLoad() {\n    await this.updateWorkflowDefinition(this.workflowDefinition);\n    await this.loadWorkflowVersions();\n  }\n\n  async componentDidLoad() {\n    if (!this.workflowDefinitionState)\n      await this.newWorkflow();\n    else\n      await this.importWorkflow(this.workflowDefinitionState);\n\n    await this.eventBus.emit(WorkflowEditorEventTypes.WorkflowEditor.Ready, this, {workflowEditor: this, workflowDefinition: this.workflowDefinitionState});\n  }\n\n  private renderSelectedObject = () => {\n    if (!!this.selectedActivity)\n      return <elsa-activity-properties-editor\n        isReadonly={this.workflowDefinition.isReadonly}\n        activity={this.selectedActivity}\n        variables={this.workflowDefinitionState.variables}\n        outputs={this.workflowDefinitionState.outputs}\n        workflowDefinitionId={this.workflowDefinitionState.definitionId}\n        onActivityUpdated={e => this.onActivityUpdated(e)}/>;\n  }\n\n  private getWorkflowDefinitionInternal = async (): Promise<WorkflowDefinition> => {\n    const activity: Activity = await this.flowchart.export();\n    const workflowDefinition = this.workflowDefinitionState;\n    workflowDefinition.root = activity;\n    return workflowDefinition;\n  };\n\n  private saveChanges = async (): Promise<void> => {\n    const updatedWorkflowDefinition = this.workflowDefinitionState;\n\n\n    if (updatedWorkflowDefinition.isReadonly) {\n      console.debug('Workflow definition is readonly. Changes will not be saved.');\n      return;\n    }\n\n    if(!updatedWorkflowDefinition.isLatest) {\n      console.debug('Workflow definition is not the latest version. Changes will not be saved.');\n      return;\n    }\n\n    if (await this.hasWorkflowDefinitionAnyUpdatedData(updatedWorkflowDefinition)) {\n      // If workflow definition is published, override the latest version.\n      if (updatedWorkflowDefinition.isPublished) {\n        updatedWorkflowDefinition.version = this.workflowVersions.find(v => v.isLatest).version;\n      }\n      this.workflowUpdated.emit({workflowDefinition: this.workflowDefinitionState});\n    }\n\n    await this.updateSelectedActivity();\n  };\n\n  // To prevent redundant post requests to server, save changes only if there is a difference\n  // between existing workflow definition on server side and updated workflow definition on client side.\n  private hasWorkflowDefinitionAnyUpdatedData = async (updatedWorkflowDefinition: WorkflowDefinition): Promise<boolean> => {\n    const existingWorkflowDefinition = await this.workflowDefinitionApi.get({definitionId: updatedWorkflowDefinition.definitionId, versionOptions: {version: updatedWorkflowDefinition.version}});\n    const updatedWorkflowDefinitionClone = cloneDeep(updatedWorkflowDefinition);\n\n    removeGuidsFromPortNames(updatedWorkflowDefinitionClone.root);\n\n    return !isEqual(existingWorkflowDefinition, updatedWorkflowDefinitionClone);\n  }\n\n  private updateLayout = async () => {\n    await this.flowchart.updateLayout();\n  };\n\n  private updateContainerLayout = async (panelClassName: string, panelExpanded: boolean) => {\n\n    if (panelExpanded)\n      this.container.classList.remove(panelClassName);\n    else\n      this.container.classList.toggle(panelClassName, true);\n\n    await this.updateLayout();\n  }\n\n  private updateActivityInternal = async (args: UpdateActivityArgs) => {\n    args.updatePorts = true; // TODO: Make this configurable from a activity plugin.\n    await this.flowchart.updateActivity(args);\n    this.saveChangesDebounced();\n  }\n\n  private onActivityPickerPanelStateChanged = async (e: PanelStateChangedArgs) => await this.updateContainerLayout('activity-picker-closed', e.expanded)\n  private onWorkflowEditorPanelStateChanged = async (e: PanelStateChangedArgs) => await this.updateContainerLayout('object-editor-closed', e.expanded)\n  private onActivityEditorPanelStateChanged = async (e: PanelStateChangedArgs) => await this.updateContainerLayout('activity-editor-closed', e.expanded)\n\n  private onDragOver = (e: DragEvent) => {\n    e.preventDefault();\n  };\n\n  private onDrop = async (e: DragEvent) => {\n    const json = e.dataTransfer.getData('activity-descriptor');\n    const activityDescriptor: ActivityDescriptor = JSON.parse(json);\n\n    await this.flowchart.addActivity({\n      descriptor: activityDescriptor,\n      x: e.pageX,\n      y: e.pageY\n    });\n  };\n\n  private onZoomToFit = async () => await this.flowchart.zoomToFit();\n\n  private onAutoLayout = async (direction: LayoutDirection) => {\n    await this.flowchart.autoLayout(direction);\n  };\n\n  private onActivityUpdated = async (e: CustomEvent<ActivityUpdatedArgs>) => {\n    const args: UpdateActivityArgs = {\n      activity: e.detail.activity,\n      id: e.detail.newId ?? e.detail.originalId ?? e.detail.activity.id,\n      originalId: e.detail.originalId ?? e.detail.activity.id\n    };\n\n    await this.updateActivityInternal(args);\n  }\n\n  private onWorkflowPropsUpdated = (e: CustomEvent<WorkflowDefinitionPropsUpdatedArgs>) => {\n    this.saveChangesDebounced();\n\n    if (e.detail.updatedTab == WorkflowPropertiesEditorTabs.Variables) {\n      const currentSelectedActivity = this.selectedActivity;\n      this.selectedActivity = null;\n      this.selectedActivity = currentSelectedActivity;\n    }\n  }\n\n  private async onActivitySelected(e: CustomEvent<ActivitySelectedArgs>) {\n    this.selectedActivity = e.detail.activity;\n  }\n\n  private async onChildActivitySelected(e: CustomEvent<ChildActivitySelectedArgs>) {\n    const {childActivity} = e.detail;\n    this.selectedActivity = childActivity;\n  }\n\n  private async onGraphUpdated(e: CustomEvent<GraphUpdatedArgs>) {\n    await this.updateSelectedActivity();\n    this.saveChangesDebounced();\n  }\n\n  private async updateSelectedActivity() {\n    if (!!this.selectedActivity)\n      this.selectedActivity = await this.flowchart?.getActivity(this.selectedActivity.id);\n  }\n\n  private onVersionSelected = async (e: CustomEvent<WorkflowDefinition>) => {\n    const workflowToView = e.detail;\n    const workflowDefinition = await this.workflowDefinitionApi.get({definitionId: workflowToView.definitionId, versionOptions: {version: workflowToView.version}});\n    await this.importWorkflow(workflowDefinition);\n  };\n\n  private onDeleteVersionClicked = async (e: CustomEvent<WorkflowDefinition>) => {\n    const workflowToDelete = e.detail;\n    await this.workflowDefinitionApi.deleteVersion({definitionId: workflowToDelete.definitionId, version: workflowToDelete.version});\n    const latestWorkflowDefinition = await this.workflowDefinitionApi.get({definitionId: workflowToDelete.definitionId, versionOptions: {isLatest: true}});\n    await this.loadWorkflowVersions();\n    await this.importWorkflow(latestWorkflowDefinition);\n  };\n\n  private onRevertVersionClicked = async (e: CustomEvent<WorkflowDefinition>) => {\n    const workflowToRevert = e.detail;\n    await this.workflowDefinitionApi.revertVersion({definitionId: workflowToRevert.definitionId, version: workflowToRevert.version});\n    const workflowDefinition = await this.workflowDefinitionApi.get({definitionId: workflowToRevert.definitionId, versionOptions: {isLatest: true}});\n    await this.loadWorkflowVersions();\n    await this.importWorkflow(workflowDefinition);\n  };\n\n  render() {\n    const workflowDefinition = this.workflowDefinitionState;\n\n    const state: WorkflowDefinitionState = {\n      workflowDefinition: this.workflowDefinitionState\n    };\n\n    return (\n      <WorkflowDefinitionTunnel.Provider state={state}>\n        <div class=\"tw-absolute tw-inset-0\" ref={el => this.container = el}>\n          <elsa-workflow-definition-editor-toolbar zoomToFit={this.onZoomToFit} onAutoLayout={(e: CustomEvent<LayoutDirection>) => this.onAutoLayout(e.detail)}/>\n          <elsa-panel\n            class=\"elsa-activity-picker-container tw-z-30\"\n            position={PanelPosition.Left}\n            onExpandedStateChanged={e => this.onActivityPickerPanelStateChanged(e.detail)}>\n            <elsa-workflow-definition-editor-toolbox\n              isReadonly={this.workflowDefinition.isReadonly}\n              ref={el => this.toolbox = el} />\n          </elsa-panel>\n          <elsa-flowchart\n            isReadonly={this.workflowDefinition.isReadonly}\n            key={workflowDefinition.definitionId}\n            ref={el => this.flowchart = el}\n            rootActivity={workflowDefinition.root}\n            interactiveMode={true}\n            onActivitySelected={e => this.onActivitySelected(e)}\n            onChildActivitySelected={e => this.onChildActivitySelected(e)}\n            onGraphUpdated={e => this.onGraphUpdated(e)}\n            onDragOver={e => this.onDragOver(e)}\n            onDrop={e => this.onDrop(e)}/>\n          <elsa-panel\n            class=\"elsa-workflow-editor-container tw-z-30\"\n            position={PanelPosition.Right}\n            onExpandedStateChanged={e => this.onWorkflowEditorPanelStateChanged(e.detail)}>\n            <div class=\"object-editor-container\">\n              <elsa-workflow-definition-properties-editor\n                readonly={this.workflowDefinition.isReadonly}\n                workflowDefinition={this.workflowDefinitionState}\n                workflowVersions={this.workflowVersions}\n                onWorkflowPropsUpdated={e => this.onWorkflowPropsUpdated(e)}\n                onVersionSelected={e => this.onVersionSelected(e)}\n                onDeleteVersionClicked={e => this.onDeleteVersionClicked(e)}\n                onRevertVersionClicked={e => this.onRevertVersionClicked(e)}\n              />\n            </div>\n          </elsa-panel>\n          <elsa-panel\n            class=\"elsa-activity-editor-container panel-bottom\"\n\n            position={PanelPosition.Bottom}\n            onExpandedStateChanged={e => this.onActivityEditorPanelStateChanged(e.detail)}>\n            <div class=\"activity-editor-container\">\n              {this.renderSelectedObject()}\n            </div>\n          </elsa-panel>\n        </div>\n      </WorkflowDefinitionTunnel.Provider>\n    );\n  }\n}\n"]}