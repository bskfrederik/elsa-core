{"version":3,"file":"manager.js","sourceRoot":"","sources":["../../../../src/modules/workflow-definitions/services/manager.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAC,SAAS,EAAE,OAAO,EAAC,MAAM,QAAQ,CAAC;AAE1C,OAAO,EAAgH,sBAAsB,EAAC,MAAM,OAAO,CAAC;AAC5J,OAAO,EAAC,gBAAgB,EAAC,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAC,yBAAyB,EAAC,MAAM,mBAAmB,CAAC;AAIrD,IAAM,yBAAyB,GAA/B,MAAM,yBAAyB;EAIpC;IAKO,gBAAW,GAAG,KAAK,EAAE,YAAoB,EAAE,cAA8B,EAA+B,EAAE;MAC/G,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,YAAY,EAAE,cAAc,EAAC,CAAC,CAAC;IAC5D,CAAC,CAAA;IAEM,iBAAY,GAAG,KAAK,EAAE,UAA8B,EAAE,OAAgB,EAA+B,EAAE;MAC5G,MAAM,OAAO,GAAkC;QAC7C,KAAK,EAAE,UAAU;QACjB,OAAO,EAAE,OAAO;OACjB,CAAC;MAEF,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC,CAAC;IAEK,oBAAe,GAAG,KAAK,EAAE,UAA8B,EAA+B,EAAE;MAC7F,MAAM,OAAO,GAAqC;QAChD,YAAY,EAAE,UAAU,CAAC,YAAY;OACtC,CAAC;MAEF,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC,CAAC;IAEK,mBAAc,GAAG,KAAK,EAAE,UAA8B,EAAiB,EAAE;MAC9E,MAAM,OAAO,GAA0B;QACrC,YAAY,EAAE,UAAU,CAAC,YAAY;QACrC,cAAc,EAAE,EAAC,OAAO,EAAE,UAAU,CAAC,OAAO,EAAC;OAC9C,CAAC;MAEF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;MAChD,gBAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAC,WAAW,EAAE,kBAAkB,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAC,CAAC,CAAC;IAClG,CAAC,CAAC;IAEK,mBAAc,GAAG,KAAK,EAAE,YAAoB,EAAE,IAAU,EAA+B,EAAE;MAC9F,IAAI;QACF,MAAM,aAAa,GAA0B,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC;QAClE,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAE5D,MAAM,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE,CAAC;QAE/C,OAAO,cAAc,CAAC,kBAAkB,CAAC;OAC1C;MAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OAClB;IACH,CAAC,CAAC;IA9CA,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACjD,IAAI,CAAC,yBAAyB,GAAG,SAAS,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;EAC5E,CAAC;CA8CF,CAAA;AArDY,yBAAyB;EADrC,OAAO,EAAE;;GACG,yBAAyB,CAqDrC;SArDY,yBAAyB","sourcesContent":["import {Container, Service} from \"typedi\";\r\nimport {WorkflowDefinition} from \"../models/entities\";\r\nimport {ExportWorkflowRequest, ImportWorkflowRequest, RetractWorkflowDefinitionRequest, SaveWorkflowDefinitionRequest, WorkflowDefinitionsApi} from \"./api\";\r\nimport {downloadFromBlob} from \"../../../utils\";\r\nimport {ActivityDescriptorManager} from \"../../../services\";\r\nimport {VersionOptions} from \"../../../models\";\r\n\r\n@Service()\r\nexport class WorkflowDefinitionManager {\r\n  private readonly api: WorkflowDefinitionsApi;\r\n  private readonly activityDescriptorManager: ActivityDescriptorManager;\r\n\r\n  constructor() {\r\n    this.api = Container.get(WorkflowDefinitionsApi);\r\n    this.activityDescriptorManager = Container.get(ActivityDescriptorManager);\r\n  }\r\n\r\n  public getWorkflow = async (definitionId: string, versionOptions: VersionOptions): Promise<WorkflowDefinition> => {\r\n    return await this.api.get({definitionId, versionOptions});\r\n  }\r\n\r\n  public saveWorkflow = async (definition: WorkflowDefinition, publish: boolean): Promise<WorkflowDefinition> => {\r\n    const request: SaveWorkflowDefinitionRequest = {\r\n      model: definition,\r\n      publish: publish\r\n    };\r\n\r\n    return await this.api.post(request);\r\n  };\r\n\r\n  public retractWorkflow = async (definition: WorkflowDefinition): Promise<WorkflowDefinition> => {\r\n    const request: RetractWorkflowDefinitionRequest = {\r\n      definitionId: definition.definitionId\r\n    };\r\n\r\n    return await this.api.retract(request);\r\n  };\r\n\r\n  public exportWorkflow = async (definition: WorkflowDefinition): Promise<void> => {\r\n    const request: ExportWorkflowRequest = {\r\n      definitionId: definition.definitionId,\r\n      versionOptions: {version: definition.version}\r\n    };\r\n\r\n    const response = await this.api.export(request);\r\n    downloadFromBlob(response.data, {contentType: 'application/json', fileName: response.fileName});\r\n  };\r\n\r\n  public importWorkflow = async (definitionId: string, file: File): Promise<WorkflowDefinition> => {\r\n    try {\r\n      const importRequest: ImportWorkflowRequest = {definitionId, file};\r\n      const importResponse = await this.api.import(importRequest);\r\n\r\n      await this.activityDescriptorManager.refresh();\r\n\r\n      return importResponse.workflowDefinition;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n}\r\n"]}