{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/modules/workflow-definitions/services/utils.ts"],"names":[],"mappings":"AAGA,MAAM,UAAU,iCAAiC,CAAC,SAAkB,EAAE,mBAAyD,EAAE,6BAA4C;EAC3K,MAAM,YAAY,GAAG,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAA,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;EAExG,OAAO,SAAS;IACd,CAAC,CAAC,6BAA6B,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,6BAA6B,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClH,CAAC,CAAC,6BAA6B,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACjF,CAAC","sourcesContent":["import {PagedList} from \"../../../models\";\r\nimport {WorkflowDefinitionSummary} from \"../models/entities\";\r\n\r\nexport function updateSelectedWorkflowDefinitions(isChecked: boolean, workflowDefinitions: PagedList<WorkflowDefinitionSummary>, selectedWorkflowDefinitionIds: Array<string>) {\r\n  const currentItems = workflowDefinitions.items.filter(item =>!item.isReadonly).map(x => x.definitionId);\r\n\r\n  return isChecked\r\n    ? selectedWorkflowDefinitionIds.concat(currentItems.filter(item => !selectedWorkflowDefinitionIds.includes(item)))\r\n    : selectedWorkflowDefinitionIds.filter(item => !currentItems.includes(item));\r\n}\r\n"]}