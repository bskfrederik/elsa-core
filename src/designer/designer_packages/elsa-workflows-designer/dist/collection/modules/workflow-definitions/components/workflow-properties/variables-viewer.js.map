{"version":3,"file":"variables-viewer.js","sourceRoot":"","sources":["../../../../../src/modules/workflow-definitions/components/workflow-properties/variables-viewer.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,GAAG,MAAM,eAAe,CAAC;AAE5D,OAAO,gBAAgB,MAAM,oCAAoC,CAAC;AAElE,OAAO,EAAE,yBAAyB,EAAE,MAAM,0BAA0B,CAAC;AAMrE,MAAM,OAAO,eAAe;;;;;;EAS1B,KAAK,CAAC,iBAAiB;IACrB,IAAI,CAAC,OAAO,GAAG,MAAM,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC/D,CAAC;EAGD,MAAM;IACJ,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IACjC,MAAM,cAAc,GAAmC,gBAAgB,CAAC,cAAc,CAAC;IAEvF,OAAO,CACL;MACE,WAAK,KAAK,EAAC,8EAA8E;QACvF,aAAO,KAAK,EAAC,eAAe;UAC1B;YACA;cACE,UAAI,KAAK,EAAC,KAAK,IAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAM;cACpD,UAAI,KAAK,EAAC,KAAK,IAAE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAM;cACrD,UAAI,KAAK,EAAC,KAAK,IAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAM;cACpD,UAAI,KAAK,EAAC,KAAK,IAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAM,CACpD,CACG;UACR,iBACC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;;YACtB,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,qBAAqB,CAAC,CAAC;YACvF,MAAM,WAAW,GAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,mCAAI,GAAG,CAAC;YAChD,MAAM,UAAU,GAAG,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACnG,MAAM,eAAe,GAAG,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,WAAW,mCAAI,QAAQ,CAAC,QAAQ,CAAC;YACrE,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAE/D,OAAO,CACL;cACE,UAAI,KAAK,EAAC,sBAAsB,IAAE,QAAQ,CAAC,IAAI,CAAM;cACrD,UAAI,KAAK,EAAC,sBAAsB,IAAE,eAAe,CAAM;cACvD,cAAK,WAAW,CAAM;cACtB,UAAI,KAAK,EAAC,SAAS,IAAE,aAAa,CAAM,CACrC,CAAC,CAAC;UACX,CAAC,CACF,CACO,CACF,CACJ,CACF,CACP,CAAC;EACJ,CAAC;EAEO,gBAAgB,CAAC,QAAkB,EAAE,OAAgC;IAC3E,IAAG,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,MAAK,gFAAgF;MACvG,OAAO,IAAI,CAAC;IAEd,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAC/C,MAAM,mBAAmB,GAAG,gBAAgB,CAAC,UAAU,CAAC,6BAA6B,CAAC;IACtF,MAAM,GAAG,GAAG,GAAG,gBAAgB,CAAC,EAAE,cAAc,QAAQ,CAAC,IAAI,EAAE,CAAC;IAChE,OAAO,mBAAmB,CAAC,GAAG,CAAC,CAAC;EAClC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {Component, Element, h, Prop, } from \"@stencil/core\";\nimport {StorageDriverDescriptor, Variable, WorkflowInstance} from \"../../../../models\";\nimport descriptorsStore from \"../../../../data/descriptors-store\";\nimport {WorkflowDefinition} from \"../../models/entities\";\nimport { getLocaleComponentStrings } from \"../../../../utils/locale\";\n\n@Component({\n  tag: 'elsa-variables-viewer',\n  shadow: false\n})\nexport class VariablesViewer {\n\n  @Prop() variables?: Array<Variable>;\n  @Prop() workflowDefinition: WorkflowDefinition;\n  @Prop() workflowInstance: WorkflowInstance;\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n  async componentWillLoad() {\n    this.strings = await getLocaleComponentStrings(this.element);\n  }\n\n\n  render() {\n    const variables = this.variables;\n    const storageDrivers: Array<StorageDriverDescriptor> = descriptorsStore.storageDrivers;\n\n    return (\n      <div>\n        <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\n          <table class=\"default-table\">\n            <thead>\n            <tr>\n              <th scope=\"col\">{this.strings.variablesTabName}</th>\n              <th scope=\"col\">{this.strings.variablesTabValue}</th>\n              <th scope=\"col\">{this.strings.variablesTabType}</th>\n              <th scope=\"col\">{this.strings.variablesTabStorage}</th>\n            </tr>\n            </thead>\n            <tbody>\n            {variables.map(variable => {\n                const storage = storageDrivers.find(x => x.typeName == variable.storageDriverTypeName);\n                const storageName = storage?.displayName ?? '-';\n                const descriptor = descriptorsStore.variableDescriptors.find(x => x.typeName == variable.typeName);\n                const typeDisplayName = descriptor?.displayName ?? variable.typeName;\n                const variableValue = this.getVariableValue(variable, storage);\n\n                return (\n                  <tr>\n                    <td class=\"tw-whitespace-nowrap\">{variable.name}</td>\n                    <td class=\"tw-whitespace-nowrap\">{typeDisplayName}</td>\n                    <td>{storageName}</td>\n                    <td class=\"tw-pr-6\">{variableValue}</td>\n                  </tr>);\n              }\n            )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  private getVariableValue(variable: Variable, storage: StorageDriverDescriptor) : any {\n    if(storage?.typeName !== 'Elsa.Workflows.Core.Implementations.WorkflowStorageDriver, Elsa.Workflows.Core')\n      return null;\n\n    const workflowInstance = this.workflowInstance;\n    const persistentVariables = workflowInstance.properties.PersistentVariablesDictionary;\n    const key = `${workflowInstance.id}:Workflow1:${variable.name}`;\n    return persistentVariables[key];\n  }\n}\n"]}