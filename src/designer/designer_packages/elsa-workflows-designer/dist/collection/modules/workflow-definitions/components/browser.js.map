{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../../../src/modules/workflow-definitions/components/browser.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, h, Host, Method, Prop, State, Watch } from '@stencil/core';\nimport { OrderBy, PagedList, VersionOptions } from '../../../models';\nimport { Container } from 'typedi';\nimport { DeleteIcon, EditIcon, PublishIcon, UnPublishIcon } from '../../../components/icons/tooling';\nimport { Search } from './search';\nimport { Filter, FilterProps } from './filter';\nimport { PagerData } from '../../../components/shared/pager/pager';\nimport { updateSelectedWorkflowDefinitions } from '../services/utils';\nimport { WorkflowDefinition, WorkflowDefinitionSummary } from '../models/entities';\nimport { ListWorkflowDefinitionsRequest, WorkflowDefinitionsApi, WorkflowDefinitionsOrderBy } from '../services/api';\nimport { ModalDialogService, DefaultModalActions, DefaultContents, ModalType } from '../../../components/shared/modal-dialog';\nimport { ActivityDescriptorManager } from '../../../services';\nimport { getRequest, persistRequest } from '../services/lookup-persistence';\nimport { StartIcon } from '../../../components/icons/activities/start';\nimport { StartAtIcon } from '../../../components/icons/activities/startat';\nimport { RunTaskIcon } from '../../../components/icons/activities/run-task';\nimport { RunWorkflowIcon } from '../../../components/icons/tooling/run-workflow';\nimport { text } from 'stream/consumers';\nimport { getLocaleComponentStrings } from '../../../utils/locale';\n\n@Component({\n  tag: 'elsa-workflow-definition-browser',\n  shadow: false,\n})\nexport class WorkflowDefinitionBrowser {\n  static readonly DEFAULT_PAGE_SIZE = 15;\n  static readonly MIN_PAGE_SIZE = 5;\n  static readonly MAX_PAGE_SIZE = 100;\n  static readonly START_PAGE = 0;\n\n  private readonly api: WorkflowDefinitionsApi;\n  private selectAllCheckbox: HTMLInputElement;\n  private readonly modalDialogService: ModalDialogService;\n  private readonly activityDescriptorManager: ActivityDescriptorManager;\n\n  constructor() {\n    this.api = Container.get(WorkflowDefinitionsApi);\n    this.modalDialogService = Container.get(ModalDialogService);\n    this.activityDescriptorManager = Container.get(ActivityDescriptorManager);\n  }\n\n  @Prop() customActions: CustomAction[] = [];\n  @Event() workflowDefinitionSelected: EventEmitter<WorkflowDefinitionSummary>;\n  @Event() workflowInstancesSelected: EventEmitter<WorkflowDefinitionSummary>;\n  @Event() workflowInstanceStarted: EventEmitter<WorkflowDefinitionSummary>;\n  @Event() public newWorkflowDefinitionSelected: EventEmitter;\n  @State() private workflowDefinitions: PagedList<WorkflowDefinitionSummary> = { items: [], totalCount: 0 };\n  @State() private publishedWorkflowDefinitions: PagedList<WorkflowDefinitionSummary> = { items: [], totalCount: 0 };\n  @State() private selectedWorkflowDefinitionIds: Array<string> = [];\n  @State() private currentPage: number = 0;\n  @State() private currentPageSize: number = WorkflowDefinitionBrowser.DEFAULT_PAGE_SIZE;\n  @State() private orderBy?: WorkflowDefinitionsOrderBy;\n  @State() private labels?: string[];\n  @State() private selectAllChecked: boolean;\n  @State() private searchTerm?: string;\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n  async componentWillLoad() {\n    this.strings = await getLocaleComponentStrings(this.element);\n\n    const persistedRequest = getRequest();\n\n    if (persistedRequest) {\n      this.currentPage = persistedRequest.page;\n      this.currentPageSize = persistedRequest.pageSize;\n      this.orderBy = persistedRequest.orderBy;\n    }\n\n    await this.loadWorkflowDefinitions();\n  }\n\n  private onNewDefinitionClick = async () => {\n    this.newWorkflowDefinitionSelected.emit();\n  };\n\n  private onSearch = async (term: string) => {\n    this.searchTerm = term;\n    this.resetPagination();\n    await this.loadWorkflowDefinitions();\n  };\n\n  private async onPublishClick(e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) {\n    await this.api.publish(workflowDefinition);\n    await this.loadWorkflowDefinitions();\n  }\n\n  private async onUnPublishClick(e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) {\n    await this.api.retract(workflowDefinition);\n    await this.loadWorkflowDefinitions();\n  }\n\n  private async onWorkflowStartClick(e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) {\n    await this.api.execute(workflowDefinition.definitionId);\n    await this.loadWorkflowDefinitions();\n  }\n\n  private async onDeleteClick(e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) {\n    this.modalDialogService.show(() => DefaultContents.Warning('Are you sure you want to delete this workflow definition?'), {\n      actions: [\n        DefaultModalActions.Delete(async () => {\n          await this.api.delete(workflowDefinition);\n          await this.loadWorkflowDefinitions();\n          await this.activityDescriptorManager.refresh();\n        }),\n        DefaultModalActions.Cancel(),\n      ],\n      modalType: ModalType.Confirmation,\n    });\n  }\n\n  private onDeleteManyClick = async () => {\n    if (this.selectedWorkflowDefinitionIds.length == 0) return;\n\n    this.modalDialogService.show(() => DefaultContents.Warning('Are you sure you want to delete selected workflow definitions?'), {\n      actions: [\n        DefaultModalActions.Delete(async () => {\n          await this.api.deleteMany({ definitionIds: this.selectedWorkflowDefinitionIds });\n          await this.loadWorkflowDefinitions();\n          await this.activityDescriptorManager.refresh();\n        }),\n        DefaultModalActions.Cancel(),\n      ],\n      modalType: ModalType.Confirmation,\n    });\n  };\n\n  private onPublishManyClick = async () => {\n    if (this.selectedWorkflowDefinitionIds.length == 0) return;\n\n    this.modalDialogService.show(() => DefaultContents.Warning('Are you sure you want to publish selected workflow definitions?'), {\n      actions: [\n        DefaultModalActions.Publish(async () => {\n          await this.api.publishMany({ definitionIds: this.selectedWorkflowDefinitionIds });\n          await this.loadWorkflowDefinitions();\n        }),\n        DefaultModalActions.Cancel(),\n      ],\n      modalType: ModalType.Confirmation,\n    });\n  };\n\n  private onUnpublishManyClick = async () => {\n    if (this.selectedWorkflowDefinitionIds.length == 0) return;\n\n    this.modalDialogService.show(() => DefaultContents.Warning('Are you sure you want to unpublish selected workflow definitions?'), {\n      actions: [\n        DefaultModalActions.Unpublish(async () => {\n          await this.api.unpublishMany({ definitionIds: this.selectedWorkflowDefinitionIds });\n          await this.loadWorkflowDefinitions();\n        }),\n        DefaultModalActions.Cancel(),\n      ],\n      modalType: ModalType.Confirmation,\n    });\n  };\n\n  private onWorkflowDefinitionClick = async (e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) => {\n    e.preventDefault();\n    this.workflowDefinitionSelected.emit(workflowDefinition);\n  };\n\n  private onWorkflowInstanceStarted = async (e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) => {\n    e.preventDefault();\n    await this.onWorkflowStartClick(e, workflowDefinition);\n    this.workflowInstanceStarted.emit(workflowDefinition);\n  };\n\n  private onWorkflowInstancesClick = async (e: MouseEvent, workflowDefinition: WorkflowDefinitionSummary) => {\n    e.preventDefault();\n    this.workflowInstancesSelected.emit(workflowDefinition);\n  };\n\n  private async loadWorkflowDefinitions() {\n    // TODO: Load only json-based workflow definitions for now.\n    // Later, also allow CLR-based workflows to be \"edited\" (publish / unpublish / position activities / set variables, etc.)\n    const materializerName = 'Json';\n\n    const request: ListWorkflowDefinitionsRequest = {\n      searchTerm: this.searchTerm,\n      materializerName,\n      page: this.currentPage,\n      pageSize: this.currentPageSize,\n      versionOptions: { isLatest: true },\n      orderBy: this.orderBy,\n      label: this.labels,\n    };\n    persistRequest(request);\n\n    const latestWorkflowDefinitions = await this.api.list(request);\n    const unpublishedWorkflowDefinitionIds = latestWorkflowDefinitions.items.filter(x => !x.isPublished).map(x => x.definitionId);\n\n    this.publishedWorkflowDefinitions = await this.api.list({\n      materializerName,\n      definitionIds: unpublishedWorkflowDefinitionIds,\n      versionOptions: { isPublished: true },\n    });\n\n    this.workflowDefinitions = latestWorkflowDefinitions;\n  }\n\n  private onPaginated = async (e: CustomEvent<PagerData>) => {\n    this.currentPage = e.detail.page;\n    await this.loadWorkflowDefinitions();\n  };\n\n  private onPageSizeChanged = async (pageSize: number) => {\n    this.currentPageSize = pageSize;\n    this.resetPagination();\n    await this.loadWorkflowDefinitions();\n  };\n\n  private onOrderByChanged = async (orderBy: WorkflowDefinitionsOrderBy) => {\n    this.orderBy = orderBy;\n    await this.loadWorkflowDefinitions();\n  };\n\n  private onLabelChange = async (e: CustomEvent<Array<string>>) => {\n    this.labels = e.detail;\n    await this.loadWorkflowDefinitions();\n  };\n\n  private resetPagination = () => {\n    this.currentPage = 0;\n    this.selectedWorkflowDefinitionIds = [];\n  };\n\n  private getSelectAllState = () => {\n    const { items } = this.workflowDefinitions;\n    const selectedWorkflowInstanceIds = this.selectedWorkflowDefinitionIds;\n    return items.findIndex(item => !selectedWorkflowInstanceIds.includes(item.definitionId)) < 0;\n  };\n\n  private setSelectAllIndeterminateState = () => {\n    if (this.selectAllCheckbox) {\n      const selectedItems = this.workflowDefinitions.items.filter(item => this.selectedWorkflowDefinitionIds.includes(item.definitionId));\n      this.selectAllCheckbox.indeterminate = selectedItems.length != 0 && selectedItems.length != this.workflowDefinitions.items.length;\n    }\n  };\n\n  private onWorkflowDefinitionCheckChange(e: Event, workflowDefinition: WorkflowDefinitionSummary) {\n    const checkBox = e.target as HTMLInputElement;\n    const isChecked = checkBox.checked;\n\n    if (isChecked) this.selectedWorkflowDefinitionIds = [...this.selectedWorkflowDefinitionIds, workflowDefinition.definitionId];\n    else this.selectedWorkflowDefinitionIds = this.selectedWorkflowDefinitionIds.filter(x => x != workflowDefinition.definitionId);\n\n    this.setSelectAllIndeterminateState();\n  }\n\n  private onSelectAllCheckChange(e: Event) {\n    const checkBox = e.target as HTMLInputElement;\n    const isChecked = checkBox.checked;\n    this.selectAllChecked = isChecked;\n    this.selectedWorkflowDefinitionIds = updateSelectedWorkflowDefinitions(isChecked, this.workflowDefinitions, this.selectedWorkflowDefinitionIds);\n  }\n\n  render() {\n    const workflowDefinitions = this.workflowDefinitions;\n    const publishedWorkflowDefinitions = this.publishedWorkflowDefinitions.items;\n    const totalCount = workflowDefinitions.totalCount;\n\n    const filterProps: FilterProps = {\n      pageSizeFilter: {\n        selectedPageSize: this.currentPageSize,\n        onChange: this.onPageSizeChanged,\n        pageSizeText: this.strings.pageSize,\n      },\n      orderByFilter: {\n        selectedOrderBy: this.orderBy,\n        onChange: this.onOrderByChanged,\n        orderByText: this.strings.orderBy,\n      },\n      labelFilter: {\n        selectedLabels: this.labels,\n        onSelectedLabelsChanged: this.onLabelChange,\n        buttonClass: 'tw-text-gray-500 hover:tw-text-gray-300',\n        containerClass: 'tw-mt-1.5',\n      },\n      onBulkDelete: this.onDeleteManyClick,\n      onBulkPublish: this.onPublishManyClick,\n      onBulkUnpublish: this.onUnpublishManyClick,\n      bulkActionsText: this.strings.bulkActions,\n      bulkDeleteText: this.strings.bulkDelete,\n      bulkPublishText: this.strings.bulkPublish,\n      bulkUnpublishText: this.strings.bulkUnpublish,\n    };\n\n    return (\n      <Host class=\"tw-block\">\n        <div class=\"tw-pt-4\">\n          <h2 class=\"tw-text-lg tw-font-medium tw-ml-4 tw-mb-2\">{this.strings.title}</h2>\n\n          <Search onSearch={this.onSearch} displayText={this.strings.search} />\n          <Filter {...filterProps} />\n          <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\n            <table class=\"default-table\">\n              <thead>\n                <tr>\n                  <th>\n                    <input\n                      type=\"checkbox\"\n                      value=\"true\"\n                      checked={this.getSelectAllState()}\n                      onChange={e => this.onSelectAllCheckChange(e)}\n                      ref={el => (this.selectAllCheckbox = el)}\n                    />\n                  </th>\n                  <th>\n                    <span class=\"lg:tw-pl-2\">{this.strings.name}</span>\n                  </th>\n                  <th>{this.strings.instances}</th>\n                  <th class=\"tw-text-center\">{this.strings.latestVersion}</th>\n                  <th class=\"tw-text-center\">{this.strings.publishedVersion}</th>\n                  <th />\n                </tr>\n              </thead>\n              <tbody>\n                {workflowDefinitions.items.map(workflowDefinition => {\n                  const latestVersionNumber = workflowDefinition.version;\n                  const { isPublished } = workflowDefinition;\n                  const publishedVersion: WorkflowDefinitionSummary = isPublished\n                    ? workflowDefinition\n                    : publishedWorkflowDefinitions.find(x => x.definitionId == workflowDefinition.definitionId);\n                  const publishedVersionNumber = !!publishedVersion ? publishedVersion.version : '-';\n\n                  const isReadonly = workflowDefinition.isReadonly;\n\n                  const isSelected = this.selectedWorkflowDefinitionIds.findIndex(x => x === workflowDefinition.definitionId) >= 0;\n                  let workflowDisplayName = workflowDefinition.name;\n\n                  if (!workflowDisplayName || workflowDisplayName.trim().length == 0) workflowDisplayName = 'Untitled';\n\n                  return (\n                    <tr>\n                      <td>\n                        <input\n                          disabled={isReadonly}\n                          type=\"checkbox\"\n                          value={workflowDefinition.definitionId}\n                          checked={isSelected}\n                          onChange={e => this.onWorkflowDefinitionCheckChange(e, workflowDefinition)}\n                        />\n                      </td>\n                      <td>\n                        <div class=\"tw-flex tw-items-center tw-space-x-3 lg:tw-pl-2\">\n                          <a onClick={e => this.onWorkflowDefinitionClick(e, workflowDefinition)} href=\"#\" class=\"tw-truncate hover:tw-text-gray-600\">\n                            <span>{workflowDisplayName}</span>\n                          </a>\n                        </div>\n                      </td>\n\n                      <td>\n                        <div class=\"tw-flex tw-items-center tw-space-x-3 lg:tw-pl-2\">\n                          <a onClick={e => this.onWorkflowInstancesClick(e, workflowDefinition)} href=\"#\" class=\"tw-truncate hover:tw-text-gray-600\">\n                            Instances\n                          </a>\n                        </div>\n                      </td>\n\n                      <td class=\"tw-text-center\">{latestVersionNumber}</td>\n                      <td class=\"tw-text-center\">{publishedVersionNumber}</td>\n                      <td class=\"tw-pr-6\">\n                        {isReadonly ? (\n                          ''\n                        ) : (\n                          <elsa-context-menu\n                            menuItems={[\n                              { text: 'Start', handler: e => this.onWorkflowInstanceStarted(e, workflowDefinition), icon: <RunWorkflowIcon /> },\n                              { text: this.strings.buttonEdit, handler: e => this.onWorkflowDefinitionClick(e, workflowDefinition), icon: <EditIcon /> },\n                              isPublished\n                                ? { text: 'Unpublish', handler: e => this.onUnPublishClick(e, workflowDefinition), icon: <UnPublishIcon /> }\n                                : {\n                                    text: this.strings.buttonPublish,\n                                    handler: e => this.onPublishClick(e, workflowDefinition),\n                                    icon: <PublishIcon />,\n                                  },\n                              { text: this.strings.buttonDelete, handler: e => this.onDeleteClick(e, workflowDefinition), icon: <DeleteIcon /> },\n                            ].concat(\n                              ...this.customActions.map(x => ({\n                                text: x.text,\n                                handler: e => x.callbackFn(workflowDefinition),\n                                icon: null,\n                              })),\n                            )}\n                          />\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n            <elsa-pager page={this.currentPage} pageSize={this.currentPageSize} totalCount={totalCount} onPaginated={this.onPaginated} />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n\nexport interface CustomAction {\n  text: string;\n  callbackFn: (wofklowDefinition: WorkflowDefinitionSummary) => Promise<void>;\n}\n"]}