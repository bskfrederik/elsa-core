{"version":3,"file":"workflow-definitions-plugin.js","sourceRoot":"","sources":["../../../../src/modules/workflow-definitions/plugins/workflow-definitions-plugin.tsx"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata';\r\nimport {h} from \"@stencil/core\";\r\nimport {Container, Service} from \"typedi\";\r\nimport {ActivityDescriptor, Plugin, WorkflowInstance, WorkflowInstanceSummary} from \"../../../models\";\r\nimport newButtonItemStore from \"../../../data/new-button-item-store\";\r\nimport {Flowchart} from \"../../flowchart/models\";\r\nimport {generateUniqueActivityName} from '../../../utils/generate-activity-name';\r\nimport descriptorsStore from \"../../../data/descriptors-store\";\r\nimport toolbarButtonMenuItemStore from \"../../../data/toolbar-button-menu-item-store\";\r\nimport {ToolbarMenuItem} from \"../../../components/toolbar/workflow-toolbar-menu/models\";\r\nimport {ActivityDescriptorManager, EventBus, InputControlRegistry} from \"../../../services\";\r\nimport {WorkflowDefinitionManager} from \"../services/manager\";\r\nimport {WorkflowDefinition, WorkflowDefinitionSummary} from \"../models/entities\";\r\nimport {PublishClickedArgs} from \"../components/publish-button\";\r\nimport {WorkflowDefinitionsApi} from \"../services/api\";\r\nimport {DefaultModalActions, ModalDialogInstance, ModalDialogService} from \"../../../components/shared/modal-dialog\";\r\nimport {htmlToElement} from \"../../../utils\";\r\nimport NotificationService from \"../../notifications/notification-service\";\r\nimport {uuid} from \"@antv/x6/es/util/string/uuid\";\r\nimport {DropdownButtonItem} from \"../../../components/shared/dropdown-button/models\";\r\nimport {NotificationDisplayType} from \"../../notifications/models\";\r\nimport {WorkflowDefinitionEditorInstance} from \"../services/editor-instance\";\r\nimport {WorkflowDefinitionEditorService} from \"../services/editor-service\";\r\nimport { WorkflowInstanceViewerService } from '../../workflow-instances/services/viewer-service';\r\nimport { WorkflowInstancesApi } from '../../workflow-instances/services/workflow-instances-api';\r\n\r\nconst FlowchartTypeName = 'Elsa.Flowchart';\r\n\r\n@Service()\r\nexport class WorkflowDefinitionsPlugin implements Plugin {\r\n  private readonly eventBus: EventBus;\r\n  private readonly workflowDefinitionManager: WorkflowDefinitionManager;\r\n  private readonly workflowDefinitionEditorService: WorkflowDefinitionEditorService;\r\n  private readonly modalDialogService: ModalDialogService;\r\n  private readonly activityDescriptorManager: ActivityDescriptorManager;\r\n  private api: WorkflowDefinitionsApi;\r\n  private workflowDefinitionEditorElement: HTMLElsaWorkflowDefinitionEditorElement;\r\n  private workflowDefinitionBrowserInstance: ModalDialogInstance;\r\n  private inputControlRegistry: InputControlRegistry;\r\n  private workflowDefinitionEditorInstance: WorkflowDefinitionEditorInstance;\r\n  private readonly workflowInstancesApi: WorkflowInstancesApi;\r\n  private workflowInstanceBrowserInstance: ModalDialogInstance;\r\n\r\n  constructor() {\r\n    this.eventBus = Container.get(EventBus);\r\n    this.api = Container.get(WorkflowDefinitionsApi);\r\n    this.workflowDefinitionManager = Container.get(WorkflowDefinitionManager);\r\n    this.workflowDefinitionEditorService = Container.get(WorkflowDefinitionEditorService);\r\n    this.modalDialogService = Container.get(ModalDialogService);\r\n    this.activityDescriptorManager = Container.get(ActivityDescriptorManager);\r\n    this.inputControlRegistry = Container.get(InputControlRegistry)\r\n    this.workflowInstancesApi = Container.get(WorkflowInstancesApi);\r\n\r\n    const newMenuItems: Array<DropdownButtonItem> = [{\r\n      order: 0,\r\n      group: 0,\r\n      text: 'Workflow Definition',\r\n      handler: this.onNewWorkflowDefinitionSelected\r\n    }, {\r\n      order: 0,\r\n      group: 2,\r\n      text: 'Import',\r\n      handler: this.onImportWorkflowDefinitionClick\r\n    }];\r\n\r\n    const toolbarItems: Array<ToolbarMenuItem> = [{\r\n      text: 'Workflow Definitions',\r\n      onClick: this.onBrowseWorkflowDefinitions,\r\n      order: 5\r\n    }]\r\n\r\n    newButtonItemStore.items = [...newButtonItemStore.items, ...newMenuItems];\r\n    toolbarButtonMenuItemStore.items = [...toolbarButtonMenuItemStore.items, ...toolbarItems];\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    this.inputControlRegistry.add(\"workflow-definition-picker\", c => <elsa-workflow-definition-picker-input\r\n      inputContext={c}/>);\r\n  }\r\n\r\n  newWorkflow = async () => {\r\n\r\n    const flowchartDescriptor = this.getFlowchartDescriptor();\r\n    const newName = await this.generateUniqueActivityName(flowchartDescriptor);\r\n\r\n    const flowchart: Flowchart = {\r\n      type: flowchartDescriptor.typeName,\r\n      version: 1,\r\n      activities: [],\r\n      connections: [],\r\n      id: newName,\r\n      metadata: {},\r\n      customProperties: {},\r\n      variables: []\r\n    } as Flowchart;\r\n\r\n    const workflowDefinition: WorkflowDefinition = {\r\n      root: flowchart,\r\n      id: '',\r\n      name: 'Workflow 1',\r\n      definitionId: '',\r\n      version: 1,\r\n      isLatest: true,\r\n      isPublished: false,\r\n      isReadonly:false,\r\n      materializerName: 'Json'\r\n    };\r\n\r\n    const newWorkflowDefinition = await this.workflowDefinitionManager.saveWorkflow(workflowDefinition, false);\r\n    this.showWorkflowDefinitionEditor(newWorkflowDefinition);\r\n  };\r\n\r\n  private getFlowchartDescriptor = () => this.getActivityDescriptor(FlowchartTypeName);\r\n  private getActivityDescriptor = (typeName: string): ActivityDescriptor => descriptorsStore.activityDescriptors.find(x => x.typeName == typeName)\r\n  private generateUniqueActivityName = async (activityDescriptor: ActivityDescriptor): Promise<string> => await generateUniqueActivityName([], activityDescriptor);\r\n\r\n  public showWorkflowDefinitionEditor = (workflowDefinition: WorkflowDefinition) => {\r\n    this.workflowDefinitionEditorInstance = this.workflowDefinitionEditorService.show(workflowDefinition);\r\n  };\r\n\r\n  private import = async () => {\r\n    const fileInput = htmlToElement<HTMLInputElement>('<input type=\"file\" />');\r\n\r\n    document.body.append(fileInput);\r\n    fileInput.click();\r\n\r\n    fileInput.addEventListener('change', async e => {\r\n      const files = fileInput.files;\r\n\r\n      if (files.length == 0) {\r\n        fileInput.remove();\r\n        return;\r\n      }\r\n\r\n      const file = files[0];\r\n      const importedWorkflow = await this.workflowDefinitionManager.importWorkflow(null, file);\r\n      fileInput.remove();\r\n      this.showWorkflowDefinitionEditor(importedWorkflow);\r\n    });\r\n  };\r\n\r\n  private onNewWorkflowDefinitionSelected = async () => {\r\n    await this.newWorkflow();\r\n    this.modalDialogService.hide(this.workflowDefinitionBrowserInstance);\r\n  };\r\n\r\n  private onImportWorkflowDefinitionClick = async () => {\r\n    await this.import();\r\n    this.modalDialogService.hide(this.workflowDefinitionBrowserInstance);\r\n  };\r\n\r\n  private onBrowseWorkflowDefinitions = async () => {\r\n    const closeAction = DefaultModalActions.Close();\r\n    const newAction = DefaultModalActions.New(this.onNewWorkflowDefinitionSelected);\r\n    const actions = [closeAction, newAction];\r\n\r\n    this.workflowDefinitionBrowserInstance = this.modalDialogService.show(() =>\r\n        <elsa-workflow-definition-browser onWorkflowDefinitionSelected={this.onWorkflowDefinitionSelected}\r\n                                          onWorkflowInstancesSelected={this.onWorkflowInstancesSelected}\r\n                                          onNewWorkflowDefinitionSelected={this.onNewWorkflowDefinitionSelected}/>,\r\n      {actions})\r\n  }\r\n\r\n  private onWorkflowDefinitionSelected = async (e: CustomEvent<WorkflowDefinitionSummary>) => {\r\n    const definitionId = e.detail.definitionId;\r\n    const workflowDefinition = await this.api.get({definitionId});\r\n    this.showWorkflowDefinitionEditor(workflowDefinition);\r\n    this.modalDialogService.hide(this.workflowDefinitionBrowserInstance);\r\n  }\r\n\r\n  private onWorkflowInstancesSelected = async (e: CustomEvent<WorkflowDefinitionSummary>) => {\r\n    const definitionId = e.detail.definitionId;\r\n    const version = e.detail.version;\r\n    const workflow = await this.api.get({definitionId, versionOptions:{version}});\r\n\r\n    this.workflowInstanceBrowserInstance = this.modalDialogService.show(() =>\r\n        <elsa-workflow-instance-browser \r\n          workflowDefinition={workflow} \r\n          onWorkflowInstanceSelected={this.onWorkflowInstanceSelected}/>,\r\n          {actions: [DefaultModalActions.Close()], size: 'tw-max-w-screen-2xl'});\r\n  }\r\n\r\n  public publishCurrentWorkflow = async (args: PublishClickedArgs) => {\r\n    return this.onPublishClicked(new CustomEvent('PublishClickedArgs', {detail: args}));\r\n  }\r\n\r\n  private onPublishClicked = async (e: CustomEvent<PublishClickedArgs>) => {\r\n    const definition = await this.workflowDefinitionEditorElement.getWorkflowDefinition();\r\n\r\n    if (!definition.isLatest) {\r\n      console.debug('Workflow definition is not latest. Skipping publish.');\r\n      return;\r\n    }\r\n\r\n    e.detail.begin();\r\n\r\n    const notification = NotificationService.createNotification({\r\n      title: 'Publishing',\r\n      id: uuid(),\r\n      text: 'Workflow is being published. Please wait.',\r\n      type: NotificationDisplayType.InProgress\r\n    });\r\n\r\n    await this.workflowDefinitionEditorInstance.saveWorkflowDefinition(definition, true)\r\n      .then(async () => {\r\n        NotificationService.updateNotification(notification, {title: 'Workflow published', text: 'Published!'})\r\n        e.detail.complete();\r\n\r\n        if (definition.options?.autoUpdateConsumingWorkflows)\r\n          await this.updateCompositeActivityReferences(definition);\r\n\r\n        // Reload activity descriptors.\r\n        await this.activityDescriptorManager.refresh();\r\n      }).catch(() => {\r\n        NotificationService.updateNotification(notification, {\r\n          title: 'Error while publishing',\r\n          text: <span>Workflow {definition.definitionId} could not be published.</span>,\r\n          type: NotificationDisplayType.Error\r\n        });\r\n        e.detail.complete();\r\n      });\r\n  }\r\n\r\n  private updateCompositeActivityReferences = async (definition: WorkflowDefinition) => {\r\n\r\n    await this.api.updateWorkflowReferences({definitionId: definition.definitionId})\r\n      .then(async (response) => {\r\n        const message = 'The following consuming workflows have been successfully updated:\\n\\n' + response.affectedWorkflows.join('\\n');\r\n        if (response.affectedWorkflows.length > 0) {\r\n          NotificationService.createNotification({\r\n            title: 'Consuming Workflows',\r\n            id: uuid(),\r\n            text: message,\r\n            type: NotificationDisplayType.Success\r\n          });\r\n        }\r\n      }).catch(() => {\r\n        NotificationService.createNotification({\r\n          title: 'Error while updating consuming workflows',\r\n          id: uuid(),\r\n          text: 'Consuming workflows could not be updated',\r\n          type: NotificationDisplayType.Error\r\n        });\r\n      });\r\n  }\r\n\r\n  private onWorkflowInstanceSelected = async (e: CustomEvent<WorkflowInstanceSummary>) => {\r\n    const definitionId = e.detail.definitionId;\r\n    const instanceId = e.detail.id;\r\n    const version = e.detail.version;\r\n\r\n    await this.api.get({definitionId, versionOptions: {version}, includeCompositeRoot: true})\r\n      .then(async (workflowDefinition) => {\r\n        await this.workflowInstancesApi.get({id: instanceId}).then((workflowInstance) => {\r\n          this.showWorkflowInstanceViewer(workflowDefinition, workflowInstance);\r\n          this.modalDialogService.hide(this.workflowInstanceBrowserInstance);\r\n          this.modalDialogService.hide(this.workflowDefinitionBrowserInstance);\r\n        }).catch(() => {\r\n          NotificationService.createNotification({\r\n            title: 'Error',\r\n            id: uuid(),\r\n            text: <div>Could not load workflow instance {instanceId} information</div>,\r\n            type: NotificationDisplayType.Error\r\n          });\r\n          this.modalDialogService.hide(this.workflowInstanceBrowserInstance);\r\n        });\r\n      }).catch(() => {\r\n        NotificationService.createNotification({\r\n          title: 'Error',\r\n          id: uuid(),\r\n          text: <div>Could not load workflow {definitionId} information</div>,\r\n          type: NotificationDisplayType.Error\r\n        });\r\n        this.modalDialogService.hide(this.workflowInstanceBrowserInstance);\r\n      });\r\n  }\r\n\r\n  private showWorkflowInstanceViewer = (workflowDefinition: WorkflowDefinition, workflowInstance: WorkflowInstance) => {\r\n    const service = Container.get(WorkflowInstanceViewerService);\r\n    service.show(workflowDefinition, workflowInstance);\r\n  };\r\n}\r\n"]}