{"version":3,"file":"filter.js","sourceRoot":"","sources":["../../../../src/modules/workflow-definitions/components/filter.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAuB,CAAC,EAAE,MAAM,eAAe,CAAC;AACvD,OAAO,EAAqB,oBAAoB,EAAC,MAAM,mDAAmD,CAAC;AAC3G,OAAO,EAAC,eAAe,EAAE,WAAW,EAAE,YAAY,EAAC,MAAM,mCAAmC,CAAC;AAC7F,OAAO,EAAC,0BAA0B,EAAC,MAAM,iBAAiB,CAAC;AAqC3D,MAAM,CAAC,MAAM,MAAM,GAAqC,CAAC,EAAE,cAAc,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE,WAAW,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,iBAAiB,EAAE,EAAE,EAAE;EAC5N,OAAO,CACL,WAAK,KAAK,EAAC,yEAAyE;IAClF,WAAK,KAAK,EAAC,kBAAkB;MAC3B,EAAC,WAAW,IAAC,YAAY,EAAE,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,eAAe,EAAE,eAAe,EAAE,iBAAiB,EAAE,iBAAiB,GAAI,CACjP;IACN,WAAK,KAAK,EAAC,WAAW,aAAa;IAEnC,EAAC,cAAc,oBAAK,cAAc,EAAI;IAEtC,EAAC,aAAa,oBAAK,aAAa,EAAI,CAChC,CACP,CAAC;AACJ,CAAC,CAAC;AAIF,MAAM,WAAW,GAA0C,CAAC,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,EACxG,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,iBAAiB,EAAE,EAAE,EAAE;EACzE,MAAM,WAAW,GAAG;IAClB;MACE,IAAI,EAAE,cAAc;MACpB,IAAI,EAAE,QAAQ;KACf;IACD;MACE,IAAI,EAAE,eAAe;MACrB,IAAI,EAAE,SAAS;KAChB;IACD;MACE,IAAI,EAAE,iBAAiB;MACvB,IAAI,EAAE,WAAW;KAClB;GACF,CAAC;EAEF,MAAM,oBAAoB,GAAG,CAAC,CAAkC,EAAE,EAAE;IAClE,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;IACxB,QAAQ,MAAM,CAAC,IAAI,EAAE;MACnB,KAAK,QAAQ;QACX,YAAY,EAAE,CAAC;QACf,MAAM;MACR,KAAK,SAAS;QACZ,aAAa,EAAE,CAAC;QAChB,MAAM;MACR,KAAK,WAAW;QACd,eAAe,EAAE,CAAC;QAClB,MAAM;MAER;QACE,MAAM,CAAC,OAAO,EAAE,CAAC;KACpB;EACH,CAAC,CAAC;EAEF,OAAO,4BAAsB,IAAI,EAAE,eAAe,EACrB,KAAK,EAAE,WAAW,EAClB,KAAK,EAAC,WAAW,EACjB,IAAI,EAAE,EAAC,eAAe,OAAG,EACzB,MAAM,EAAE,oBAAoB,CAAC,OAAO,EACpC,cAAc,EAAE,oBAAoB,GAAI,CAAC;AACxE,CAAC,CAAC;AAEF,MAAM,cAAc,GAA6C,CAAC,EAAE,gBAAgB,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,EAAE;EAChH,MAAM,oBAAoB,GAAG,GAAG,YAAY,KAAK,gBAAgB,EAAE,CAAC;EACpE,MAAM,SAAS,GAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;EAE9D,MAAM,KAAK,GAA8B,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;IACzD,MAAM,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;IACpB,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,IAAI,gBAAgB,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;EACrE,CAAC,CAAC,CAAC;EAEH,MAAM,iBAAiB,GAAG,CAAC,CAAkC,EAAE,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;EAErG,OAAO,4BAAsB,IAAI,EAAE,oBAAoB,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,WAAW,EAAC,IAAI,EAAE,EAAC,YAAY,OAAG,EAAE,MAAM,EAAE,oBAAoB,CAAC,QAAQ,EAAE,cAAc,EAAE,iBAAiB,GAAI,CAAC;AAChM,CAAC,CAAC;AAEF,MAAM,aAAa,GAA4C,CAAC,EAAE,eAAe,EAAE,QAAQ,EAAE,WAAW,EAAE,EAAE,EAAE;EAC5G,MAAM,mBAAmB,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,WAAW,KAAK,eAAe,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;EACnG,MAAM,aAAa,GAAsC,CAAC,0BAA0B,CAAC,IAAI,EAAE,0BAA0B,CAAC,OAAO,CAAC,CAAC;EAC/H,MAAM,KAAK,GAA8B,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC,CAAC;EAC3H,MAAM,gBAAgB,GAAG,CAAC,CAAkC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;EAE1F,OAAO,4BAAsB,IAAI,EAAE,mBAAmB,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,WAAW,EAAC,IAAI,EAAE,EAAC,WAAW,OAAG,EAAE,MAAM,EAAE,oBAAoB,CAAC,QAAQ,EAAE,cAAc,EAAE,gBAAgB,GAAI,CAAC;AAC7L,CAAC,CAAC","sourcesContent":["import { FunctionalComponent, h } from '@stencil/core';\nimport {DropdownButtonItem, DropdownButtonOrigin} from \"../../../components/shared/dropdown-button/models\";\nimport {BulkActionsIcon, OrderByIcon, PageSizeIcon} from \"../../../components/icons/tooling\";\nimport {WorkflowDefinitionsOrderBy} from \"../services/api\";\n\nexport interface PageSizeFilterProps {\n  selectedPageSize: number;\n  onChange: (pageSize: number) => void;\n  pageSizeText: string;\n}\n\nexport interface OrderByFilterProps {\n  selectedOrderBy?: WorkflowDefinitionsOrderBy;\n  onChange: (orderBy: WorkflowDefinitionsOrderBy) => void;\n  orderByText: string;\n}\n\nexport interface LabelFilterProps {\n  selectedLabels?: Array<string>;\n  onSelectedLabelsChanged: (e: CustomEvent<Array<string>>) => void;\n  buttonClass?: string;\n  containerClass?: string;\n}\n\nexport interface FilterProps extends BulkActionsProps {\n  pageSizeFilter: PageSizeFilterProps;\n  orderByFilter: OrderByFilterProps;\n  labelFilter: LabelFilterProps;\n}\n\nexport interface BulkActionsProps {\n  onBulkDelete: () => void;\n  onBulkPublish: () => void;\n  onBulkUnpublish: () => void;\n  bulkActionsText: string;\n  bulkDeleteText: string;\n  bulkPublishText: string;\n  bulkUnpublishText: string;\n}\n\nexport const Filter: FunctionalComponent<FilterProps> = ({ pageSizeFilter, orderByFilter, onBulkDelete, onBulkPublish, onBulkUnpublish, labelFilter, bulkActionsText, bulkDeleteText, bulkPublishText, bulkUnpublishText }) => {\n  return (\n    <div class=\"tw-p-8 tw-flex tw-content-end tw-justify-right tw-bg-white tw-space-x-4\">\n      <div class=\"tw-flex-shrink-0\">\n        <BulkActions onBulkDelete={onBulkDelete} onBulkPublish={onBulkPublish} onBulkUnpublish={onBulkUnpublish} bulkActionsText={bulkActionsText} bulkDeleteText={bulkDeleteText} bulkPublishText={bulkPublishText} bulkUnpublishText={bulkUnpublishText} />\n      </div>\n      <div class=\"tw-flex-1\">&nbsp;</div>\n\n      <PageSizeFilter {...pageSizeFilter} />\n\n      <OrderByFilter {...orderByFilter} />\n    </div>\n  );\n};\n\n\n\nconst BulkActions: FunctionalComponent<BulkActionsProps> = ({ onBulkDelete, onBulkPublish, onBulkUnpublish,\n  bulkActionsText, bulkDeleteText, bulkPublishText, bulkUnpublishText }) => {\n  const bulkActions = [\n    {\n      text: bulkDeleteText,\n      name: 'Delete',\n    },\n    {\n      text: bulkPublishText,\n      name: 'Publish',\n    },\n    {\n      text: bulkUnpublishText,\n      name: 'Unpublish',\n    },\n  ];\n\n  const onBulkActionSelected = (e: CustomEvent<DropdownButtonItem>) => {\n    const action = e.detail;\n    switch (action.name) {\n      case 'Delete':\n        onBulkDelete();\n        break;\n      case 'Publish':\n        onBulkPublish();\n        break;\n      case 'Unpublish':\n        onBulkUnpublish();\n        break;\n\n      default:\n        action.handler();\n    }\n  };\n\n  return <elsa-dropdown-button text={bulkActionsText}\n                               items={bulkActions}\n                               theme=\"Secondary\"\n                               icon={<BulkActionsIcon />}\n                               origin={DropdownButtonOrigin.TopLeft}\n                               onItemSelected={onBulkActionSelected} />;\n};\n\nconst PageSizeFilter: FunctionalComponent<PageSizeFilterProps> = ({ selectedPageSize, onChange, pageSizeText }) => {\n  const selectedPageSizeText = `${pageSizeText}: ${selectedPageSize}`;\n  const pageSizes: Array<number> = [5, 10, 15, 20, 30, 50, 100];\n\n  const items: Array<DropdownButtonItem> = pageSizes.map(x => {\n    const text = '' + x;\n    return { text: text, isSelected: x == selectedPageSize, value: x };\n  });\n\n  const onPageSizeChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(parseInt(e.detail.value));\n\n  return <elsa-dropdown-button text={selectedPageSizeText} items={items} theme=\"Secondary\" icon={<PageSizeIcon />} origin={DropdownButtonOrigin.TopRight} onItemSelected={onPageSizeChanged} />;\n};\n\nconst OrderByFilter: FunctionalComponent<OrderByFilterProps> = ({ selectedOrderBy, onChange, orderByText }) => {\n  const selectedOrderByText = !!selectedOrderBy ? `${orderByText}: ${selectedOrderBy}` : orderByText;\n  const orderByValues: Array<WorkflowDefinitionsOrderBy> = [WorkflowDefinitionsOrderBy.Name, WorkflowDefinitionsOrderBy.Created];\n  const items: Array<DropdownButtonItem> = orderByValues.map(x => ({ text: x, value: x, isSelected: x == selectedOrderBy }));\n  const onOrderByChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  return <elsa-dropdown-button text={selectedOrderByText} items={items} theme=\"Secondary\" icon={<OrderByIcon />} origin={DropdownButtonOrigin.TopRight} onItemSelected={onOrderByChanged} />;\n};\n"]}