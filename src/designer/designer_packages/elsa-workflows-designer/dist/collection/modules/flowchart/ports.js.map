{"version":3,"file":"ports.js","sourceRoot":"","sources":["../../../src/modules/flowchart/ports.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,KAAK,EAAQ,IAAI,EAAC,MAAM,UAAU,CAAC;AAE3C,KAAK,CAAC,iBAAiB,CACrB,gBAAgB,EAChB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;EACP,MAAM,MAAM,GAAG,CAAC,CAAC;EACjB,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;EAClC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;EAE5C,MAAM,EAAE,GAAG,EAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,OAAO,EAAC,CAAA;EAC9C,MAAM,EAAE,GAAG,EAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,OAAO,EAAC,CAAA;EAE9C,OAAO,IAAI,CAAC,SAAS,CACnB,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;WACV,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM;WACnB,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM;WACnD,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;OACd,CACF,CAAA;AACH,CAAC,EACD,IAAI,CACL,CAAC;AAEF,KAAK,CAAC,YAAY,CAChB,WAAW,EACX;EACE,OAAO,EAAE,MAAM;EACf,KAAK,EAAE;IACL,IAAI,EAAE;MACJ,MAAM,EAAE,SAAS;MACjB,WAAW,EAAE,CAAC;MACd,YAAY,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;KACjC;GACF;CACF,EACD,IAAI,CACL,CAAA","sourcesContent":["import {Graph, Line, Path} from \"@antv/x6\";\r\n\r\nGraph.registerConnector(\r\n  'elsa-connector',\r\n  (s, e) => {\r\n    const offset = 0;\r\n    const deltaY = Math.abs(e.y - s.y)\r\n    const control = Math.floor((deltaY / 3) * 2)\r\n\r\n    const v1 = {x: s.x, y: s.y + offset + control}\r\n    const v2 = {x: e.x, y: e.y - offset - control}\r\n\r\n    return Path.normalize(\r\n      `M ${s.x} ${s.y}\r\n       L ${s.x} ${s.y + offset}\r\n       C ${v1.x} ${v1.y} ${v2.x} ${v2.y} ${e.x} ${e.y - offset}\r\n       L ${e.x} ${e.y}\r\n      `,\r\n    )\r\n  },\r\n  true,\r\n);\r\n\r\nGraph.registerEdge(\r\n  'elsa-edge',\r\n  {\r\n    inherit: 'edge',\r\n    attrs: {\r\n      line: {\r\n        stroke: '#C2C8D5',\r\n        strokeWidth: 1,\r\n        targetMarker: 'classic', size: 6,\r\n      },\r\n    },\r\n  },\r\n  true,\r\n)\r\n"]}