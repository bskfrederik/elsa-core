{"version":3,"file":"flow-switch-plugin.js","sourceRoot":"","sources":["../../../../src/modules/switch/flow/flow-switch-plugin.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,kBAAkB,CAAC;AAC1B,OAAO,EAAsB,CAAC,EAAC,MAAM,eAAe,CAAC;AACrD,OAAO,EAAC,SAAS,EAAE,OAAO,EAAC,MAAM,QAAQ,CAAC;AAC1C,OAAO,EAAC,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAC,MAAM,mBAAmB,CAAC;AAEnG,OAAO,EAAC,sBAAsB,EAAC,MAAM,6BAA6B,CAAC;AACnE,OAAO,EAAuB,uBAAuB,EAAC,MAAM,sCAAsC,CAAC;AAG5F,IAAM,gBAAgB,wBAAtB,MAAM,gBAAgB;EAG3B;IACE,MAAM,gBAAgB,GAAG,kBAAgB,CAAC,gBAAgB,CAAC;IAC3D,MAAM,oBAAoB,GAAG,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IACjE,MAAM,oBAAoB,GAAG,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IACjE,MAAM,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAEzD,oBAAoB,CAAC,GAAG,CAAC,oBAAoB,EAAE,CAAC,CAAC,EAAE,CAAC,+BAAyB,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;IACjG,oBAAoB,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACxF,YAAY,CAAC,GAAG,CAAC,kBAAgB,CAAC,gBAAgB,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAC,cAAc,IAAC,IAAI,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,GAAG,CAAC,CAAC;EAC3G,CAAC;EAED,KAAK,CAAC,UAAU;EAEhB,CAAC;;AAfe,iCAAgB,GAAW,iBAAiB,CAAC;AADlD,gBAAgB;EAD5B,OAAO,EAAE;;GACG,gBAAgB,CAiB5B;SAjBY,gBAAgB;AAmB7B,MAAM,cAAc,GAA8C,CAAC,QAAQ,EAAE,EAAE,CAAC,CAC9E,WAAK,KAAK,EAAE,uBAAuB,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,WAAW,kBAAc,GAAG,EAAC,MAAM,EAAC,cAAc,EAAC,IAAI,EAAC,MAAM,oBAAgB,OAAO,qBAAiB,OAAO;EACzL,YAAM,MAAM,EAAC,MAAM,EAAC,CAAC,EAAC,eAAe,GAAE;EACvC,gBAAU,MAAM,EAAC,gBAAgB,GAAE;EACnC,YAAM,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,GAAG,GAAE;EAC3C,YAAM,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,IAAI,GAAE;EACrC,gBAAU,MAAM,EAAC,mBAAmB,GAAE;EACtC,YAAM,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,GAAE,CACjC,CACP,CAAC","sourcesContent":["import 'reflect-metadata';\r\nimport {FunctionalComponent, h} from '@stencil/core';\r\nimport {Container, Service} from \"typedi\";\r\nimport {ActivityIconRegistry, InputControlRegistry, PortProviderRegistry} from \"../../../services\";\r\nimport {Plugin} from \"../../../models\";\r\nimport {FlowSwitchPortProvider} from \"./flow-switch-port-provider\";\r\nimport {ActivityIconSettings, getActivityIconCssClass} from \"../../../components/icons/activities\";\r\n\r\n@Service()\r\nexport class FlowSwitchPlugin implements Plugin {\r\n  static readonly ActivityTypeName: string = 'Elsa.FlowSwitch';\r\n\r\n  constructor() {\r\n    const activityTypeName = FlowSwitchPlugin.ActivityTypeName;\r\n    const inputControlRegistry = Container.get(InputControlRegistry);\r\n    const portProviderRegistry = Container.get(PortProviderRegistry);\r\n    const iconRegistry = Container.get(ActivityIconRegistry);\r\n\r\n    inputControlRegistry.add('flow-switch-editor', c => <elsa-flow-switch-editor inputContext={c}/>);\r\n    portProviderRegistry.add(activityTypeName, () => Container.get(FlowSwitchPortProvider));\r\n    iconRegistry.add(FlowSwitchPlugin.ActivityTypeName, settings => <FlowSwitchIcon size={settings?.size}/>);\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n\r\n  }\r\n}\r\n\r\nconst FlowSwitchIcon: FunctionalComponent<ActivityIconSettings> = (settings) => (\r\n  <svg class={getActivityIconCssClass(settings)} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\r\n    <polyline points=\"15 4 19 4 19 8\"/>\r\n    <line x1=\"14.75\" y1=\"9.25\" x2=\"19\" y2=\"4\"/>\r\n    <line x1=\"5\" y1=\"19\" x2=\"9\" y2=\"15\"/>\r\n    <polyline points=\"15 19 19 19 19 15\"/>\r\n    <line x1=\"5\" y1=\"5\" x2=\"19\" y2=\"19\"/>\r\n  </svg>\r\n);\r\n"]}