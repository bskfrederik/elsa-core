{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../../src/modules/descriptors/plugin.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,kBAAkB,CAAC;AAC1B,OAAO,EAAC,OAAO,EAAQ,MAAM,QAAQ,CAAC;AACtC,OAAO,EAAC,UAAU,EAAS,MAAM,cAAc,CAAC;AAChD,OAAO,EAAC,WAAW,EAAE,kBAAkB,EAAE,QAAQ,EAAC,MAAM,gBAAgB,CAAC;AACzE,OAAO,gBAAgB,MAAM,8BAA8B,CAAC;AAGrD,IAAM,iBAAiB,GAAvB,MAAM,iBAAiB;EAE5B,YAAoB,QAAkB,EAAU,kBAAsC,EAAU,WAAwB;IAApG,aAAQ,GAAR,QAAQ,CAAU;IAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAU,gBAAW,GAAX,WAAW,CAAa;IAOhH,oBAAe,GAAG,KAAK,IAAmB,EAAE;MAClD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;MACjE,MAAM,mBAAmB,GAAG,MAAM,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;MAC3E,MAAM,cAAc,GAAG,MAAM,UAAU,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;MAC1E,MAAM,mBAAmB,GAAG,MAAM,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;MAC1E,MAAM,wCAAwC,GAAG,MAAM,UAAU,CAAC,WAAW,CAAC,4BAA4B,CAAC,IAAI,EAAE,CAAC;MAClH,MAAM,iBAAiB,GAAG,MAAM,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC;MAEvF,gBAAgB,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;MAC3D,gBAAgB,CAAC,cAAc,GAAG,cAAc,CAAC;MACjD,gBAAgB,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;MAC3D,gBAAgB,CAAC,qCAAqC,GAAG,wCAAwC,CAAC;MAClG,gBAAgB,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;MAEvD,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC,CAAC;EArBF,CAAC;EAED,KAAK,CAAC,UAAU;IACd,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;EACvF,CAAC;CAkBF,CAAA;AAzBY,iBAAiB;EAD7B,OAAO,EAAE;mCAGsB,QAAQ,EAA8B,kBAAkB,EAAuB,WAAW;GAF7G,iBAAiB,CAyB7B;SAzBY,iBAAiB","sourcesContent":["import 'reflect-metadata';\r\nimport {Service, Token} from \"typedi\";\r\nimport {EventTypes, Plugin} from \"../../models\";\r\nimport {AuthContext, ElsaClientProvider, EventBus} from \"../../services\";\r\nimport descriptorsStore from \"../../data/descriptors-store\";\r\n\r\n@Service()\r\nexport class DescriptorsPlugin implements Plugin {\r\n\r\n  constructor(private eventBus: EventBus, private elsaClientProvider: ElsaClientProvider, private authContext: AuthContext) {\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    this.eventBus.on(EventTypes.Auth.SignedIn, async () => await this.loadDescriptors());\r\n  }\r\n\r\n  private loadDescriptors = async (): Promise<void> => {\r\n    const elsaClient = await this.elsaClientProvider.getElsaClient();\r\n    const activityDescriptors = await elsaClient.descriptors.activities.list();\r\n    const storageDrivers = await elsaClient.descriptors.storageDrivers.list();\r\n    const variableDescriptors = await elsaClient.descriptors.variables.list();\r\n    const workflowInstantiationStrategyDescriptors = await elsaClient.descriptors.workflowActivationStrategies.list();\r\n    const installedFeatures = await elsaClient.descriptors.features.getInstalledFeatures();\r\n\r\n    descriptorsStore.activityDescriptors = activityDescriptors;\r\n    descriptorsStore.storageDrivers = storageDrivers;\r\n    descriptorsStore.variableDescriptors = variableDescriptors;\r\n    descriptorsStore.workflowActivationStrategyDescriptors = workflowInstantiationStrategyDescriptors;\r\n    descriptorsStore.installedFeatures = installedFeatures;\r\n\r\n    await this.eventBus.emit(EventTypes.Descriptors.Updated, this);\r\n  };\r\n}\r\n"]}