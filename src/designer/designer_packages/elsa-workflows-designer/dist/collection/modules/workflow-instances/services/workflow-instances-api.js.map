{"version":3,"file":"workflow-instances-api.js","sourceRoot":"","sources":["../../../../src/modules/workflow-instances/services/workflow-instances-api.ts"],"names":[],"mappings":"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","sourcesContent":["import {OrderBy, OrderDirection, PagedList, VersionOptions, WorkflowExecutionLogRecord, WorkflowInstance, WorkflowInstanceSummary, WorkflowStatus, WorkflowSubStatus} from \"../../../models\";\r\nimport {getVersionOptionsString, serializeQueryString} from \"../../../utils\";\r\nimport {Service} from \"typedi\";\r\nimport {ElsaClientProvider} from \"../../../services\";\r\n\r\n@Service()\r\nexport class WorkflowInstancesApi {\r\n  private provider: ElsaClientProvider;\r\n\r\n  constructor(provider: ElsaClientProvider) {\r\n    this.provider = provider;\r\n  }\r\n\r\n  async list(request: ListWorkflowInstancesRequest): Promise<PagedList<WorkflowInstanceSummary>> {\r\n    let queryString = {\r\n      searchTerm: request.searchTerm,\r\n      definitionId: request.definitionId,\r\n      correlationId: request.correlationId,\r\n      status: request.status,\r\n      subStatus: request.subStatus,\r\n      orderBy: request.orderBy,\r\n      orderDirection: request.orderDirection,\r\n      page: request.page,\r\n      pageSize: request.pageSize\r\n    };\r\n\r\n    if (!!request.versionOptions)\r\n      queryString['versionOptions'] = getVersionOptionsString(request.versionOptions);\r\n\r\n    if (!!request.definitionIds)\r\n      queryString['definitionIds'] = request.definitionIds.join(',');\r\n\r\n    const queryStringText = serializeQueryString(queryString);\r\n    const httpClient = await this.getHttpClient();\r\n    const response = await httpClient.get<PagedList<WorkflowInstanceSummary>>(`workflow-instances${queryStringText}`);\r\n    return response.data;\r\n  }\r\n\r\n  async get(request: GetWorkflowInstanceRequest): Promise<WorkflowInstance> {\r\n    const httpClient = await this.getHttpClient();\r\n    const response = await httpClient.get<WorkflowInstance>(`workflow-instances/${request.id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async delete(request: DeleteWorkflowInstanceRequest): Promise<WorkflowInstanceSummary> {\r\n    const httpClient = await this.getHttpClient();\r\n    const response = await httpClient.delete<WorkflowInstanceSummary>(`workflow-instances/${request.id}`);\r\n    return response.data;\r\n  }\r\n\r\n  async deleteMany(request: BulkDeleteWorkflowInstancesRequest): Promise<number> {\r\n    const httpClient = await this.getHttpClient();\r\n    const response = await httpClient.post<number>(`bulk-actions/delete/workflow-instances/by-id`, {\r\n      Ids: request.workflowInstanceIds,\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  async cancelMany(request: BulkCancelWorkflowInstancesRequest): Promise<number> {\r\n    const httpClient = await this.getHttpClient();\r\n    const response = await httpClient.post<number>(`bulk-actions/cancel/workflow-instances/by-id`, {\r\n      Ids: request.workflowInstanceIds,\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  async getJournal(request: GetWorkflowJournalRequest): Promise<PagedList<WorkflowExecutionLogRecord>> {\r\n    let queryString = {\r\n      page: request.page,\r\n      pageSize: request.pageSize\r\n    };\r\n\r\n    const queryStringText = serializeQueryString(queryString);\r\n    const httpClient = await this.getHttpClient();\r\n    const response = await httpClient.get<PagedList<WorkflowExecutionLogRecord>>(`workflow-instances/${request.workflowInstanceId}/journal${queryStringText}`);\r\n    return response.data;\r\n  }\r\n\r\n  private getHttpClient = async () => await this.provider.getHttpClient();\r\n}\r\n\r\n\r\nexport interface ListWorkflowInstancesRequest {\r\n  searchTerm?: string;\r\n  definitionId?: string;\r\n  correlationId?: string;\r\n  definitionIds?: Array<string>;\r\n  versionOptions?: VersionOptions;\r\n  status?: WorkflowStatus;\r\n  subStatus?: WorkflowSubStatus;\r\n  orderBy?: OrderBy;\r\n  orderDirection?: OrderDirection;\r\n  page?: number;\r\n  pageSize?: number;\r\n}\r\n\r\nexport interface GetWorkflowInstanceRequest {\r\n  id: string;\r\n}\r\n\r\nexport interface DeleteWorkflowInstanceRequest {\r\n  id: string;\r\n}\r\n\r\nexport interface BulkDeleteWorkflowInstancesRequest {\r\n  workflowInstanceIds: Array<string>;\r\n}\r\n\r\nexport interface BulkCancelWorkflowInstancesRequest {\r\n  workflowInstanceIds: Array<string>;\r\n}\r\n\r\nexport interface GetWorkflowJournalRequest {\r\n  workflowInstanceId: string;\r\n  page?: number;\r\n  pageSize?: number;\r\n}\r\n"]}