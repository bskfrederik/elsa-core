{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../../src/modules/workflow-instances/plugin.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,kBAAkB,CAAC;AAC1B,OAAO,EAAC,SAAS,EAAE,OAAO,EAAC,MAAM,QAAQ,CAAC;AAE1C,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAC;AACxC,OAAO,EAAC,sBAAsB,EAAC,MAAM,sCAAsC,CAAC;AAC5E,OAAO,EAAC,mBAAmB,EAAuB,kBAAkB,EAAC,MAAM,sCAAsC,CAAC;AAElH,OAAO,0BAA0B,MAAM,2CAA2C,CAAC;AACnF,OAAO,EAAC,oBAAoB,EAAC,MAAM,mCAAmC,CAAC;AAEvE,OAAO,EAAC,CAAC,EAAC,MAAM,eAAe,CAAC;AAEhC,OAAO,mBAAmB,MAAM,uCAAuC,CAAC;AACxE,OAAO,EAAC,IAAI,EAAC,MAAM,8BAA8B,CAAC;AAClD,OAAO,EAAC,uBAAuB,EAAC,MAAM,yBAAyB,CAAC;AAChE,OAAO,EAAC,6BAA6B,EAAC,MAAM,2BAA2B,CAAC;AAGjE,IAAM,uBAAuB,GAA7B,MAAM,uBAAuB;EAOlC;IAmBQ,+BAA0B,GAAG,CAAC,kBAAsC,EAAE,gBAAkC,EAAE,EAAE;MAClH,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;MAC7D,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;IACrD,CAAC,CAAC;IAEM,8BAAyB,GAAG,KAAK,IAAI,EAAE;MAC7C,MAAM,WAAW,GAAG,mBAAmB,CAAC,KAAK,EAAE,CAAC;MAChD,MAAM,OAAO,GAAG,CAAC,WAAW,CAAC,CAAC;MAE9B,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,CACrE,sCAAgC,0BAA0B,EAAE,IAAI,CAAC,0BAA0B,GAAG,EAChG,EAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,qBAAqB,EAAC,CAAC,CAAA;IACpD,CAAC,CAAA;IAEO,+BAA0B,GAAG,KAAK,EAAE,CAAuC,EAAE,EAAE;MACrF,MAAM,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;MAC3C,MAAM,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;MAC/B,MAAM,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;MAEjC,MAAM,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,EAAC,YAAY,EAAE,cAAc,EAAE,EAAC,OAAO,EAAC,EAAE,oBAAoB,EAAE,IAAI,EAAC,CAAC;SACzG,IAAI,CAAC,KAAK,EAAE,kBAAkB,EAAE,EAAE;QACjC,MAAM,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAC,EAAE,EAAE,UAAU,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,EAAE;UAC9E,IAAI,CAAC,0BAA0B,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;UACtE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE;UACZ,mBAAmB,CAAC,kBAAkB,CAAC;YACrC,KAAK,EAAE,OAAO;YACd,EAAE,EAAE,IAAI,EAAE;YACV,IAAI,EAAE;;cAAuC,UAAU;6BAAmB;YAC1E,IAAI,EAAE,uBAAuB,CAAC,KAAK;WACpC,CAAC,CAAC;UACH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE;QACZ,mBAAmB,CAAC,kBAAkB,CAAC;UACrC,KAAK,EAAE,OAAO;UACd,EAAE,EAAE,IAAI,EAAE;UACV,IAAI,EAAE;;YAA8B,YAAY;2BAAmB;UACnE,IAAI,EAAE,uBAAuB,CAAC,KAAK;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;MACrE,CAAC,CAAC,CAAC;IACP,CAAC,CAAA;IA5DC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxC,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACpE,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAChE,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAE5D,MAAM,2BAA2B,GAAoB;MACnD,IAAI,EAAE,oBAAoB;MAC1B,OAAO,EAAE,IAAI,CAAC,yBAAyB;MACvC,KAAK,EAAE,CAAC;KACT,CAAC;IAEF,0BAA0B,CAAC,KAAK,GAAG,CAAC,GAAG,0BAA0B,CAAC,KAAK,EAAE,2BAA2B,CAAC,CAAC;EACxG,CAAC;EAED,KAAK,CAAC,UAAU;EAEhB,CAAC;CA6CF,CAAA;AArEY,uBAAuB;EADnC,OAAO,EAAE;;GACG,uBAAuB,CAqEnC;SArEY,uBAAuB","sourcesContent":["import 'reflect-metadata';\r\nimport {Container, Service} from \"typedi\";\r\nimport {Plugin, WorkflowInstance, WorkflowInstanceSummary} from \"../../models\";\r\nimport {EventBus} from \"../../services\";\r\nimport {WorkflowDefinitionsApi} from \"../workflow-definitions/services/api\";\r\nimport {DefaultModalActions, ModalDialogInstance, ModalDialogService} from \"../../components/shared/modal-dialog\";\r\nimport {ToolbarMenuItem} from \"../../components/toolbar/workflow-toolbar-menu/models\";\r\nimport toolbarButtonMenuItemStore from \"../../data/toolbar-button-menu-item-store\";\r\nimport {WorkflowInstancesApi} from \"./services/workflow-instances-api\";\r\nimport {WorkflowDefinition} from \"../workflow-definitions/models/entities\";\r\nimport {h} from \"@stencil/core\";\r\nimport studioComponentStore from \"../../data/studio-component-store\";\r\nimport NotificationService from \"../notifications/notification-service\";\r\nimport {uuid} from \"@antv/x6/es/util/string/uuid\";\r\nimport {NotificationDisplayType} from \"../notifications/models\";\r\nimport {WorkflowInstanceViewerService} from \"./services/viewer-service\";\r\n\r\n@Service()\r\nexport class WorkflowInstancesPlugin implements Plugin {\r\n  private readonly eventBus: EventBus;\r\n  private readonly workflowDefinitionsApi: WorkflowDefinitionsApi;\r\n  private readonly workflowInstancesApi: WorkflowInstancesApi;\r\n  private readonly modalDialogService: ModalDialogService;\r\n  private workflowInstanceBrowserInstance: ModalDialogInstance;\r\n\r\n  constructor() {\r\n    this.eventBus = Container.get(EventBus);\r\n    this.workflowDefinitionsApi = Container.get(WorkflowDefinitionsApi);\r\n    this.workflowInstancesApi = Container.get(WorkflowInstancesApi);\r\n    this.modalDialogService = Container.get(ModalDialogService);\r\n\r\n    const workflowInstanceBrowserItem: ToolbarMenuItem = {\r\n      text: 'Workflow Instances',\r\n      onClick: this.onBrowseWorkflowInstances,\r\n      order: 5\r\n    };\r\n\r\n    toolbarButtonMenuItemStore.items = [...toolbarButtonMenuItemStore.items, workflowInstanceBrowserItem];\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n\r\n  }\r\n\r\n  private showWorkflowInstanceViewer = (workflowDefinition: WorkflowDefinition, workflowInstance: WorkflowInstance) => {\r\n    const service = Container.get(WorkflowInstanceViewerService);\r\n    service.show(workflowDefinition, workflowInstance);\r\n  };\r\n\r\n  private onBrowseWorkflowInstances = async () => {\r\n    const closeAction = DefaultModalActions.Close();\r\n    const actions = [closeAction];\r\n\r\n    this.workflowInstanceBrowserInstance = this.modalDialogService.show(() =>\r\n        <elsa-workflow-instance-browser onWorkflowInstanceSelected={this.onWorkflowInstanceSelected}/>,\r\n      {actions: actions, size: 'tw-max-w-screen-2xl'})\r\n  }\r\n\r\n  private onWorkflowInstanceSelected = async (e: CustomEvent<WorkflowInstanceSummary>) => {\r\n    const definitionId = e.detail.definitionId;\r\n    const instanceId = e.detail.id;\r\n    const version = e.detail.version;\r\n\r\n    await this.workflowDefinitionsApi.get({definitionId, versionOptions: {version}, includeCompositeRoot: true})\r\n      .then(async (workflowDefinition) => {\r\n        await this.workflowInstancesApi.get({id: instanceId}).then((workflowInstance) => {\r\n          this.showWorkflowInstanceViewer(workflowDefinition, workflowInstance);\r\n          this.modalDialogService.hide(this.workflowInstanceBrowserInstance);\r\n        }).catch(() => {\r\n          NotificationService.createNotification({\r\n            title: 'Error',\r\n            id: uuid(),\r\n            text: <div>Could not load workflow instance {instanceId} information</div>,\r\n            type: NotificationDisplayType.Error\r\n          });\r\n          this.modalDialogService.hide(this.workflowInstanceBrowserInstance);\r\n        });\r\n      }).catch(() => {\r\n        NotificationService.createNotification({\r\n          title: 'Error',\r\n          id: uuid(),\r\n          text: <div>Could not load workflow {definitionId} information</div>,\r\n          type: NotificationDisplayType.Error\r\n        });\r\n        this.modalDialogService.hide(this.workflowInstanceBrowserInstance);\r\n      });\r\n  }\r\n}\r\n"]}