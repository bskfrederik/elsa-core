{"version":3,"file":"filter.js","sourceRoot":"","sources":["../../../../src/modules/workflow-instances/components/filter.tsx"],"names":[],"mappings":"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","sourcesContent":["import {FunctionalComponent, h} from \"@stencil/core\";\nimport {WorkflowDefinitionSummary} from \"../../workflow-definitions/models/entities\";\nimport {OrderBy, WorkflowStatus, WorkflowSubStatus} from \"../../../models\";\nimport {DropdownButtonItem, DropdownButtonOrigin} from \"../../../components/shared/dropdown-button/models\";\nimport {BulkActionsIcon, OrderByIcon, PageSizeIcon, WorkflowIcon, WorkflowStatusIcon} from \"../../../components/icons/tooling\";\n\nexport interface FilterProps extends BulkActionsProps {\n  pageSizeFilter: PageSizeFilterProps;\n  workflowFilter: WorkflowFilterProps;\n  statusFilter: StatusFilterProps;\n  subStatusFilter: SubStatusFilterProps;\n  orderByFilter: OrderByFilterProps;\n  resetFilter: () => void;\n  resetText: string;\n\n}\n\nexport interface BulkActionsProps {\n  onBulkDelete: () => void;\n  onBulkCancel: () => void;\n  bulkText: string;\n  bulkDeleteText: string;\n  bulkCancelText: string;\n}\n\nexport interface PageSizeFilterProps {\n  selectedPageSize: number;\n  onChange: (pageSize: number) => void;\n  pageSizeText: string;\n}\n\nexport interface WorkflowFilterProps {\n  workflows: Array<WorkflowDefinitionSummary>;\n  selectedWorkflowDefinitionId?: string;\n  onChange: (definitionId: string) => void;\n  workflowText: string;\n}\n\nexport interface StatusFilterProps {\n  selectedStatus?: WorkflowStatus;\n  onChange: (status: WorkflowStatus) => void;\n}\n\nexport interface SubStatusFilterProps {\n  selectedStatus?: WorkflowSubStatus;\n  onChange: (status: WorkflowSubStatus) => void;\n}\n\nexport interface OrderByFilterProps {\n  selectedOrderBy?: OrderBy;\n  onChange: (orderBy: OrderBy) => void;\n  orderByText: string;\n\n}\n\nexport const Filter: FunctionalComponent<FilterProps> = ({pageSizeFilter, workflowFilter, statusFilter, subStatusFilter, orderByFilter, resetFilter, onBulkDelete, onBulkCancel, bulkText, bulkDeleteText, bulkCancelText, resetText}) => {\n\n  return <div class=\"tw-p-8 tw-flex tw-content-end tw-justify-right tw-bg-white tw-space-x-4\">\n    <div class=\"tw-flex-shrink-0\">\n      <BulkActions onBulkDelete={onBulkDelete} onBulkCancel={onBulkCancel} bulkText={bulkText} bulkDeleteText={bulkDeleteText} bulkCancelText={bulkCancelText} />\n    </div>\n    <div class=\"tw-flex-1\">\n      &nbsp;\n    </div>\n\n    <button onClick={resetFilter} type=\"button\" class=\"tw-text-sm tw-text-blue-600 active:tw-text-blue-700 tw-px-3 active:ring tw-ring-blue-500 tw-rounded\">\n      {resetText}\n    </button>\n\n    <PageSizeFilter {...pageSizeFilter}/>\n    <WorkflowFilter {...workflowFilter}/>\n    <StatusFilter {...statusFilter}/>\n    <SubStatusFilter {...subStatusFilter}/>\n    <OrderByFilter {...orderByFilter} />\n  </div>;\n}\n\nconst BulkActions: FunctionalComponent<BulkActionsProps> = ({ onBulkDelete, onBulkCancel, bulkText, bulkDeleteText, bulkCancelText }) => {\n  const bulkActions = [{\n    text: bulkDeleteText,\n    name: 'Delete',\n  }, {\n    text: bulkCancelText,\n    name: 'Cancel',\n  }];\n\n  const onBulkActionSelected = (e: CustomEvent<DropdownButtonItem>) => {\n    const action = e.detail;\n    switch (action.name) {\n      case 'Delete':\n        onBulkDelete();\n        break;\n      case 'Cancel':\n        onBulkCancel();\n        break;\n\n      default:\n        action.handler();\n    }\n  };\n\n  return <elsa-dropdown-button\n    text={bulkText} items={bulkActions} icon={<BulkActionsIcon/>}\n    origin={DropdownButtonOrigin.TopLeft}\n    theme=\"Secondary\"\n    onItemSelected={onBulkActionSelected}/>\n}\n\nconst PageSizeFilter: FunctionalComponent<PageSizeFilterProps> = ({selectedPageSize, onChange, pageSizeText}) => {\n  const selectedPageSizeText = `${pageSizeText}: ${selectedPageSize}`;\n  const pageSizes: Array<number> = [5, 10, 15, 20, 30, 50, 100];\n\n  const items: Array<DropdownButtonItem> = pageSizes.map(x => {\n    const text = \"\" + x;\n    return {text: text, isSelected: x == selectedPageSize, value: x};\n  });\n\n  const onPageSizeChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(parseInt(e.detail.value));\n\n  return <elsa-dropdown-button\n    text={selectedPageSizeText} items={items} icon={<PageSizeIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onPageSizeChanged}/>\n}\n\nconst WorkflowFilter: FunctionalComponent<WorkflowFilterProps> = ({workflows, selectedWorkflowDefinitionId, onChange, workflowText}) => {\n  const selectedWorkflow = workflows.find(x => x.definitionId == selectedWorkflowDefinitionId);\n  const getWorkflowName = (workflow?: WorkflowDefinitionSummary) => workflow?.name?.length > 0 ? workflow.name : 'Untitled';\n  const selectedWorkflowText = !selectedWorkflowDefinitionId ? workflowText : getWorkflowName(selectedWorkflow);\n  let items: Array<DropdownButtonItem> = workflows.map(x => ({text: getWorkflowName(x), value: x.definitionId, isSelected: x.definitionId == selectedWorkflowDefinitionId}));\n  const allItem: DropdownButtonItem = {text: workflowText, value: null, isSelected: !selectedWorkflowDefinitionId};\n  const onWorkflowChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  items = [allItem, ...items];\n\n  return <elsa-dropdown-button\n    text={selectedWorkflowText} items={items} icon={<WorkflowIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onWorkflowChanged}/>\n}\n\nconst StatusFilter: FunctionalComponent<StatusFilterProps> = ({selectedStatus, onChange}) => {\n  const selectedStatusText = !!selectedStatus ? selectedStatus : 'Status';\n  const statuses: Array<WorkflowStatus> = [null, WorkflowStatus.Running, WorkflowStatus.Finished];\n  const statusOptions: Array<DropdownButtonItem> = statuses.map(x => ({text: x ?? 'All', isSelected: x == selectedStatus, value: x}));\n  const onStatusChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  return <elsa-dropdown-button\n    text={selectedStatusText} items={statusOptions} icon={<WorkflowStatusIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onStatusChanged}/>\n}\n\nconst SubStatusFilter: FunctionalComponent<SubStatusFilterProps> = ({selectedStatus, onChange}) => {\n  const selectedSubStatusText = !!selectedStatus ? selectedStatus : 'Sub status';\n  const subStatuses: Array<WorkflowSubStatus> = [null, WorkflowSubStatus.Executing, WorkflowSubStatus.Suspended, WorkflowSubStatus.Finished, WorkflowSubStatus.Faulted, WorkflowSubStatus.Cancelled];\n  const subStatusOptions: Array<DropdownButtonItem> = subStatuses.map(x => ({text: x ?? 'All', isSelected: x == selectedStatus, value: x}));\n  const onStatusChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  return <elsa-dropdown-button\n    text={selectedSubStatusText} items={subStatusOptions} icon={<WorkflowStatusIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onStatusChanged}/>\n}\n\nconst OrderByFilter: FunctionalComponent<OrderByFilterProps> = ({selectedOrderBy, onChange, orderByText}) => {\n  const selectedOrderByText = !!selectedOrderBy ? `${orderByText}: ${selectedOrderBy}` : orderByText;\n  const orderByValues: Array<OrderBy> = [OrderBy.Finished, OrderBy.Updated, OrderBy.Created];\n  const items: Array<DropdownButtonItem> = orderByValues.map(x => ({text: x, value: x, isSelected: x == selectedOrderBy}));\n  const onOrderByChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  return <elsa-dropdown-button\n    text={selectedOrderByText} items={items} icon={<OrderByIcon/>}\n    theme=\"Secondary\"\n    origin={DropdownButtonOrigin.TopRight}\n    onItemSelected={onOrderByChanged}/>\n}\n"]}