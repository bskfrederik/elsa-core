{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../../src/modules/workflow-contexts/plugin.tsx"],"names":[],"mappings":"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","sourcesContent":["import {Container, Service} from \"typedi\";\r\nimport {EventTypes, Plugin} from \"../../models\";\r\nimport {AuthContext, EventBus, InputControlRegistry} from \"../../services\";\r\nimport {h} from \"@stencil/core\";\r\nimport {TabModel, WorkflowPropertiesEditorDisplayingArgs, WorkflowPropertiesEditorEventTypes} from \"../workflow-definitions/models/ui\";\r\nimport {Widget} from \"../workflow-instances/models\";\r\nimport {WorkflowContextProviderDescriptor, WorkflowContextsApi} from \"./services/api\";\r\nimport descriptorsStore from \"../../data/descriptors-store\";\r\n\r\n@Service()\r\nexport class WorkflowContextsPlugin implements Plugin {\r\n\r\n  private apiClient: WorkflowContextsApi;\r\n  private providerDescriptors: Array<WorkflowContextProviderDescriptor> = [];\r\n\r\n  constructor() {\r\n    this.apiClient = Container.get(WorkflowContextsApi);\r\n    this.setupSignIn();\r\n  }\r\n\r\n  async initialize() {\r\n    const authContext = Container.get(AuthContext);\r\n\r\n    if (authContext.getIsSignedIn()) {\r\n      await this.onSignedIn();\r\n    }\r\n  }\r\n\r\n  private setupCustomInputControls() {\r\n    const inputControlRegistry = Container.get(InputControlRegistry);\r\n    const descriptors = this.providerDescriptors;\r\n    inputControlRegistry.add('workflow-context-provider-picker', c => <elsa-workflow-context-provider-type-picker-input inputContext={c} descriptors={descriptors}/>)\r\n  }\r\n\r\n  private setupSignIn() {\r\n    const eventBus = Container.get(EventBus);\r\n    eventBus.on(EventTypes.Descriptors.Updated, this.onSignedIn);\r\n  }\r\n\r\n  private onSignedIn = async () => {\r\n    // Need to do this post-sign in, this is a secure API call.\r\n    const installedFeatures = descriptorsStore.installedFeatures;\r\n\r\n    if(!installedFeatures.find(x => x.name == 'WorkflowContexts'))\r\n      return;\r\n\r\n    this.providerDescriptors = await this.apiClient.list();\r\n    this.setupCustomInputControls();\r\n    this.setupCustomPropertyEditors();\r\n  };\r\n\r\n  private setupCustomPropertyEditors() {\r\n    const eventBus = Container.get(EventBus);\r\n    eventBus.detach(WorkflowPropertiesEditorEventTypes.Displaying, this.onPropertyPanelRendering)\r\n    eventBus.on(WorkflowPropertiesEditorEventTypes.Displaying, this.onPropertyPanelRendering);\r\n  }\r\n\r\n  private onPropertyPanelRendering = (context: WorkflowPropertiesEditorDisplayingArgs) => {\r\n    const tabs = context.model.tabModels;\r\n    const workflowDefinition = context.workflowDefinition;\r\n    const notifyWorkflowDefinitionChanged = context.notifyWorkflowDefinitionChanged;\r\n    const descriptors = this.providerDescriptors;\r\n\r\n    const contextProvidersWidget: Widget = {\r\n      order: 20,\r\n      name: 'workflow-context-providers',\r\n      content: () => <elsa-workflow-context-provider-check-list descriptors={descriptors} workflowDefinition={workflowDefinition} onWorkflowDefinitionChanged={notifyWorkflowDefinitionChanged}/>\r\n    };\r\n\r\n    const workflowContextProvidersTab: TabModel = {\r\n      name: 'workflow-context-providers',\r\n      tab: {\r\n        order: 20,\r\n        displayText: 'Context',\r\n        content: () => <elsa-widgets widgets={[contextProvidersWidget]}/>\r\n      }\r\n    };\r\n\r\n    tabs.push(workflowContextProvidersTab);\r\n  }\r\n}\r\n"]}