{"version":3,"file":"http-request-plugin.js","sourceRoot":"","sources":["../../../../src/modules/http-request/sequence/http-request-plugin.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,kBAAkB,CAAC;AAC1B,OAAO,EAAC,CAAC,EAAC,MAAM,eAAe,CAAC;AAChC,OAAO,EAAC,SAAS,EAAE,OAAO,EAAC,MAAM,QAAQ,CAAC;AAC1C,OAAO,EAAC,oBAAoB,EAAE,oBAAoB,EAAE,oBAAoB,EAAC,MAAM,mBAAmB,CAAC;AAEnG,OAAO,EAAC,uBAAuB,EAAC,MAAM,8BAA8B,CAAC;AACrE,OAAO,EAAC,eAAe,EAAC,MAAM,UAAU,CAAC;AAGlC,IAAM,iBAAiB,yBAAvB,MAAM,iBAAiB;EAG5B;IACE,MAAM,gBAAgB,GAAG,mBAAiB,CAAC,gBAAgB,CAAC;IAC5D,MAAM,oBAAoB,GAAG,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IACjE,MAAM,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IACzD,MAAM,oBAAoB,GAAG,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAEjE,oBAAoB,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC;IACzF,YAAY,CAAC,GAAG,CAAC,mBAAiB,CAAC,gBAAgB,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAC,eAAe,IAAC,IAAI,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,GAAG,CAAC,CAAC;IAC3G,oBAAoB,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAE,CAAC,qCAA+B,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC;EACxG,CAAC;EAED,KAAK,CAAC,UAAU;EAEhB,CAAC;;AAfe,kCAAgB,GAAW,sBAAsB,CAAC;AADvD,iBAAiB;EAD7B,OAAO,EAAE;;GACG,iBAAiB,CAiB7B;SAjBY,iBAAiB","sourcesContent":["import 'reflect-metadata';\r\nimport {h} from '@stencil/core';\r\nimport {Container, Service} from \"typedi\";\r\nimport {ActivityIconRegistry, InputControlRegistry, PortProviderRegistry} from \"../../../services\";\r\nimport {Plugin} from \"../../../models\";\r\nimport {HttpRequestPortProvider} from \"./http-request-port-provider\";\r\nimport {HttpRequestIcon} from \"../icons\";\r\n\r\n@Service()\r\nexport class HttpRequestPlugin implements Plugin {\r\n  static readonly ActivityTypeName: string = 'Elsa.SendHttpRequest';\r\n\r\n  constructor() {\r\n    const activityTypeName = HttpRequestPlugin.ActivityTypeName;\r\n    const portProviderRegistry = Container.get(PortProviderRegistry);\r\n    const iconRegistry = Container.get(ActivityIconRegistry);\r\n    const inputControlRegistry = Container.get(InputControlRegistry);\r\n\r\n    portProviderRegistry.add(activityTypeName, () => Container.get(HttpRequestPortProvider));\r\n    iconRegistry.add(HttpRequestPlugin.ActivityTypeName, settings => <HttpRequestIcon size={settings?.size}/>);\r\n    inputControlRegistry.add('http-status-codes', c => <elsa-http-status-codes-editor inputContext={c}/>);\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n\r\n  }\r\n}\r\n"]}