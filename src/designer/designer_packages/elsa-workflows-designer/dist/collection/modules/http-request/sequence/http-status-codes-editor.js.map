{"version":3,"file":"http-status-codes-editor.js","sourceRoot":"","sources":["../../../../src/modules/http-request/sequence/http-status-codes-editor.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAC,MAAM,eAAe,CAAC;AAEjD,OAAO,EAAC,SAAS,EAAC,MAAM,6CAA6C,CAAC;AACtE,OAAO,EAAC,gBAAgB,EAAC,MAAM,gBAAgB,CAAC;AAOhD,MAAM,OAAO,qBAAqB;;IAmBxB,4BAAuB,GAAG,CAAC,CAA6B,EAAE,EAAE;;MAClE,MAAM,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC;MAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAA2B,CAAC;MAC/D,MAAM,mBAAmB,GAAG,MAAA,QAAQ,CAAC,mBAAmB,mCAAI,EAAE,CAAC;MAE/D,yBAAyB;MACzB,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;QACpC,IAAI,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;UACjF,mBAAmB,CAAC,IAAI,CAAC,EAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC;OAChE;MAED,kDAAkD;MAClD,KAAK,IAAI,CAAC,GAAG,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;QACxD,MAAM,UAAU,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAChE,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;UACnD,mBAAmB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;OACpC;MAED,QAAQ,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;MACnD,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;IACzC,CAAC,CAAC;;;EApCF,MAAM;;IACJ,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACvC,MAAM,eAAe,GAAG,YAAY,CAAC,eAAe,CAAC;IACrD,MAAM,OAAO,GAAG,eAAe,CAAC,IAAI,CAAC;IACrC,MAAM,WAAW,GAAG,eAAe,CAAC,WAAW,CAAC;IAChD,MAAM,IAAI,GAAG,eAAe,CAAC,WAAW,CAAC;IACzC,MAAM,mBAAmB,GAA8B,MAAA,gBAAgB,CAAC,YAAY,CAAC,mCAAI,EAAE,CAAC;IAC5F,MAAM,cAAc,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;IAE7E,OAAO,CACL,EAAC,SAAS,IAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI;MACzD,uBAAiB,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,cAAc,EAAE,IAAI,CAAC,uBAAuB,EAAE,WAAW,EAAC,iBAAiB,GAAE,CAC9H,CACb,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;CAuBF","sourcesContent":["import {Component, h, Prop} from \"@stencil/core\";\r\nimport {ActivityInputContext} from \"../../../services/activity-input-driver\";\r\nimport {FormEntry} from \"../../../components/shared/forms/form-entry\";\r\nimport {getPropertyValue} from \"../../../utils\";\r\nimport {HttpStatusCodeCase, SendHttpRequest} from \"./models\";\r\n\r\n@Component({\r\n  tag: 'elsa-http-status-codes-editor',\r\n  shadow: false\r\n})\r\nexport class HttpStatusCodesEditor {\r\n  @Prop() inputContext: ActivityInputContext;\r\n\r\n  render() {\r\n    const inputContext = this.inputContext;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const fieldId = inputDescriptor.name;\r\n    const displayName = inputDescriptor.displayName;\r\n    const hint = inputDescriptor.description;\r\n    const expectedStatusCodes: Array<HttpStatusCodeCase> = getPropertyValue(inputContext) ?? [];\r\n    const statusCodeTags = expectedStatusCodes.map(x => x.statusCode.toString());\r\n\r\n    return (\r\n      <FormEntry fieldId={fieldId} label={displayName} hint={hint}>\r\n        <elsa-input-tags fieldId={fieldId} values={statusCodeTags} onValueChanged={this.onPropertyEditorChanged} placeHolder=\"Add status code\"/>\r\n      </FormEntry>\r\n    );\r\n  }\r\n\r\n  private onPropertyEditorChanged = (e: CustomEvent<Array<string>>) => {\r\n    const statusCodes = e.detail;\r\n    const activity = this.inputContext.activity as SendHttpRequest;\r\n    const expectedStatusCodes = activity.expectedStatusCodes ?? [];\r\n\r\n    // Push new status codes.\r\n    for (const statusCode of statusCodes) {\r\n      if (expectedStatusCodes.findIndex(x => x.statusCode.toString() == statusCode) == -1)\r\n        expectedStatusCodes.push({statusCode: parseInt(statusCode)});\r\n    }\r\n\r\n    // Remove status codes that are no longer present.\r\n    for (let i = expectedStatusCodes.length - 1; i >= 0; i--) {\r\n      const statusCode = expectedStatusCodes[i].statusCode.toString();\r\n      if (statusCodes.findIndex(x => x == statusCode) == -1)\r\n        expectedStatusCodes.splice(i, 1);\r\n    }\r\n\r\n    activity.expectedStatusCodes = expectedStatusCodes;\r\n    this.inputContext.notifyInputChanged();\r\n  };\r\n}\r\n"]}