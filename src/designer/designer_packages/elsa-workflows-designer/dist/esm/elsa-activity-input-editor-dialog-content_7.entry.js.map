{"file":"elsa-activity-input-editor-dialog-content.elsa-activity-output-editor-dialog-content.elsa-variable-editor-dialog-content.elsa-variables-editor.elsa-widgets.elsa-workflow-definition-input-output-settings.elsa-workflow-definition-version-history.entry.js","mappings":"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","names":["descriptorsStore","groupBy","moment"],"sources":["./src/components/icons/tooling/revert.tsx","./src/components/icons/tooling/published.tsx","./src/modules/workflow-definitions/components/workflow-properties/activity-input-editor-dialog-content.tsx","./src/modules/workflow-definitions/components/workflow-properties/activity-output-editor-dialog-content.tsx","./src/modules/workflow-definitions/components/workflow-properties/variable-editor-dialog-content.tsx","./src/modules/workflow-definitions/components/workflow-properties/variables-editor.tsx","./src/modules/workflow-definitions/components/widgets.tsx","./src/modules/workflow-definitions/components/workflow-properties/input-output-settings.tsx","./src/modules/workflow-definitions/components/workflow-properties/version-history.tsx"],"sourcesContent":["import {FunctionalComponent, h} from \"@stencil/core\";\r\n\r\nexport const RevertIcon: FunctionalComponent = () =>\r\n  <svg class=\"tw-h-6 tw-w-6 tw-text-gray-500\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n       stroke-linejoin=\"round\">\r\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\r\n    <path d=\"M9 11l-4 4l4 4m-4 -4h11a4 4 0 0 0 0 -8h-1\"/>\r\n  </svg>;\r\n","import {FunctionalComponent, h} from \"@stencil/core\";\r\n\r\nexport const PublishedIcon: FunctionalComponent = () =>\r\n  <svg class=\"tw-h-6 tw-w-6 tw-text-blue-500\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n       stroke-linejoin=\"round\">\r\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\r\n  </svg>;\r\n","import {Component, h, Prop, Event, EventEmitter, Method, Element} from \"@stencil/core\";\nimport {groupBy} from 'lodash';\nimport descriptorsStore from '../../../../data/descriptors-store';\nimport {VariableDescriptor} from \"../../../../services/api-client/variable-descriptors-api\";\nimport {InputDefinition} from \"../../models/entities\";\nimport {CheckboxFormEntry, FormEntry} from \"../../../../components/shared/forms/form-entry\";\nimport {StorageDriverDescriptor} from \"../../../../models\";\nimport {isNullOrWhitespace} from \"../../../../utils\";\nimport { getLocaleComponentStrings } from \"../../../../utils/locale\";\n\n@Component({\n  tag: 'elsa-activity-input-editor-dialog-content',\n  shadow: false\n})\nexport class ActivityInputEditorDialogContent {\n  private formElement: HTMLFormElement;\n\n  @Prop() input: InputDefinition;\n  @Event() inputChanged: EventEmitter<InputDefinition>;\n\n  @Method()\n  async getInput(): Promise<InputDefinition> {\n    return this.getInputInternal(this.formElement);\n  }\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n  async componentWillLoad() {\n    this.strings = await getLocaleComponentStrings(this.element);\n    console.log(this.strings);\n  }\n\n  render() {\n    const input: InputDefinition = this.input ?? {name: '', type: 'Object', isArray: false};\n    const inputTypeName = input.type;\n    const availableTypes: Array<VariableDescriptor> = descriptorsStore.variableDescriptors;\n    const storageDrivers: Array<StorageDriverDescriptor> = descriptorsStore.storageDrivers;\n    const groupedTypes = groupBy(availableTypes, x => x.category);\n    const selectedUIHint = input.uiHint;\n\n    // TODO: Get this from configuration (API).\n    const uiHints = [{\n      name: 'Single line',\n      value: 'single-line'\n    }, {\n      name: 'Multi line',\n      value: 'multi-line'\n    }, {\n      name: 'Checkbox',\n      value: 'checkbox'\n    }, {\n      name: 'Check list',\n      value: 'check-list'\n    }, {\n      name: 'Radio list',\n      value: 'radio-list'\n    }, {\n      name: 'Dropdown',\n      value: 'dropdown'\n    }, {\n      name: 'Multi text',\n      value: 'multi-text'\n    }, {\n      name: 'Code editor',\n      value: 'code-editor'\n    }, {\n      name: 'Variable picker',\n      value: 'variable-picker'\n    }, {\n      name: 'Type picker',\n      value: 'type-picker'\n    }\n    ];\n\n    return (\n      <div>\n        <form ref={el => this.formElement = el} class=\"tw-h-full tw-flex tw-flex-col tw-bg-white\" onSubmit={e => this.onSubmit(e)} method=\"post\">\n          <div class=\"tw-pt-4\">\n            <h2 class=\"tw-text-lg tw-font-medium tw-ml-4 tw-mb-2\"> {this.strings.editInputConfiguration}</h2>\n            <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\n\n              <FormEntry fieldId=\"inputName\" label={this.strings.inputName} hint={this.strings.inputNameHint}>\n                <input type=\"text\" name=\"inputName\" id=\"inputName\" value={input.name}/>\n              </FormEntry>\n\n              <FormEntry fieldId=\"inputTypeName\" label={this.strings.inputType} hint={this.strings.inputTypeHint}>\n                <select id=\"inputTypeName\" name=\"inputTypeName\">\n                  {Object.keys(groupedTypes).map(category => {\n                    const types = groupedTypes[category] as Array<VariableDescriptor>;\n                    return (<optgroup label={category}>\n                      {types.map(descriptor => <option value={descriptor.typeName} selected={descriptor.typeName == inputTypeName}>{descriptor.displayName}</option>)}\n                    </optgroup>);\n                  })}\n                </select>\n              </FormEntry>\n\n              <CheckboxFormEntry fieldId=\"inputIsArray\" label={this.strings.arrayInputLabel} hint={this.strings.arrayInputHint}>\n                <input type=\"checkbox\" name=\"inputIsArray\" id=\"inputIsArray\" value=\"true\" checked={input.isArray}/>\n              </CheckboxFormEntry>\n\n              <FormEntry fieldId=\"inputDisplayName\" label={this.strings.displayNameLabel} hint={this.strings.displayNameHint}>\n                <input type=\"text\" name=\"inputDisplayName\" id=\"inputDisplayName\" value={input.displayName}/>\n              </FormEntry>\n\n              <FormEntry fieldId=\"inputDescription\" label={this.strings.inputDescriptionLabel} hint={this.strings.inputDescriptionHint}>\n                <input type=\"text\" name=\"inputDescription\" id=\"inputDescription\" value={input.description}/>\n              </FormEntry>\n\n              <FormEntry fieldId=\"inputCategory\" label={this.strings.inputCategoryLabel} hint={this.strings.inputCategoryHint}>\n                <input type=\"text\" name=\"inputCategory\" id=\"inputCategory\" value={input.category}/>\n              </FormEntry>\n\n              <FormEntry fieldId=\"inputUIHint\" label={this.strings.controlLabel} hint={this.strings.controlHint}>\n                <select name=\"inputUIHint\" id=\"inputUIHint\">\n                  {uiHints.map(uiHint => {\n                    const isSelected = uiHint.value == selectedUIHint;\n                    return <option value={uiHint.value} selected={isSelected}>{uiHint.name}</option>\n                  })}\n                </select>\n              </FormEntry>\n\n              <FormEntry fieldId=\"inputStorageDriverType\" label={this.strings.storageLabel} hint={this.strings.storageHint}>\n                <select id=\"inputStorageDriverType\" name=\"inputStorageDriverType\">\n                  {storageDrivers.map(driver => {\n                    const value = driver.typeName;\n                    const text = driver.displayName;\n                    const selected = value == input.storageDriverType;\n                    return <option value={value} selected={selected}>{text}</option>;\n                  })}\n                </select>\n              </FormEntry>\n\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  private onSubmit = async (e: Event) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n    const input = this.getInputInternal(form);\n    this.inputChanged.emit(input);\n  };\n\n  private getInputInternal = (form: HTMLFormElement): InputDefinition => {\n    const formData = new FormData(form as HTMLFormElement);\n    const name = formData.get('inputName') as string;\n    const displayName = formData.get('inputDisplayName') as string;\n    const type = formData.get('inputTypeName') as string;\n    const description = formData.get('inputDescription') as string;\n    const category = formData.get('inputCategory') as string;\n    const uiHint = formData.get('inputUIHint') as string;\n    const isArray = formData.get('inputIsArray') as string === 'true';\n    const driverType = formData.get('inputStorageDriverType') as string;\n    const input = this.input;\n\n    input.name = name;\n    input.type = type;\n    input.displayName = displayName;\n    input.category = category;\n    input.description = description;\n    input.uiHint = uiHint;\n    input.isArray = isArray;\n    input.storageDriverType = isNullOrWhitespace(driverType) ? null : driverType;\n\n    return input;\n  };\n\n}\n","import {Component, h, Prop, Event, EventEmitter, Method, Element} from \"@stencil/core\";\nimport {groupBy} from 'lodash';\nimport descriptorsStore from '../../../../data/descriptors-store';\nimport {VariableDescriptor} from \"../../../../services/api-client/variable-descriptors-api\";\nimport {InputDefinition, OutputDefinition} from \"../../models/entities\";\nimport {FormEntry} from \"../../../../components/shared/forms/form-entry\";\nimport { getLocaleComponentStrings } from \"../../../../utils/locale\";\n\n@Component({\n  tag: 'elsa-activity-output-editor-dialog-content',\n  shadow: false\n})\nexport class ActivityOutputEditorDialogContent {\n  private formElement: HTMLFormElement;\n\n  @Prop() output: OutputDefinition;\n  @Event() outputChanged: EventEmitter<OutputDefinition>;\n\n  @Method()\n  async getOutput(): Promise<OutputDefinition> {\n    return this.getOutputInternal(this.formElement);\n  }\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n  async componentWillLoad() {\n    this.strings = await getLocaleComponentStrings(this.element);\n  }\n\n\n  render() {\n    const output: OutputDefinition = this.output ?? {name: '', type: 'Object', isArray: false};\n    const outputTypeName = output.type;\n    const availableTypes: Array<VariableDescriptor> = descriptorsStore.variableDescriptors;\n    const groupedTypes = groupBy(availableTypes, x => x.category);\n\n    return (\n      <div>\n        <form ref={el => this.formElement = el} class=\"tw-h-full tw-flex tw-flex-col tw-bg-white\" onSubmit={e => this.onSubmit(e)} method=\"post\">\n          <div class=\"tw-pt-4\">\n            <h2 class=\"tw-text-lg tw-font-medium tw-ml-4 tw-mb-2\">{this.strings.editOutputDefinition}</h2>\n            <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\n\n              <FormEntry fieldId=\"outputName\" label={this.strings.outputName} hint={this.strings.outputNameHint}>\n                <input type=\"text\" name=\"outputName\" id=\"outputName\" value={output.name}/>\n              </FormEntry>\n\n              <FormEntry fieldId=\"outputTypeName\" label={this.strings.outputType} hint={this.strings.outputTypeHint}>\n                <select id=\"outputTypeName\" name=\"outputTypeName\">\n                  {Object.keys(groupedTypes).map(category => {\n                    const types = groupedTypes[category] as Array<VariableDescriptor>;\n                    return (<optgroup label={category}>\n                      {types.map(descriptor => <option value={descriptor.typeName} selected={descriptor.typeName == outputTypeName}>{descriptor.displayName}</option>)}\n                    </optgroup>);\n                  })}\n                </select>\n              </FormEntry>\n\n              <FormEntry fieldId=\"outputDisplayName\" label={this.strings.outputDisplayName} hint={this.strings.outputDisplayNameHint}>\n                <input type=\"text\" name=\"outputDisplayName\" id=\"outputDisplayName\" value={output.displayName}/>\n              </FormEntry>\n\n              <FormEntry fieldId=\"outputDescription\" label={this.strings.outputDescription} hint={this.strings.outputDescriptionHint}>\n                <input type=\"text\" name=\"outputDescription\" id=\"outputDescription\" value={output.description}/>\n              </FormEntry>\n\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  private onSubmit = async (e: Event) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n    const output = this.getOutputInternal(form);\n    this.outputChanged.emit(output);\n  };\n\n  private getOutputInternal = (form: HTMLFormElement): OutputDefinition => {\n    const formData = new FormData(form as HTMLFormElement);\n    const name = formData.get('outputName') as string;\n    const displayName = formData.get('outputDisplayName') as string;\n    const type = formData.get('outputTypeName') as string;\n    const description = formData.get('outputDescription') as string;\n    const output = this.output;\n\n    output.name = name;\n    output.type = type;\n    output.displayName = displayName;\n    output.description = description;\n\n    return output;\n  };\n\n}\n","import {Component, h, Prop, Event, EventEmitter, Method, Element} from \"@stencil/core\";\nimport {groupBy} from 'lodash';\nimport {StorageDriverDescriptor, Variable} from \"../../../../models\";\nimport {generateIdentity, isNullOrWhitespace} from \"../../../../utils\";\nimport descriptorsStore from '../../../../data/descriptors-store';\nimport {VariableDescriptor} from \"../../../../services/api-client/variable-descriptors-api\";\nimport {CheckboxFormEntry, FormEntry} from \"../../../../components/shared/forms/form-entry\";\nimport { getLocaleComponentStrings } from \"../../../../utils/locale\";\n\n@Component({\n  tag: 'elsa-variable-editor-dialog-content',\n  shadow: false\n})\nexport class VariableEditorDialogContent {\n  private formElement: HTMLFormElement;\n\n  @Prop() variable: Variable;\n  @Event() variableChanged: EventEmitter<Variable>;\n\n  @Method()\n  async getVariable(): Promise<Variable> {\n    return this.getVariableInternal(this.formElement);\n  }\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n  async componentWillLoad() {\n    this.strings = await getLocaleComponentStrings(this.element);\n    console.log(this.strings)\n  }\n\n  render() {\n    const variable: Variable = this.variable ?? {id: '', name: '', typeName: 'Object', isArray: false};\n    const variableTypeName = variable.typeName;\n    const availableTypes: Array<VariableDescriptor> = descriptorsStore.variableDescriptors;\n    const groupedVariableTypes = groupBy(availableTypes, x => x.category);\n    const storageDrivers: Array<StorageDriverDescriptor> = descriptorsStore.storageDrivers;\n\n    return (\n      <div>\n        <form ref={el => this.formElement = el} class=\"tw-h-full tw-flex tw-flex-col tw-bg-white\" onSubmit={e => this.onSubmit(e)} method=\"post\">\n          <div class=\"tw-pt-4\">\n            <h2 class=\"tw-text-lg tw-font-medium tw-ml-4 tw-mb-2\">{this.strings.editVariable}</h2>\n            <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\n\n              <FormEntry fieldId=\"variableName\" label={this.strings.labelName} hint={this.strings.nameHint}>\n                <input type=\"text\" name=\"variableName\" id=\"variableName\" value={variable.name}/>\n              </FormEntry>\n\n              <FormEntry fieldId=\"variableTypeName\" label={this.strings.labelType} hint={this.strings.typeHint}>\n                <select id=\"variableTypeName\" name=\"variableTypeName\">\n                  {Object.keys(groupedVariableTypes).map(category => {\n                    const variableTypes = groupedVariableTypes[category] as Array<VariableDescriptor>;\n                    return (<optgroup label={category}>\n                      {variableTypes.map(descriptor => <option value={descriptor.typeName} selected={descriptor.typeName == variableTypeName}>{descriptor.displayName}</option>)}\n                    </optgroup>);\n                  })}\n                </select>\n              </FormEntry>\n\n              <CheckboxFormEntry fieldId=\"variableIsArray\" label={this.strings.labelArray} hint={this.strings.arrayHint}>\n                <input type=\"checkbox\" name=\"variableIsArray\" id=\"variableIsArray\" value=\"true\" checked={variable.isArray}/>\n              </CheckboxFormEntry>\n\n              <FormEntry fieldId=\"variableValue\" label={this.strings.labelValue} hint={this.strings.valueHint}>\n                <input type=\"text\" name=\"variableValue\" id=\"variableValue\" value={variable.value}/>\n              </FormEntry>\n\n              <FormEntry fieldId=\"variableStorageDriverId\" label={this.strings.labelStorage} hint={this.strings.storageHint}>\n                <select id=\"variableStorageDriverTypeName\" name=\"variableStorageDriverTypeName\">\n                  {storageDrivers.map(driver => {\n                    const value = driver.typeName;\n                    const text = driver.displayName;\n                    const selected = value == variable.storageDriverTypeName;\n                    return <option value={value} selected={selected}>{text}</option>;\n                  })}\n                </select>\n              </FormEntry>\n\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  private onSubmit = async (e: Event) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n    const variable = this.getVariableInternal(form);\n    this.variableChanged.emit(variable);\n  };\n\n  private getVariableInternal = (form: HTMLFormElement): Variable => {\n    const formData = new FormData(form as HTMLFormElement);\n    const name = formData.get('variableName') as string;\n    const value = formData.get('variableValue') as string;\n    const type = formData.get('variableTypeName') as string;\n    const isArray = formData.get('variableIsArray') as string == 'true';\n    const driverTypeName = formData.get('variableStorageDriverTypeName') as string;\n    const variable = this.variable;\n\n    if (isNullOrWhitespace(variable.id))\n      variable.id = generateIdentity();\n\n    variable.name = name;\n    variable.typeName = type;\n    variable.value = value;\n    variable.isArray = isArray;\n    variable.storageDriverTypeName = isNullOrWhitespace(driverTypeName) ? null : driverTypeName;\n\n    return variable;\n  };\n\n}\n","import {Component, Element, Event, EventEmitter, h, Prop, State, Watch} from \"@stencil/core\";\nimport {StorageDriverDescriptor, Variable} from \"../../../../models\";\nimport descriptorsStore from \"../../../../data/descriptors-store\";\nimport {Container} from \"typedi\";\nimport {ModalActionClickArgs, ModalActionDefinition, ModalActionType, ModalDialogInstance, ModalDialogService} from \"../../../../components/shared/modal-dialog\";\nimport {DeleteIcon, EditIcon} from \"../../../../components/icons/tooling\";\nimport { getLocaleComponentStrings } from \"../../../../utils/locale\";\n\n@Component({\n  tag: 'elsa-variables-editor',\n  shadow: false\n})\nexport class VariablesEditor {\n  private readonly modalDialogService: ModalDialogService;\n  private readonly saveAction: ModalActionDefinition;\n  private modalDialogInstance: ModalDialogInstance;\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n  constructor() {\n    this.modalDialogService = Container.get(ModalDialogService);\n\n    this.saveAction = {\n      name: 'Save',\n      type: ModalActionType.Submit,\n      text: 'Save',\n      isPrimary: true,\n      onClick: this.onVariableChanged\n    };\n  }\n\n  @Prop() variables?: Array<Variable>;\n  @Event() variablesChanged: EventEmitter<Variable[]>;\n  @State() variablesState: Array<Variable> = [];\n\n  @Watch('variables')\n  onVariablesPropChanged(value: Array<Variable>) {\n    this.variablesState = !!this.variables ? [...this.variables] : [];\n  }\n\n  async componentWillLoad() {\n    this.strings = await getLocaleComponentStrings(this.element);\n    this.onVariablesPropChanged(this.variables);\n  }\n\n  render() {\n    const variables = this.variables;\n    const storageDrivers: Array<StorageDriverDescriptor> = descriptorsStore.storageDrivers;\n\n    return (\n      <div>\n        <div class=\"tw-flex tw-justify-end tw-m-4\">\n          <button class=\"elsa-btn elsa-btn-primary\" onClick={e => this.onAddVariableClick()}>Add variable</button>\n        </div>\n        <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\n          <table class=\"default-table\">\n            <thead>\n            <tr>\n              <th scope=\"col\">{this.strings.columName}</th>\n              <th scope=\"col\">{this.strings.columnType}</th>\n              <th scope=\"col\">{this.strings.columStorage}</th>\n              <th scope=\"col\"/>\n            </tr>\n            </thead>\n            <tbody>\n            {variables.map(variable => {\n                const storage = storageDrivers.find(x => x.typeName == variable.storageDriverTypeName);\n                const storageName = storage?.displayName ?? '-';\n                const descriptor = descriptorsStore.variableDescriptors.find(x => x.typeName == variable.typeName);\n                const typeDisplayName = descriptor?.displayName ?? variable.typeName;\n\n                return (\n                  <tr>\n                    <td class=\"tw-whitespace-nowrap\">{variable.name}</td>\n                    <td class=\"tw-whitespace-nowrap\">{typeDisplayName}</td>\n                    <td>{storageName}</td>\n                    <td class=\"tw-pr-6\">\n                      <elsa-context-menu\n                        menuItems={[\n                          {text: this.strings.variableEditButton, handler: e => this.onEditClick(e, variable), icon: <EditIcon/>},\n                          {text: this.strings.variableDeleteButton, handler: e => this.onDeleteClick(e, variable), icon: <DeleteIcon/>},\n                        ]}\n                      />\n                    </td>\n                  </tr>);\n              }\n            )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  private getVariableNameExists = (name: string): boolean => !!this.variables.find(x => x.name == name);\n\n  private updateVariablesState = (value: Array<Variable>) => {\n    this.variablesState = value;\n    this.variablesChanged.emit(value);\n  };\n\n  private generateNewVariableName = () => {\n    const variables = this.variables;\n    let counter = variables.length;\n\n    while (true) {\n      const newVariableName = `Variable${++counter}`;\n\n      if (!this.getVariableNameExists(newVariableName))\n        return newVariableName;\n    }\n  };\n\n  private onAddVariableClick = async () => {\n    const newVariableName = this.generateNewVariableName();\n    const variable: Variable = {id: '', name: newVariableName, typeName: 'Object', value: null, isArray: false};\n\n    this.modalDialogInstance = this.modalDialogService.show(() => <elsa-variable-editor-dialog-content variable={variable}/>, {actions: [this.saveAction]})\n  };\n\n  private onEditClick = async (e: Event, variable: Variable) => {\n    e.preventDefault();\n    this.modalDialogInstance = this.modalDialogService.show(() => <elsa-variable-editor-dialog-content variable={variable}/>, {actions: [this.saveAction]});\n  };\n\n  private onDeleteClick = (e: Event, variable: Variable) => {\n    e.preventDefault();\n    const variables = this.variables.filter(x => x != variable);\n    this.updateVariablesState(variables);\n  };\n\n  private onVariableChanged = async (a: ModalActionClickArgs) => {\n    const updatedVariable = await (a.instance.modalDialogContentRef as HTMLElsaVariableEditorDialogContentElement).getVariable();\n    let variables = this.variables;\n    const variableExists = !!variables.find(x => x == updatedVariable);\n\n    if (variableExists)\n      variables = [...variables];\n    else\n      variables = [...variables, updatedVariable];\n\n    variables = variables.sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0);\n\n    this.updateVariablesState(variables);\n  };\n}\n","import {Component, Event, EventEmitter, h, Method, Prop, State, Watch} from '@stencil/core';\r\nimport {Container} from \"typedi\";\r\nimport {EventBus} from \"../../../services\";\r\nimport {WorkflowDefinition} from \"../models/entities\";\r\nimport {PropertiesTabModel, TabModel, Widget, WorkflowDefinitionPropsUpdatedArgs, WorkflowPropertiesEditorDisplayingArgs, WorkflowPropertiesEditorEventTypes, WorkflowPropertiesEditorModel} from \"../models/ui\";\r\nimport {FormEntry} from \"../../../components/shared/forms/form-entry\";\r\nimport {isNullOrWhitespace} from \"../../../utils\";\r\nimport {InfoList} from \"../../../components/shared/forms/info-list\";\r\nimport {TabChangedArgs, Variable, VersionedEntity} from \"../../../models\";\r\nimport {WorkflowDefinitionsApi} from \"../services/api\";\r\n\r\n@Component({\r\n  tag: 'elsa-widgets',\r\n})\r\nexport class Widgets {\r\n  @Prop() widgets: Array<Widget> = [];\r\n\r\n  public render() {\r\n    const widgets = this.widgets.sort((a, b) => a.order < b.order ? -1 : a.order > b.order ? 1 : 0);\r\n\r\n    return <div>\r\n      {widgets.map(widget => widget.content())}\r\n    </div>\r\n  }\r\n}\r\n","import {Component, Element, Event, EventEmitter, h, Prop, State, Watch} from \"@stencil/core\";\nimport descriptorsStore from \"../../../../data/descriptors-store\";\nimport {Container} from \"typedi\";\nimport {ModalActionClickArgs, ModalActionDefinition, ModalActionType, ModalDialogInstance, ModalDialogService} from \"../../../../components/shared/modal-dialog\";\nimport {InputDefinition, OutputDefinition} from \"../../models/entities\";\nimport {DeleteIcon, EditIcon} from \"../../../../components/icons/tooling\";\nimport {FormEntry} from \"../../../../components/shared/forms/form-entry\";\nimport { getLocaleComponentStrings } from \"../../../../utils/locale\";\n\n@Component({\n  tag: 'elsa-workflow-definition-input-output-settings',\n  shadow: false\n})\nexport class InputOutputSettings {\n  private readonly modalDialogService: ModalDialogService;\n  private readonly inputSaveAction: ModalActionDefinition;\n  private readonly outputSaveAction: ModalActionDefinition;\n  private modalDialogInstance: ModalDialogInstance;\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n\n\n  constructor() {\n    this.modalDialogService = Container.get(ModalDialogService);\n\n    this.inputSaveAction = {\n      name: 'Save',\n      type: ModalActionType.Submit,\n      text: 'Save',\n      isPrimary: true,\n      onClick: this.onInputDefinitionChanged\n    };\n\n    this.outputSaveAction = {\n      name: 'Save',\n      type: ModalActionType.Submit,\n      text: 'Save',\n      isPrimary: true,\n      onClick: this.onOutputDefinitionChanged\n    };\n  }\n\n  @Prop() inputs?: Array<InputDefinition>;\n  @Prop() outputs?: Array<OutputDefinition>;\n  @Prop() outcomes?: Array<string>;\n  @Event() inputsChanged: EventEmitter<InputDefinition[]>;\n  @Event() outputsChanged: EventEmitter<OutputDefinition[]>;\n  @Event() outcomesChanged: EventEmitter<Array<string>>;\n  @State() inputsState: Array<InputDefinition> = [];\n  @State() outputsState: Array<OutputDefinition> = [];\n\n  @Watch('inputs')\n  onInputsPropChanged(value: Array<InputDefinition>) {\n    this.inputsState = !!this.inputs ? [...this.inputs] : [];\n  }\n\n  @Watch('outputs')\n  onOutputsPropChanged(value: Array<OutputDefinition>) {\n    this.outputsState = !!this.outputs ? [...this.outputs] : [];\n  }\n\n  async componentWillLoad() {\n    this.strings = await getLocaleComponentStrings(this.element);\n    this.onInputsPropChanged(this.inputs);\n    this.onOutputsPropChanged(this.outputs);\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this.renderInputs()}\n        {this.renderOutputs()}\n        {this.renderOutcomes()}\n      </div>\n    );\n  }\n\n  private renderInputs = () => {\n    const inputs = this.inputsState;\n\n    return <div>\n      <div class=\"tw-p-4\">\n        <h3 class=\"tw-text-base tw-leading-6 tw-font-medium tw-text-gray-900\">{this.strings.inputsLabel}</h3>\n      </div>\n      <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\n        <table class=\"default-table\">\n          <thead>\n          <tr>\n            <th scope=\"col\">{this.strings.inputName}</th>\n            <th scope=\"col\">{this.strings.inputType}</th>\n            <th scope=\"col\"/>\n          </tr>\n          </thead>\n          <tbody>\n          {inputs.map(input => {\n\n              const descriptor = descriptorsStore.variableDescriptors.find(x => x.typeName == input.type);\n              const typeDisplayName = descriptor?.displayName ?? input.type;\n\n              return (\n                <tr>\n                  <td class=\"tw-whitespace-nowrap\">{input.name}</td>\n                  <td class=\"tw-whitespace-nowrap\">{typeDisplayName}</td>\n                  <td class=\"tw-pr-6\">\n                    <elsa-context-menu\n                      menuItems={[\n                        {text: this.strings.editButton, handler: e => this.onEditInputClick(e, input), icon: <EditIcon/>},\n                        {text: this.strings.deleteButton, handler: e => this.onDeleteInputClick(e, input), icon: <DeleteIcon/>},\n                      ]}\n                    />\n                  </td>\n                </tr>);\n            }\n          )}\n          </tbody>\n        </table>\n      </div>\n      <div class=\"tw-flex tw-justify-end tw-m-4\">\n        <button class=\"elsa-btn elsa-btn-primary\" onClick={e => this.onAddInputClick()}>{this.strings.addInputButton}</button>\n      </div>\n    </div>\n  };\n\n  private renderOutputs = () => {\n    const outputs = this.outputsState;\n\n    return <div>\n      <div class=\"tw-p-4\">\n        <h3 class=\"tw-text-base tw-leading-6 tw-font-medium tw-text-gray-900\">{this.strings.outputLabel}</h3>\n      </div>\n      <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\n        <table class=\"default-table\">\n          <thead>\n          <tr>\n            <th scope=\"col\">{this.strings.outputName}</th>\n            <th scope=\"col\">{this.strings.outputType}</th>\n            <th scope=\"col\"/>\n          </tr>\n          </thead>\n          <tbody>\n          {outputs.map(output => {\n\n              const descriptor = descriptorsStore.variableDescriptors.find(x => x.typeName == output.type);\n              const typeDisplayName = descriptor?.displayName ?? output.type;\n\n              return (\n                <tr>\n                  <td class=\"tw-whitespace-nowrap\">{output.name}</td>\n                  <td class=\"tw-whitespace-nowrap\">{typeDisplayName}</td>\n                  <td class=\"tw-pr-6\">\n                    <elsa-context-menu\n                      menuItems={[\n                        {text: this.strings.editButton, handler: e => this.onEditOutputClick(e, output), icon: <EditIcon/>},\n                        {text: this.strings.deleteButton, handler: e => this.onDeleteOutputClick(e, output), icon: <DeleteIcon/>},\n                      ]}\n                    />\n                  </td>\n                </tr>);\n            }\n          )}\n          </tbody>\n        </table>\n      </div>\n      <div class=\"tw-flex tw-justify-end tw-m-4\">\n        <button class=\"elsa-btn elsa-btn-primary\" onClick={e => this.onAddOutputClick()}>{this.strings.addOutputButton}</button>\n      </div>\n    </div>\n  };\n\n  private renderOutcomes = () => {\n    const outcomes = [...this.outcomes];\n\n    return <div>\n      <div class=\"tw-p-4\">\n        <h3 class=\"tw-text-base tw-leading-6 tw-font-medium tw-text-gray-900\">{this.strings.labelOutcome}</h3>\n      </div>\n      <FormEntry label=\"\" fieldId=\"WorkflowDefinitionOutcomes\" hint={this.strings.outcomeHint}>\n        <elsa-input-tags placeHolder={this.strings.placeholderOutcome} values={outcomes} onValueChanged={e => this.onOutcomesChanged(e.detail)}/>\n      </FormEntry>\n    </div>\n  };\n\n  private getInputNameExists = (name: string): boolean => !!this.inputsState.find(x => x.name == name);\n  private getOutputNameExists = (name: string): boolean => !!this.outputsState.find(x => x.name == name);\n\n  private updateInputsState = (value: Array<InputDefinition>) => {\n    this.inputsState = value;\n    this.inputsChanged.emit(value);\n  };\n\n  private updateOutputsState = (value: Array<OutputDefinition>) => {\n    this.outputsState = value;\n    this.outputsChanged.emit(value);\n  };\n\n  private generateNewInputName = () => {\n    const inputs = this.inputsState;\n    let counter = inputs.length;\n\n    while (true) {\n      const newName = `Input${++counter}`;\n\n      if (!this.getInputNameExists(newName))\n        return newName;\n    }\n  };\n\n  private generateNewOutputName = () => {\n    const outputs = this.outputsState;\n    let counter = outputs.length;\n\n    while (true) {\n      const newName = `Output${++counter}`;\n\n      if (!this.getOutputNameExists(newName))\n        return newName;\n    }\n  };\n\n  private onAddInputClick = async () => {\n    const newName = this.generateNewInputName();\n    const input: InputDefinition = {name: newName, type: 'Object', displayName: newName, isArray: false};\n\n    this.modalDialogInstance = this.modalDialogService.show(() => <elsa-activity-input-editor-dialog-content input={input}/>, {actions: [this.inputSaveAction]})\n  };\n\n  private onAddOutputClick = async () => {\n    const newName = this.generateNewOutputName();\n    const output: OutputDefinition = {name: newName, type: 'Object', displayName: newName, isArray: false};\n\n    this.modalDialogInstance = this.modalDialogService.show(() => <elsa-activity-output-editor-dialog-content output={output}/>, {actions: [this.outputSaveAction]})\n  };\n\n  private onEditInputClick = async (e: Event, input: InputDefinition) => {\n    e.preventDefault();\n    this.modalDialogInstance = this.modalDialogService.show(() => <elsa-activity-input-editor-dialog-content input={input}/>, {actions: [this.inputSaveAction]});\n  };\n\n  private onEditOutputClick = async (e: Event, output: OutputDefinition) => {\n    e.preventDefault();\n    this.modalDialogInstance = this.modalDialogService.show(() => <elsa-activity-output-editor-dialog-content output={output}/>, {actions: [this.outputSaveAction]});\n  };\n\n  private onDeleteInputClick = (e: Event, input: InputDefinition) => {\n    e.preventDefault();\n    const inputs = this.inputsState.filter(x => x != input);\n    this.updateInputsState(inputs);\n  };\n\n  private onDeleteOutputClick = (e: Event, output: OutputDefinition) => {\n    e.preventDefault();\n    const outputs = this.outputsState.filter(x => x != output);\n    this.updateOutputsState(outputs);\n  };\n\n  private onInputDefinitionChanged = async (a: ModalActionClickArgs) => {\n    const updatedInput = await (a.instance.modalDialogContentRef as HTMLElsaActivityInputEditorDialogContentElement).getInput();\n    let inputs = this.inputsState;\n    const inputExists = !!inputs.find(x => x == updatedInput);\n\n    if (inputExists)\n      inputs = [...inputs];\n    else\n      inputs = [...inputs, updatedInput];\n\n    inputs = inputs.sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0);\n\n    this.updateInputsState(inputs);\n  };\n\n  private onOutputDefinitionChanged = async (a: ModalActionClickArgs) => {\n    const updatedOutput = await (a.instance.modalDialogContentRef as HTMLElsaActivityOutputEditorDialogContentElement).getOutput();\n    let outputs = this.outputsState;\n    const outputExists = !!outputs.find(x => x == updatedOutput);\n\n    if (outputExists)\n      outputs = [...outputs];\n    else\n      outputs = [...outputs, updatedOutput];\n\n    outputs = outputs.sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0);\n\n    this.updateOutputsState(outputs);\n  };\n\n  private onOutcomesChanged = (outcomes: Array<string>) => {\n    this.outcomesChanged.emit(outcomes);\n  }\n}\n","import {Component, Element, Event, EventEmitter, h, Prop, Watch} from '@stencil/core';\nimport {Container} from \"typedi\";\nimport {EventBus} from \"../../../../services\";\nimport {WorkflowDefinition} from \"../../models/entities\";\nimport {WorkflowDefinitionsApi} from \"../../services/api\";\nimport {DeleteIcon, RevertIcon, PublishedIcon} from \"../../../../components/icons/tooling\";\nimport moment from \"moment\";\nimport {ModalDialogService, DefaultModalActions, DefaultContents, ModalType} from \"../../../../components/shared/modal-dialog\";\nimport { getLocaleComponentStrings } from '../../../../utils/locale';\n\n@Component({\n  tag: 'elsa-workflow-definition-version-history',\n})\nexport class WorkflowDefinitionVersionHistory {\n  private readonly eventBus: EventBus;\n  private readonly workflowDefinitionApi: WorkflowDefinitionsApi;\n  private readonly modalDialogService: ModalDialogService;\n\n  constructor() {\n    this.eventBus = Container.get(EventBus);\n    this.workflowDefinitionApi = Container.get(WorkflowDefinitionsApi);\n    this.modalDialogService = Container.get(ModalDialogService);\n  }\n\n  @Prop() selectedVersion: WorkflowDefinition;\n  @Prop() workflowVersions: Array<WorkflowDefinition>;\n  @Prop() serverUrl: string;\n  @Event() versionSelected: EventEmitter<WorkflowDefinition>;\n  @Event() deleteVersionClicked: EventEmitter<WorkflowDefinition>;\n  @Event() revertVersionClicked: EventEmitter<WorkflowDefinition>;\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n  async componentWillLoad() {\n    this.strings = await getLocaleComponentStrings(this.element);\n  }\n\n\n  onViewVersionClick = (e: Event, version: WorkflowDefinition) => {\n    e.preventDefault();\n    this.versionSelected.emit(version);\n  };\n\n  onDeleteVersionClick = async (e: Event, version: WorkflowDefinition) => {\n    e.preventDefault();\n    this.modalDialogService.show(\n      () => DefaultContents.Warning(\"Are you sure you want to delete this version?\"),\n      {\n        modalType: ModalType.Confirmation,\n        actions: [DefaultModalActions.Delete(() => this.deleteVersionClicked.emit(version)), DefaultModalActions.Cancel()]\n      });\n  };\n\n  onRevertVersionClick = (e: Event, version: WorkflowDefinition) => {\n    e.preventDefault();\n    this.revertVersionClicked.emit(version);\n  };\n\n  render() {\n    return (\n      <div>\n        <table>\n          <thead>\n          <tr>\n            <th/>\n            <th>{this.strings.version}</th>\n            <th>{this.strings.created}</th>\n            <th/>\n            <th/>\n          </tr>\n          </thead>\n          <tbody>\n          {this.workflowVersions.map(v => {\n              let menuItems = [];\n              menuItems.push({text: this.strings.delete, handler: e => this.onDeleteVersionClick(e, v), icon: <DeleteIcon/>});\n\n              if (!v.isLatest)\n                menuItems.push({text: this.strings.revert, handler: e => this.onRevertVersionClick(e, v), icon: <RevertIcon/>});\n\n              return (\n                <tr>\n                  <td>{v.isPublished ? <PublishedIcon/> : \"\"}</td>\n                  <td>{v.version}</td>\n                  <td>{moment(v.createdAt).format('DD-MM-YYYY HH:mm:ss')}</td>\n                  <td>\n                    <button onClick={e => this.onViewVersionClick(e, v)}\n                            type=\"button\"\n                            disabled={this.selectedVersion.version == v.version}\n                            class={this.selectedVersion.version == v.version ? \"elsa-btn elsa-btn-primary\" : \"elsa-btn elsa-btn-secondary\"}>\n                      {this.strings.view}\n                    </button>\n                  </td>\n                  <td>\n                    {v.isPublished || v.isPublished ? undefined : <elsa-context-menu menuItems={menuItems}/>}\n                  </td>\n                </tr>\n              );\n            }\n          )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\n"],"version":3}