{"file":"elsa-blank.elsa-modal-dialog.elsa-modal-dialog-container.elsa-notification-template.elsa-notifications-manager.elsa-studio.elsa-toast-manager.elsa-toast-notification.elsa-workflow-toolbar.elsa-workflow-toolbar-menu.entry.js","mappings":"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","names":["notificationStore","optionsStore","studioComponentStore","toolbarComponentStore","notificationService","toolbarButtonMenuItemStore"],"sources":["./src/components/studio/blank.tsx","./src/components/shared/modal-dialog/modal-dialog.tsx","./src/components/shared/modal-dialog/modal-dialog-container.tsx","./src/modules/notifications/notification-template.tsx","./src/modules/notifications/notification-manager.tsx","./src/components/studio/studio.css?tag=elsa-studio","./src/components/studio/studio.tsx","./src/modules/notifications/toast-manager.tsx","./src/modules/notifications/toast-notification.tsx","./src/modules/notifications/event-types.ts","./src/services/api-client/packages-api.ts","./src/components/toolbar/workflow-toolbar/workflow-toolbar.tsx","./src/components/toolbar/workflow-toolbar-menu/workflow-toolbar-menu.tsx"],"sourcesContent":["import {Component, h} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: 'elsa-blank',\r\n  shadow: false,\r\n})\r\nexport class Blank{\r\n  render(){\r\n    return <div class=\"tw-bg-gray-800 tw-overflow-hidden tw-h-screen\"></div>;\r\n  }\r\n}\r\n","import {Component, Host, h, State, Listen, Method, Event, Element, EventEmitter, Prop} from '@stencil/core';\r\nimport {enter, leave} from 'el-transition'\r\nimport {ModalActionClickArgs, ModalActionDefinition, ModalActionType, ModalDialogInstance} from \"./models\";\r\nimport {ModalType} from \"./modal-type\";\r\n\r\n@Component({\r\n  tag: 'elsa-modal-dialog',\r\n  shadow: false,\r\n})\r\nexport class ModalDialog {\r\n  private overlay: HTMLElement\r\n  private modal: HTMLElement\r\n\r\n  @Prop() modalDialogInstance: ModalDialogInstance;\r\n  @Prop() actions: Array<ModalActionDefinition> = [];\r\n  @Prop() size: string = 'tw-max-w-6xl';\r\n  @Prop() type: ModalType = ModalType.Default;\r\n  @Prop() autoHide: boolean = true;\r\n  @Prop() content: () => any = () => <div/>;\r\n  @Event() shown: EventEmitter;\r\n  @Event() hidden: EventEmitter;\r\n  @Event() actionInvoked: EventEmitter<ModalActionClickArgs>;\r\n  @State() private isVisible: boolean = true;\r\n  @Element() element;\r\n\r\n  @Method()\r\n  async show(animate: boolean = true) {\r\n    this.showInternal(animate);\r\n  }\r\n\r\n  @Method()\r\n  async hide(animate: boolean = true) {\r\n    this.hideInternal(animate);\r\n  }\r\n\r\n  handleDefaultClose = async () => {\r\n    await this.hide();\r\n  }\r\n\r\n  showInternal(animate: boolean) {\r\n    this.isVisible = true;\r\n\r\n    if (!animate) {\r\n      this.overlay.style.opacity = '1';\r\n      this.modal.style.opacity = '1';\r\n    }\r\n\r\n    enter(this.overlay);\r\n    enter(this.modal).then(this.shown.emit);\r\n  }\r\n\r\n  hideInternal(animate: boolean) {\r\n    if (!animate) {\r\n      this.isVisible = false\r\n    }\r\n\r\n    leave(this.overlay);\r\n    leave(this.modal).then(() => {\r\n      this.isVisible = false;\r\n      this.hidden.emit();\r\n    });\r\n  }\r\n\r\n  @Listen('keydown', {target: 'window'})\r\n  async handleKeyDown(e: KeyboardEvent) {\r\n    if (this.isVisible && e.key === 'Escape') {\r\n      await this.hide(true);\r\n    }\r\n  }\r\n\r\n  componentDidRender() {\r\n    if (this.isVisible) {\r\n      enter(this.overlay);\r\n      enter(this.modal).then(this.shown.emit);\r\n    }\r\n\r\n    this.modalDialogInstance.modalDialogContentRef = this.element.querySelector('.modal-content').children[0];\r\n  }\r\n\r\n  render() {\r\n    const actions = this.actions;\r\n    const content = this.content();\r\n\r\n    return (\r\n      <Host class={{'hidden': !this.isVisible, 'tw-block': true}}>\r\n        <div class=\"tw-fixed tw-z-50 tw-inset-0 tw-overflow-y-auto\">\r\n          <div class=\"tw-flex tw-items-end tw-justify-center tw-min-tw-h-screen tw-pt-4 tw-px-4 tw-pb-20 tw-text-center sm:tw-block sm:tw-p-0\">\r\n            <div ref={el => this.overlay = el}\r\n                 onClick={() => this.hide(true)}\r\n                 data-transition-enter=\"tw-ease-out tw-duration-300\" data-transition-enter-start=\"tw-opacity-0\"\r\n                 data-transition-enter-end=\"tw-opacity-0\" data-transition-leave=\"tw-ease-in tw-duration-200\"\r\n                 data-transition-leave-start=\"tw-opacity-0\" data-transition-leave-end=\"tw-opacity-0\"\r\n                 class=\"hidden tw-fixed tw-inset-0 tw-transition-opacity\" aria-hidden=\"true\">\r\n              <div class=\"tw-absolute tw-inset-0 tw-bg-gray-500 tw-opacity-75\"/>\r\n            </div>\r\n\r\n            <span class=\"hidden sm:tw-inline-block sm:tw-align-middle sm:tw-h-screen\" aria-hidden=\"true\"/>\r\n            <div ref={el => this.modal = el}\r\n                 data-transition-enter=\"tw-ease-out tw-duration-300\"\r\n                 data-transition-enter-start=\"tw-opacity-0 tw-translate-y-4 sm:tw-translate-y-0 sm:tw-scale-95\"\r\n                 data-transition-enter-end=\"tw-opacity-0 tw-translate-y-0 sm:tw-scale-100\"\r\n                 data-transition-leave=\"tw-ease-in tw-duration-200\"\r\n                 data-transition-leave-start=\"tw-opacity-0 tw-translate-y-0 sm:tw-scale-100\"\r\n                 data-transition-leave-end=\"tw-opacity-0 tw-translate-y-4 sm:tw-translate-y-0 sm:tw-scale-95\"\r\n                 class={`hidden tw-inline-block sm:tw-align-top tw-bg-white tw-rounded-lg tw-text-left tw-overflow-visible tw-shadow-xl tw-transform tw-transition-all sm:tw-my-8 sm:tw-align-top ${this.size}`}\r\n                 role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\r\n              <div class=\"modal-content\">\r\n                {content}\r\n              </div>\r\n\r\n              <div class=\"tw-bg-gray-50 tw-px-4 tw-py-3 sm:tw-px-6 sm:tw-flex sm:tw-flex-row-reverse\">\r\n\r\n                {actions.map(action => {\r\n\r\n                  if (action.display)\r\n                    return action.display(action);\r\n\r\n                  const cssClass = action.isPrimary\r\n                    ? 'tw-text-white tw-bg-blue-600 hover:tw-bg-blue-700 tw-border-transparent focus:tw-ring-blue-500'\r\n                    : action.isDangerous ? 'tw-text-white tw-bg-red-600 hover:tw-bg-red-700 tw-border-transparent focus:tw-ring-red-500'\r\n                      : 'tw-bg-white tw-border-gray-300 tw-text-gray-700 hover:tw-bg-gray-50 focus:tw-ring-blue-500';\r\n\r\n                  const buttonType = action.type == ModalActionType.Submit ? 'submit' : 'button';\r\n                  const cancelHandler = () => this.hideInternal(true);\r\n                  const defaultHandler = (args: ModalActionClickArgs) => this.actionInvoked.emit(args);\r\n                  const clickHandler = !!action.onClick ? action.onClick : action.type == ModalActionType.Cancel ? cancelHandler : defaultHandler;\r\n\r\n                  return <button type={buttonType}\r\n                                 onClick={e => {\r\n                                   clickHandler({e, action, instance: this.modalDialogInstance});\r\n                                   if (this.autoHide)\r\n                                     this.hideInternal(true);\r\n                                 }}\r\n                                 class={`${cssClass} tw-mt-3 tw-w-full tw-inline-flex tw-justify-center tw-rounded-md tw-border tw-shadow-sm tw-px-4 tw-py-2 tw-text-base tw-font-medium focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-offset-2 sm:tw-mt-0 sm:tw-ml-3 sm:tw-w-auto sm:tw-text-sm`}>\r\n                    {action.text}\r\n                  </button>\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import {Component, h, Host} from '@stencil/core';\r\nimport state from './state';\r\nimport {ModalDialogInstance} from \"./models\";\r\nimport {ModalType} from \"./modal-type\";\r\n\r\n@Component({\r\n  tag: 'elsa-modal-dialog-container',\r\n  shadow: false,\r\n})\r\nexport class ModalDialogContainer {\r\n\r\n  private onInstanceHidden = (instance: ModalDialogInstance) => {\r\n    let instances: Array<ModalDialogInstance> = state.instances;\r\n    instances = instances.filter(x => x != instance);\r\n    state.instances = instances;\r\n  }\r\n\r\n  render() {\r\n    const instances: Array<ModalDialogInstance> = state.instances;\r\n\r\n    return (\r\n      <Host>\r\n        {instances.map(instance => {\r\n          const options = instance.options;\r\n          const actions = options?.actions ?? [];\r\n          const modalType = options?.modalType ?? ModalType.Default;\r\n          const size = options?.size ?? 'sm:tw-max-w-6xl';\r\n\r\n          return (<elsa-modal-dialog\r\n            ref={el => instance.modalDialogRef = el}\r\n            type={modalType}\r\n            size={size}\r\n            modalDialogInstance={instance}\r\n            content={instance.content}\r\n            actions={actions}\r\n            onActionInvoked={e => {\r\n              const args = e.detail;\r\n              instance.actionInvoked(args);\r\n            }}\r\n            onHidden={() => this.onInstanceHidden(instance)}/>);\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import {Component, Host, h, Prop, State} from '@stencil/core';\r\nimport {NotificationDisplayType, NotificationType} from \"./models\";\r\nimport { formatTextWithLineBreaks } from '../../utils';\r\n\r\n@Component({\r\n  tag: 'elsa-notification-template',\r\n  shadow: false,\r\n})\r\nexport class NotificationTemplate {\r\n\r\n  @Prop() public notification: NotificationType;\r\n  @State() time: string;\r\n  private timer: number;\r\n\r\n\r\n  connectedCallback() {\r\n    this.time = this.notification.timestamp.fromNow();\r\n    this.timer = window.setInterval(() => {\r\n      this.time = this.notification.timestamp.fromNow();\r\n    }, 60 * 1000);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.clearInterval(this.timer);\r\n  }\r\n\r\n  render() {\r\n    const {notification} = this;\r\n    const {type = NotificationDisplayType.Success} = notification;\r\n\r\n    return (\r\n      <div class=\"tw-flex tw-items-start tw-z-30\">\r\n        <div class=\"tw-flex-shrink-0 tw-z-30\">\r\n          {type === NotificationDisplayType.Success ?\r\n            <svg class=\"tw-h-6 tw-w-6 tw-text-green-400 tw-z-30\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\r\n                 viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                    d=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\r\n\r\n            </svg> : null\r\n          }\r\n          {type === NotificationDisplayType.InProgress ?\r\n            <svg class=\"tw-animate-spin tw-h-6 tw-w-6 tw-text-green-400\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                 fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"tw-opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"/>\r\n              <path class=\"tw-opacity-75\" fill=\"currentColor\"\r\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\r\n            </svg> : null\r\n          }\r\n          {type === NotificationDisplayType.Warning ?\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                 stroke=\"currentColor\" class=\"tw-w-6 tw-h-6 tw-text-orange-600\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                    d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"/>\r\n            </svg>\r\n            : null\r\n          }\r\n          {type === NotificationDisplayType.Error ?\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                 stroke=\"currentColor\" class=\"tw-w-6 tw-h-6 tw-text-red-400\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                    d=\"M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z\"/>\r\n            </svg>\r\n            : null\r\n          }\r\n        </div>\r\n        <div class=\"tw-ml-3 tw-w-0 tw-flex-1 tw-pt-0.5 tw-z-30\">\r\n          <p class=\"tw-text-sm tw-font-medium tw-text-gray-900\">{notification.title}</p>\r\n          <p class=\"tw-mt-1 tw-text-sm tw-text-gray-500\" innerHTML={formatTextWithLineBreaks(notification.text)}></p>\r\n          <p class=\"tw-mt-1 tw-text-sm tw-text-gray-700 tw-text-right\">{this.time}</p>\r\n        </div>\r\n        <div class=\"tw-ml-4 tw-flex tw-flex-shrink-0 tw-z-30\">\r\n          <slot name=\"close-button\"/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import {Component, h, Prop, Watch} from '@stencil/core';\r\nimport {leave, toggle} from 'el-transition'\r\nimport notificationStore from './notification-store';\r\nimport {EventBus} from '../../services';\r\nimport NotificationService from './notification-service';\r\n\r\n@Component({\r\n  tag: 'elsa-notifications-manager',\r\n  shadow: false,\r\n  styleUrl: '',\r\n})\r\nexport class NotificationManager {\r\n  @Prop() public modalState: boolean;\r\n\r\n  @Watch('modalState')\r\n  onModalStateChange(value) {\r\n    toggle(this.modal);\r\n  }\r\n\r\n  private readonly eventBus: EventBus;\r\n\r\n  modal: HTMLElement;\r\n  overlay: HTMLElement;\r\n\r\n  static NotificationServiceLocal = NotificationService;\r\n\r\n  deleteNotif = (id) => {\r\n    notificationStore.notifications = notificationStore.notifications.filter(item => item.id !== id)\r\n  }\r\n\r\n  handleToggle = () => {\r\n    NotificationManager.NotificationServiceLocal.toggleNotification();\r\n    toggle(this.modal);\r\n  };\r\n\r\n  private closeMenu() {\r\n    leave(this.modal);\r\n  }\r\n\r\n  private toggleMenu() {\r\n    toggle(this.modal);\r\n  }\r\n\r\n\r\n  render() {\r\n    const {notifications} = notificationStore;\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          ref={el => this.modal = el}\r\n          data-transition-enter=\"tw-transform tw-transition tw-ease-in-out tw-duration-100 sm:tw-duration-100\"\r\n          data-transition-enter-start=\"tw-translate-x-full\"\r\n          data-transition-leave=\"tw-transform tw-transition tw-ease-in-out tw-duration-100 sm:tw-duration-100\"\r\n          data-transition-leave-start=\"tw-translate-x-0\"\r\n          data-transition-leave-end=\"tw-translate-x-full\"\r\n          class='hidden tw-z-50 tw-top-16 tw-fixed tw-inset-y-0 tw-right-0 tw-flex tw-max-w-full tw-pl-10 sm:tw-pl-16'>\r\n\r\n          <div class=\"tw-w-screen tw-max-w-md\">\r\n            <div class=\"tw-flex tw-h-full tw-flex-col tw-overflow-y-scroll tw-bg-white tw-shadow-xl\">\r\n              <div class=\"tw-p-6 tw-border-b\">\r\n                <div class=\"tw-flex tw-items-start tw-justify-between\">\r\n                  <h2 class=\"tw-text-lg tw-font-medium tw-text-gray-900\" id=\"slide-over-title\">Notifications</h2>\r\n                  <div class=\"tw-ml-3 tw-flex tw-h-7 tw-items-center\">\r\n                    <button onClick={() => this.handleToggle()}\r\n                            type=\"button\"\r\n                            class=\"tw-rounded-md tw-bg-white tw-text-gray-400 hover:tw-text-gray-500 focus:tw-ring-2 focus:tw-ring-blue-500\">\r\n                      <span class=\"tw-sr-only\">Close panel</span>\r\n                      <svg class=\"tw-h-6 tw-w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                           stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\"/>\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {notifications.length === 0 && <div\r\n                class=\"tw-p-6 tw-pointer-events-auto tw-w-full tw-overflow-hidden tw-border-b tw-ring-1 tw-ring-black tw-ring-opacity-5\">There are no notifications</div>}\r\n              <ul role=\"list\"\r\n                  class=\"tw-pointer-events-auto tw-overflow-y-auto tw-flex-1 tw-divide-y tw-divide-gray-200 tw-overflow-y-auto\">\r\n                {notifications.map(notification => (\r\n                  <li>\r\n                    <div class=\"tw-border-b tw-group tw-relative tw-flex tw-items-center tw-py-6 tw-px-5\">\r\n                      <a href=\"#\" class=\"-tw-m-1 tw-block tw-flex-1 tw-p-1\">\r\n                        <elsa-notification-template notification={notification}>\r\n                          <div slot=\"close-button\" class=\"tw-relative tw-ml-2 tw-inline-block tw-flex-shrink-0 tw-text-left\">\r\n                            <button onClick={() => this.deleteNotif(notification.id)}>\r\n                              <svg class=\"tw-h-6 tw-w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\r\n                                   viewBox=\"0 0 24 24\"\r\n                                   stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\"/>\r\n                              </svg>\r\n                            </button>\r\n                          </div>\r\n                        </elsa-notification-template>\r\n                      </a>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n",":host {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n\r\n.elsa-studio-content {\r\n  position: absolute;\r\n  top: 64px;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n","import {Component, Element, EventEmitter, h, Host, Prop, Watch, Event} from '@stencil/core';\nimport 'reflect-metadata';\nimport {Container} from 'typedi';\nimport {AuthContext, EventBus, PluginRegistry, ServerSettings} from '../../services';\nimport {MonacoEditorSettings} from \"../../services/monaco-editor-settings\";\nimport {WorkflowDefinitionManager} from \"../../modules/workflow-definitions/services/manager\";\nimport {EventTypes} from \"../../models\";\nimport studioComponentStore from \"../../data/studio-component-store\";\nimport optionsStore from '../../data/designer-options-store';\nimport {StudioInitializingContext} from \"../../models/studio\";\n\n@Component({\n  tag: 'elsa-studio',\n  styleUrl: 'studio.css',\n})\nexport class Studio {\n  private readonly eventBus: EventBus;\n  private readonly workflowDefinitionManager: WorkflowDefinitionManager;\n  private readonly pluginRegistry: PluginRegistry;\n\n  constructor() {\n    this.eventBus = Container.get(EventBus);\n    this.workflowDefinitionManager = Container.get(WorkflowDefinitionManager);\n    this.pluginRegistry = Container.get(PluginRegistry);\n  }\n\n  @Element() private el: HTMLElsaStudioElement;\n  @Prop({attribute: 'server'}) serverUrl: string;\n  @Prop({attribute: 'monaco-lib-path'}) monacoLibPath: string;\n  @Prop({attribute: 'enable-flexible-ports'}) enableFlexiblePorts: boolean;\n  @Prop({attribute: 'disable-auth'}) disableAuth: boolean;\n  @Event() initializing: EventEmitter<StudioInitializingContext>;\n\n  @Watch('serverUrl')\n  private handleServerUrl(value: string) {\n    const settings = Container.get(ServerSettings);\n    settings.baseAddress = value;\n  }\n\n  @Watch('monacoLibPath')\n  private handleMonacoLibPath(value: string) {\n    const settings = Container.get(MonacoEditorSettings);\n    settings.monacoLibPath = value;\n  }\n\n  async componentWillLoad() {\n    const pluginRegistry = Container.get(PluginRegistry);\n    const context: StudioInitializingContext = {container: Container, pluginRegistry};\n    this.initializing.emit(context);\n\n    this.handleMonacoLibPath(this.monacoLibPath);\n    this.handleServerUrl(this.serverUrl);\n    optionsStore.enableFlexiblePorts = this.enableFlexiblePorts;\n    await this.eventBus.emit(EventTypes.Studio.Initializing, this);\n    await this.pluginRegistry.initialize();\n\n    // If we have a valid session, emit the signed in event so that descriptors will be loaded.\n    const authContext = Container.get(AuthContext);\n\n    if (this.disableAuth || authContext.getIsSignedIn()) {\n      const eventBus = Container.get(EventBus);\n      await eventBus.emit(EventTypes.Auth.SignedIn)\n    }\n  }\n\n  render() {\n    return <Host>\n      <elsa-workflow-toolbar/>\n      <div class=\"elsa-studio-content\">\n        {studioComponentStore.activeComponentFactory()}\n      </div>\n      {studioComponentStore.modalComponents.map(modal => modal())}\n      <elsa-modal-dialog-container/>\n    </Host>;\n  }\n}\n","import { Component, Host, h } from '@stencil/core';\r\nimport notificationStore from \"./notification-store\";\r\n\r\n@Component({\r\n  tag: 'elsa-toast-manager',\r\n  shadow: false,\r\n})\r\n\r\nexport class ToastManager {\r\n\r\n  render() {\r\n    const {notifications} = notificationStore;\r\n    const notification = notifications.find(notification => notification.showToast !== false);\r\n\r\n    if (notification) {\r\n      return (\r\n          <elsa-toast-notification notification={notification}></elsa-toast-notification>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import {Component, h, State, Prop, Watch} from \"@stencil/core\";\r\nimport {NotificationType} from \"./models\";\r\nimport notificationStore from \"./notification-store\";\r\nimport NotificationService from \"./notification-service\";\r\n\r\n@Component({\r\n  tag: 'elsa-toast-notification',\r\n  shadow: false,\r\n  styleUrl: '',\r\n})\r\nexport class ToastNotification {\r\n  @Prop() public notification: NotificationType;\r\n  @Prop() public showDuration = 6000;\r\n  private timer;\r\n\r\n  componentDidRender() {\r\n    this.timer = setTimeout(() => {\r\n      this.hideToast();\r\n    }, this.showDuration);\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.hideToast();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.clearTimeout(this.timer);\r\n    this.hideToast();\r\n  }\r\n\r\n  hideToast = () => {\r\n    NotificationService.hideToast(this.notification);\r\n  }\r\n\r\n  render() {\r\n    const {infoPanelBoolean} = notificationStore;\r\n\r\n    return (\r\n      (this.notification.showToast !== false && !infoPanelBoolean) ? (\r\n        <div class=\"tw-mt-2 tw-pr-2 tw-flex tw-w-full tw-flex-col tw-items-center tw-space-y-4 sm:tw-items-end\">\r\n          <div\r\n            class=\"tw-pointer-events-auto tw-w-full tw-max-w-sm tw-rounded-lg tw-z-50 tw-bg-white tw-shadow-lg tw-ring-1 tw-ring-black tw-ring-opacity-5\">\r\n            <div class=\"tw-p-4 tw-z-30\">\r\n              <elsa-notification-template notification={this.notification}>\r\n                <siv slot=\"close-button\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={this.handleClick}\r\n                    class=\"tw-inline-flex tw-rounded-md tw-bg-white tw-text-gray-400 hover:tw-text-gray-500 focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-blue-500 focus:tw-ring-offset-2\">\r\n                    <span class=\"tw-sr-only\">Close</span>\r\n                    <svg class=\"tw-h-5 tw-w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"\r\n                         fill=\"currentColor\" aria-hidden=\"true\">\r\n                      <path\r\n                        d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\"/>\r\n                    </svg>\r\n                  </button>\r\n                </siv>\r\n              </elsa-notification-template>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null\r\n    );\r\n  }\r\n}\r\n","export const NotificationEventTypes = {\r\n  Add: 'notification-added',\r\n  Update: 'notification-updated',\r\n  Toggle: 'notification-toggle',\r\n};\r\n","import {Service} from \"typedi\";\r\nimport {ElsaClientProvider} from \"./elsa-client\";\r\nimport { PackageVersion } from \"../../models\";\r\n\r\n@Service()\r\nexport class PackagesApi {\r\n  private provider: ElsaClientProvider;\r\n\r\n  constructor(provider: ElsaClientProvider) {\r\n    this.provider = provider;\r\n  }\r\n\r\n  async getVersion(): Promise<PackageVersion> {\r\n    const httpClient = await this.getHttpClient();\r\n    const response = await httpClient.get<PackageVersion>(`package/version`);\r\n    return response.data;\r\n  }\r\n\r\n  private getHttpClient = async () => await this.provider.getHttpClient();\r\n}\r\n","import {Component, State, h, getAssetPath} from '@stencil/core';\r\nimport Container from 'typedi';\r\nimport {NotificationEventTypes} from '../../../modules/notifications/event-types';\r\nimport {EventBus} from '../../../services';\r\nimport toolbarComponentStore from \"../../../data/toolbar-component-store\";\r\nimport notificationService from '../../../modules/notifications/notification-service';\r\nimport notificationStore from \"../../../modules/notifications/notification-store\";\r\nimport {PackagesApi} from \"../../../services/api-client/packages-api\";\r\n\r\n@Component({\r\n  tag: 'elsa-workflow-toolbar',\r\n  assetsDirs: ['assets']\r\n})\r\nexport class WorkflowToolbar {\r\n  private readonly eventBus: EventBus;\r\n  private readonly packagesApi: PackagesApi;\r\n\r\n  private currentElsaVersion: string;\r\n\r\n  static NotificationService = notificationService;\r\n\r\n  constructor() {\r\n    this.eventBus = Container.get(EventBus);\r\n    this.packagesApi = Container.get(PackagesApi);\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    var response = await this.packagesApi.getVersion();\r\n    return this.currentElsaVersion = response.packageVersion;\r\n  }\r\n\r\n  onNotificationClick = async e => {\r\n    e.stopPropagation();\r\n    await this.eventBus.emit(NotificationEventTypes.Toggle, this);\r\n    WorkflowToolbar.NotificationService.toggleNotification();\r\n  };\r\n\r\n  render() {\r\n    const logoPath = getAssetPath('./assets/logo.png');\r\n    const infoPanelBoolean = notificationStore.infoPanelBoolean;\r\n\r\n    return (\r\n      <div>\r\n        <nav class=\"tw-bg-gray-800\">\r\n          <div class=\"tw-mx-auto tw-px-2 sm:tw-px-6 lg:tw-px-6\">\r\n\r\n            <div class=\"tw-flex tw-items-center tw-h-16\">\r\n              <div class=\"tw-flex-shrink-0\">\r\n                <div class=\"tw-flex tw-items-end tw-space-x-1\">\r\n                  <div>\r\n                    <a href=\"#\"><img class=\"tw-h-6 tw-w-6\" src={logoPath} alt=\"Workflow\"/></a>\r\n                  </div>\r\n                  <div>\r\n                    <span class=\"tw-text-gray-300 tw-text-sm\">{this.currentElsaVersion}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"tw-flex-grow\"></div>\r\n\r\n              <div class=\"tw-relative tw-flex tw-items-center tw-justify-end tw-h-16\">\r\n                <div class=\"tw-absolute tw-inset-y-0 tw-right-0 tw-flex tw-items-center tw-pr-2 sm:tw-static sm:tw-inset-auto sm:tw-ml-6 sm:tw-pr-0 tw-z-40\">\r\n                  <div class=\"tw-inset-y-0 tw-right-0 tw-flex tw-items-center tw-pr-2 sm:tw-static sm:tw-inset-auto sm:tw-ml-6 sm:tw-pr-0 tw-z-40\">\r\n                    {/* Notifications*/}\r\n                    <button\r\n                      onClick={e => this.onNotificationClick(e)}\r\n                      type=\"button\"\r\n                      class=\"tw-bg-gray-800 tw-p-1 tw-rounded-full tw-text-gray-400 hover:tw-text-white focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-offset-2 focus:tw-ring-offset-gray-800 focus:tw-ring-white tw-mr-4\"\r\n                    >\r\n                      <span class=\"tw-sr-only\">View notifications</span>\r\n                      <svg class=\"tw-h-6 tw-w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                        <path\r\n                          stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"\r\n                          stroke-width=\"2\"\r\n                          d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n\r\n                    {toolbarComponentStore.components.map(component => (\r\n                      <div class=\"tw-flex-shrink-0 tw-mr-4\">\r\n                        {component()}\r\n                      </div>\r\n                    ))}\r\n\r\n                    {/* Menu */}\r\n                    <elsa-workflow-toolbar-menu/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </nav>\r\n        <elsa-notifications-manager modalState={infoPanelBoolean}></elsa-notifications-manager>\r\n        <elsa-toast-manager></elsa-toast-manager>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {Component, Event, EventEmitter, Host, h, Listen, Prop, State} from '@stencil/core';\r\nimport {leave, toggle} from 'el-transition';\r\nimport {EventBus} from \"../../../services\";\r\nimport {Container} from \"typedi\";\r\nimport {ToolbarMenuItem} from \"./models\";\r\nimport toolbarButtonMenuItemStore from \"../../../data/toolbar-button-menu-item-store\";\r\nimport NotificationService from \"../../../modules/notifications/notification-service\";\r\n\r\n@Component({\r\n  tag: 'elsa-workflow-toolbar-menu',\r\n  shadow: false,\r\n})\r\nexport class WorkflowToolbarMenu {\r\n  private readonly eventBus: EventBus;\r\n  private menu: HTMLElement;\r\n  private element: HTMLElement;\r\n  private isMenuOpen = false;\r\n\r\n  constructor() {\r\n    this.eventBus = Container.get(EventBus);\r\n  }\r\n\r\n  private closeMenu = () => {\r\n    leave(this.menu);\r\n    this.isMenuOpen = false;\r\n  };\r\n\r\n  private toggleMenu = () => {\r\n    toggle(this.menu);\r\n    this.isMenuOpen = !this.isMenuOpen;\r\n    if (this.isMenuOpen) {\r\n      NotificationService.hideAllNotifications();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const menuItems: Array<ToolbarMenuItem> = toolbarButtonMenuItemStore.items;\r\n\r\n    return (\r\n      <Host class=\"tw-block\" ref={el => this.element = el}>\r\n        <div class=\"elsa-toolbar-menu-wrapper tw-relative\">\r\n          <div>\r\n            <button onClick={() => this.toggleMenu()}\r\n                    type=\"button\"\r\n                    class=\"tw-bg-gray-800 tw-flex tw-text-sm tw-rounded-full focus:tw-outline-none focus:tw-ring-1 focus:tw-ring-offset-1 focus:tw-ring-gray-600\"\r\n                    aria-expanded=\"false\" aria-haspopup=\"true\">\r\n              <span class=\"tw-sr-only\">Open user menu</span>\r\n              <svg class=\"tw-h-8 tw-w-8 tw-text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div ref={el => this.menu = el}\r\n               data-transition-enter=\"tw-transition tw-ease-out tw-duration-100\"\r\n               data-transition-enter-start=\"tw-transform tw-opacity-0 tw-scale-95\"\r\n               data-transition-enter-end=\"tw-transform tw-opacity-100 tw-scale-100\"\r\n               data-transition-leave=\"tw-transition tw-ease-in tw-duration-75\"\r\n               data-transition-leave-start=\"tw-transform tw-opacity-100 tw-scale-100\"\r\n               data-transition-leave-end=\"tw-transform tw-opacity-0 tw-scale-95\"\r\n               class=\"hidden tw-origin-top-right tw-absolute tw-right-0 tw-mt-2 tw-w-48 tw-rounded-md tw-shadow-lg tw-py-1 tw-bg-white tw-ring-1 tw-ring-black tw-ring-opacity-5 focus:tw-outline-none\"\r\n               role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu-button\" tabindex=\"-1\">\r\n            {menuItems.map(menuItem => <a onClick={e => this.onMenuItemClick(e, menuItem)} href=\"#\" role=\"menuitem\" tabindex=\"-1\">{menuItem.text}</a>)}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  @Listen('click', {target: 'window'})\r\n  private onWindowClicked(event: Event) {\r\n    const target = event.target as HTMLElement;\r\n\r\n    if (!this.element.contains(target))\r\n      this.closeMenu();\r\n  }\r\n\r\n  private onMenuItemClick = async (e: MouseEvent, menuItem: ToolbarMenuItem) => {\r\n    e.preventDefault();\r\n    await menuItem.onClick();\r\n    this.closeMenu();\r\n  };\r\n}\r\n"],"version":3}