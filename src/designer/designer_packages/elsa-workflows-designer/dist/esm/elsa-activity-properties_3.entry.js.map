{"file":"elsa-activity-properties.elsa-workflow-instance-properties.elsa-workflow-journal.entry.js","mappings":"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","names":["descriptorsStore","moment"],"sources":["./src/modules/workflow-instances/components/activity-properties.tsx","./src/modules/workflow-instances/models.ts","./src/modules/workflow-instances/components/properties.tsx","./src/modules/workflow-instances/components/journal.scss?tag=elsa-workflow-journal","./src/modules/workflow-instances/components/journal.tsx"],"sourcesContent":["import {Component, Element, h, Method, Prop, State, Watch} from '@stencil/core';\nimport {camelCase} from 'lodash';\nimport {\n  Activity,\n  ActivityDescriptor,\n  Lookup,\n  TabChangedArgs,\n  TabDefinition,\n  WorkflowExecutionLogRecord\n} from '../../../models';\nimport {InfoList} from \"../../../components/shared/forms/info-list\";\nimport descriptorsStore from \"../../../data/descriptors-store\";\nimport moment from 'moment';\nimport Container from 'typedi';\nimport { ActivityIconRegistry } from '../../../services';\nimport {ActivityIconSize} from \"../../../components/icons/activities\";\nimport { getLocaleComponentStrings } from '../../../utils/locale';\n\n@Component({\n  tag: 'elsa-activity-properties',\n})\nexport class ActivityProperties {\n  private slideOverPanel: HTMLElsaSlideOverPanelElement;\n  private readonly iconRegistry: ActivityIconRegistry;\n\n  constructor() {\n    this.iconRegistry = Container.get(ActivityIconRegistry);\n  }\n\n  @Prop({mutable: true}) public activity?: Activity;\n  @Prop() activityExecutionLog: WorkflowExecutionLogRecord;\n  @Prop() activityPropertyTabIndex?: number;\n  @State() private selectedTabIndex: number = 0;\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n  @Method()\n  async show(): Promise<void> {\n    await this.slideOverPanel.show();\n  }\n\n  @Method()\n  async hide(): Promise<void> {\n    await this.slideOverPanel.hide();\n  }\n\n  @Method()\n  async updateSelectedTab(tabIndex : number): Promise<void> {\n    this.selectedTabIndex = tabIndex;\n  }\n\n  @Watch('activity')\n\n\n  async componentWillLoad(): Promise<void> {\n    this.strings = await getLocaleComponentStrings(this.element);\n    console.log(this.strings);\n    if(this.activityPropertyTabIndex != null) {\n      this.selectedTabIndex = this.activityPropertyTabIndex;\n    }\n  }\n\n  render() {\n    const activity = this.activity;\n    const activityDescriptor = this.findActivityDescriptor();\n\n    const propertiesTab: TabDefinition = {\n      displayText: this.strings.propertiesTab,\n      content: () => this.renderPropertiesTab()\n    };\n\n    const commonTab: TabDefinition = {\n      displayText: this.strings.commonTab,\n      content: () => this.renderCommonTab()\n    };\n\n    const journalTab: TabDefinition = {\n      displayText: this.strings.journalTab,\n      content: () => this.renderJournalTab()\n    };\n\n    const tabs = !!activityDescriptor ? [propertiesTab, commonTab, journalTab] : [];\n    const mainTitle = activity.id;\n    const subTitle = activityDescriptor.displayName;\n\n    return (\n      <elsa-form-panel\n        mainTitle={mainTitle}\n        subTitle={subTitle}\n        tabs={tabs}\n        selectedTabIndex={this.selectedTabIndex}\n        onSelectedTabIndexChanged={e => this.onSelectedTabIndexChanged(e)}\n      />\n    );\n  }\n\n  private findActivityDescriptor = (): ActivityDescriptor => {\n    const activity = this.activity;\n\n    if(!activity) return null;\n\n    const descriptor = descriptorsStore.activityDescriptors.find(x => x.typeName == activity.type && x.version == activity.version);\n    return descriptor ?? descriptorsStore.activityDescriptors.sort((a, b) => b.version - a.version).find(x => x.typeName == this.activity.type);\n  };\n  private onSelectedTabIndexChanged = (e: CustomEvent<TabChangedArgs>) => this.selectedTabIndex = e.detail.selectedTabIndex\n\n  private renderPropertiesTab = () => {\n    const activity = this.activity;\n    const activityDescriptor = this.findActivityDescriptor();\n    const properties = activityDescriptor.inputs.filter(x => x.isBrowsable);\n    const activityId = activity.id;\n    const displayText: string = activity.metadata?.displayText ?? '';\n    const executionLogEntry = this.activityExecutionLog;\n    const activityState = executionLogEntry?.activityState ?? {};\n\n    const propertyDetails: Lookup<string> = {\n      [this.strings.propertiesTabActivityId]: activityId,\n      [this.strings.propertiesTabDisplayText]: displayText\n    };\n\n    for (const property of properties) {\n      const loggedPropName = property.name;\n      const propertyValue = activityState[loggedPropName];\n      const propertyValueText = (propertyValue !== null && typeof propertyValue === 'object') ? JSON.stringify(propertyValue) : (propertyValue != null ? propertyValue.toString() : '');\n      propertyDetails[property.displayName] = propertyValueText;\n    }\n\n    return <div>\n      <InfoList title={this.strings.propertiesTab} dictionary={propertyDetails}/>\n    </div>\n  };\n\n  private renderCommonTab = () => {\n    return <div>\n    </div>\n  };\n\n  private renderJournalTab = () => {\n    const log = this.activityExecutionLog;\n    if(log == null) return;\n\n    const exception = log.payload?.exception;\n    const statusColor = log.eventName == \"Completed\" ? \"tw-bg-blue-100\" : log.eventName == \"Faulted\" ? \"tw-bg-red-100\" : \"tw-bg-green-100\";\n    const icon = this.iconRegistry.getOrDefault(log.activityType)({size: ActivityIconSize.Small});\n    return (\n      <div class=\"tw-border-2 tw-cursor-pointer tw-p-4 tw-rounded\">\n        <div class=\"tw-relative tw-pb-10\">\n          <div class=\"tw-relative tw-flex tw-space-x-3\">\n            <div>\n              <span class={`tw-h-8 tw-w-8 tw-rounded tw-p-1 tw-bg-blue-500 tw-flex tw-items-center tw-justify-center tw-ring-8 tw-ring-white tw-mr-1`}>\n                {icon}\n              </span>\n            </div>\n            <div class=\"tw-min-w-0 tw-flex-1 tw-pt-1.5 tw-flex tw-justify-between tw-space-x-4\">\n              <div>\n                <h3 class=\"tw-text-lg tw-leading-6 tw-font-medium tw-text-gray-900\">\n                  {log.activityType}\n                </h3>\n              </div>\n              <div>\n                <span\n                  class={`tw-relative tw-inline-flex tw-items-center tw-rounded-full ${statusColor} tw-border tw-border-gray-300 tw-px-3 tw-py-0.5 tw-text-sm`}>\n                  <span class=\"tw-absolute tw-flex-shrink-0 tw-flex tw-items-center tw-justify-center\">\n                    <span class={`tw-h-1.5 tw-w-1.5 tw-rounded-full`} aria-hidden=\"true\"/>\n                  </span>\n                  <span class=\"tw-font-medium tw-text-gray-900\">{log.eventName}</span>\n                </span>\n              </div>\n              <div class=\"tw-text-right tw-text-sm tw-whitespace-nowrap tw-text-gray-500\">\n                <span>{moment(log.timestamp).format('DD-MM-YYYY HH:mm:ss')}</span>\n              </div>\n            </div>\n          </div>\n          <div class=\"tw-ml-12 tw-mt-2\">\n            <dl class=\"sm:tw-divide-y sm:tw-divide-gray-200\">\n              <div class=\"tw-grid tw-grid-cols-2 tw-gap-x-4 tw-gap-y-8 sm:tw-grid-cols-2\">\n                <div class=\"sm:tw-col-span-2\">\n                  <dt class=\"tw-text-sm tw-font-medium tw-text-gray-500\">\n                    <span>{this.strings.journalTabActivityId}</span>\n                    <copy-button value={log.activityId}/>\n                  </dt>\n                  <dd class=\"tw-mt-1 tw-text-sm tw-text-gray-900 tw-mb-2\">{log.activityId}</dd>\n                </div>\n                {!!exception ? (\n                  [<div class=\"sm:tw-col-span-2\">\n                    <dt class=\"tw-text-sm tw-font-medium tw-text-gray-500\">\n                      <span>{this.strings.journalTabException}</span>\n                      <copy-button value={exception.Type + '\\n' + exception.Message}/>\n                    </dt>\n                    <dd class=\"tw-mt-1 tw-text-sm tw-text-gray-900\">\n                      {exception.message}\n                    </dd>\n                  </div>,\n                    <div class=\"sm:tw-col-span-2\">\n                      <dt class=\"tw-text-sm tw-font-medium tw-text-gray-500\">\n                        <span>Exception Details</span>\n                        <copy-button value={JSON.stringify(exception, null, 1)}/>\n                      </dt>\n                      <dd class=\"tw-mt-1 tw-text-sm tw-text-gray-900 tw-overflow-x-auto\">\n                        <pre>{JSON.stringify(exception, null, 1)}</pre>\n                      </dd>\n                    </div>]\n                ) : undefined}\n              </div>\n            </dl>\n          </div>\n        </div>\n      </div>\n    )\n  };\n}\n","import {TabDefinition, WorkflowExecutionLogRecord, WorkflowInstance} from \"../../models\";\r\nimport moment from \"moment\";\r\nimport {WorkflowDefinition} from \"../workflow-definitions/models/entities\";\r\n\r\nexport const WorkflowInstanceViewerEventTypes = {\r\n  WorkflowDefinition: {\r\n    Imported: 'workflow-instance-viewer:workflow-instance:imported'\r\n  },\r\n  WorkflowInstanceViewer: {\r\n    Ready: 'workflow-instance-viewer:ready'\r\n  }\r\n}\r\n\r\nexport const WorkflowInstancePropertiesEventTypes = {\r\n  Displaying: 'workflow-instance-properties:displaying'\r\n}\r\n\r\nexport interface WorkflowInstancePropertiesDisplayingArgs {\r\n  model: WorkflowInstancePropertiesViewerModel;\r\n}\r\n\r\nexport interface TabModel {\r\n  name: string;\r\n  tab: TabDefinition;\r\n}\r\n\r\nexport interface Widget {\r\n  name: string;\r\n  content: () => any;\r\n  order?: number;\r\n}\r\n\r\nexport interface PropertiesTabModel extends TabModel {\r\n  Widgets: Array<Widget>;\r\n}\r\n\r\nexport interface WorkflowInstancePropertiesViewerModel {\r\n  tabModels: Array<TabModel>;\r\n}\r\n\r\nexport interface ActivityExecutionEventBlock {\r\n  nodeId: string;\r\n  activityId: string;\r\n  activityInstanceId: string;\r\n  parentActivityInstanceId: string;\r\n  completed: boolean;\r\n  suspended: boolean;\r\n  faulted: boolean;\r\n  timestamp: Date;\r\n  duration?: moment.Duration;\r\n  startedRecord: WorkflowExecutionLogRecord;\r\n  completedRecord?: WorkflowExecutionLogRecord;\r\n  faultedRecord?: WorkflowExecutionLogRecord;\r\n  suspendedRecord?: WorkflowExecutionLogRecord;\r\n  children: Array<ActivityExecutionEventBlock>;\r\n}\r\n\r\nexport interface WorkflowJournalModel {\r\n  workflowInstance: WorkflowInstance;\r\n  workflowDefinition: WorkflowDefinition;\r\n}\r\n","import {Component, Element, Event, EventEmitter, h, Method, Prop, State, Watch} from '@stencil/core';\nimport {TabChangedArgs, Variable, WorkflowInstance} from '../../../models';\nimport {InfoList} from \"../../../components/shared/forms/info-list\";\nimport {formatTimestamp, isNullOrWhitespace} from \"../../../utils\";\nimport {PropertiesTabModel, TabModel, WorkflowInstancePropertiesDisplayingArgs, WorkflowInstancePropertiesEventTypes, WorkflowInstancePropertiesViewerModel} from \"../models\";\nimport {Container} from \"typedi\";\nimport {EventBus} from \"../../../services\";\nimport {WorkflowDefinition} from \"../../workflow-definitions/models/entities\";\nimport { getLocaleComponentStrings } from '../../../utils/locale';\n\n@Component({\n  tag: 'elsa-workflow-instance-properties',\n})\nexport class WorkflowDefinitionPropertiesEditor {\n  private readonly eventBus: EventBus;\n  private slideOverPanel: HTMLElsaSlideOverPanelElement;\n\n  constructor() {\n    this.eventBus = Container.get(EventBus);\n\n    this.model = {\n      tabModels: [],\n    }\n  }\n\n  @Prop() workflowDefinition?: WorkflowDefinition;\n  @Prop() workflowInstance?: WorkflowInstance;\n  @State() private model: WorkflowInstancePropertiesViewerModel;\n  @State() private selectedTabIndex: number = 0;\n  @State() private changeHandle: object = {};\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n\n  @Method()\n  public async show(): Promise<void> {\n    await this.slideOverPanel.show();\n  }\n\n  @Method()\n  public async hide(): Promise<void> {\n    await this.slideOverPanel.hide();\n  }\n\n  @Watch('workflowDefinition')\n  async onWorkflowDefinitionChanged() {\n    await this.createModel();\n  }\n\n  @Watch('workflowInstance')\n  async onWorkflowInstanceChanged() {\n    await this.createModel();\n  }\n\n  async componentWillLoad() {\n    this.strings = await getLocaleComponentStrings(this.element);\n    await this.createModel();\n  }\n\n  public render() {\n    const workflowDefinition = this.workflowDefinition;\n    const title = !isNullOrWhitespace(workflowDefinition?.name) ? workflowDefinition.name : '-';\n    const subTitle = 'Workflow Instance';\n    const tabs = this.model.tabModels.map(x => x.tab);\n\n    return (\n      <elsa-form-panel\n        mainTitle={title}\n        subTitle={subTitle}\n        tabs={tabs}\n        selectedTabIndex={this.selectedTabIndex}\n        onSelectedTabIndexChanged={e => this.onSelectedTabIndexChanged(e)}/>\n    );\n  }\n\n  private createModel = async () => {\n    const model = {\n      tabModels: [],\n    };\n\n    const workflowDefinition = this.workflowDefinition;\n    const workflowInstance = this.workflowInstance;\n\n    if (!workflowDefinition || !workflowInstance) {\n      this.model = model;\n      return;\n    }\n\n    const propertiesTabModel: PropertiesTabModel = {\n      name: 'properties',\n      tab: null,\n      Widgets: [{\n        name: 'workflowInstanceInfo',\n        content: () => {\n\n          const identityDetails = {\n            [this.strings.propertiesTabInstanceId]: isNullOrWhitespace(workflowInstance.id) ? this.strings.propertiesNew : workflowInstance.id,\n            [this.strings.propertiesTabDefinitionId]: isNullOrWhitespace(workflowDefinition.definitionId) ? this.strings.propertiesNew : workflowDefinition.definitionId,\n            [this.strings.propertiesTabVersion]: workflowDefinition.version.toString(),\n          };\n\n          const statusDetails = {\n            [this.strings.propertiesTabStatus]: workflowInstance.status,\n            [this.strings.propertiesTabSubStatus]: workflowInstance.subStatus\n          };\n\n          const timestampDetails = {\n            [this.strings.propertiesTabCreated]: formatTimestamp(workflowInstance.createdAt),\n            [this.strings.propertiesTabLastExecution]: formatTimestamp(workflowInstance.updatedAt),\n            [this.strings.propertiesTabFinished]: formatTimestamp(workflowInstance.finishedAt),\n          };\n\n          return <div>\n            <InfoList title={this.strings.propertiesTab} dictionary={identityDetails}/>\n            <InfoList title={this.strings.propertiesTabStatus} dictionary={statusDetails}/>\n            <InfoList title={this.strings.propertiesTabTimeStamps} dictionary={timestampDetails} hideEmptyValues={true}/>\n          </div>;\n        },\n        order: 10\n      }]\n    };\n\n    propertiesTabModel.tab = {\n      displayText: this.strings.propertiesTab,\n      content: () => this.renderPropertiesTab(propertiesTabModel)\n    };\n\n    const variablesTabModel: TabModel = {\n      name: 'variables',\n      tab: {\n        displayText: this.strings.variablesTab,\n        content: () => this.renderVariablesTab()\n      }\n    }\n\n    model.tabModels = [propertiesTabModel, variablesTabModel];\n\n    const args: WorkflowInstancePropertiesDisplayingArgs = {model};\n\n    await this.eventBus.emit(WorkflowInstancePropertiesEventTypes.Displaying, this, args);\n\n    this.model = model;\n  }\n\n  private renderPropertiesTab = (tabModel: PropertiesTabModel) => {\n    const widgets = tabModel.Widgets.sort((a, b) => a.order < b.order ? -1 : a.order > b.order ? 1 : 0);\n\n    return <div>\n      {widgets.map(widget => widget.content())}\n    </div>\n  };\n\n  private renderVariablesTab = () => {\n    const variables: Array<Variable> = this.workflowDefinition?.variables ?? [];\n\n    return <div>\n      <elsa-variables-viewer variables={variables} workflowDefinition={this.workflowDefinition} workflowInstance={this.workflowInstance} />\n    </div>\n  };\n\n  private onSelectedTabIndexChanged = (e: CustomEvent<TabChangedArgs>) => this.selectedTabIndex = e.detail.selectedTabIndex;\n}\n","table.workflow-journal-table {\r\n  tbody tr td {\r\n    @apply tw-pl-3 tw-pr-0 tw-py-2;\r\n  }\r\n\r\n  tbody tr td:first-child {\r\n    @apply tw-pl-3 tw-pr-0 tw-py-2;\r\n  }\r\n}\r\n","import {Component, h, Prop, State, Watch, Event, EventEmitter, Method, Element} from \"@stencil/core\";\nimport {Activity, Workflow, WorkflowExecutionLogRecord, WorkflowInstance} from \"../../../models\";\nimport {Container} from \"typedi\";\nimport {ActivityIconRegistry, ActivityNode, flatten, walkActivities} from \"../../../services\";\nimport {durationToString, formatTime, getDuration, Hash, isNullOrWhitespace} from \"../../../utils\";\nimport {ActivityExecutionEventBlock, WorkflowJournalModel} from \"../models\";\nimport {ActivityIconSize} from \"../../../components/icons/activities\";\nimport {WorkflowInstancesApi} from \"../services/workflow-instances-api\";\nimport {JournalItemSelectedArgs} from \"../events\";\nimport { getLocaleComponentStrings } from \"../../../utils/locale\";\n\n// TODO: Implement dynamic loading of records.\nconst PAGE_SIZE: number = 10000;\n\n@Component({\n  tag: 'elsa-workflow-journal',\n  shadow: false,\n  styleUrl: 'journal.scss'\n})\nexport class Journal {\n  private readonly iconRegistry: ActivityIconRegistry;\n  private readonly workflowInstancesApi: WorkflowInstancesApi;\n\n  constructor() {\n    this.iconRegistry = Container.get(ActivityIconRegistry);\n    this.workflowInstancesApi = Container.get(WorkflowInstancesApi);\n  }\n\n  @Prop() model: WorkflowJournalModel;\n  @State() workflowExecutionLogRecords: Array<WorkflowExecutionLogRecord> = [];\n  @State() blocks: Array<ActivityExecutionEventBlock> = [];\n  @State() rootBlocks: Array<ActivityExecutionEventBlock> = [];\n  @State() expandedBlocks: Array<ActivityExecutionEventBlock> = [];\n  @State() journalActivityMap: Set<ActivityNode> = new Set<ActivityNode>();\n  @Event() journalItemSelected: EventEmitter<JournalItemSelectedArgs>;\n\n  @Watch('model')\n  async onWorkflowInstanceModelChanged(oldValue: WorkflowJournalModel, newValue: WorkflowJournalModel) {\n    if(oldValue.workflowInstance.id != newValue.workflowInstance.id)\n      await this.refresh();\n  }\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n  async componentWillLoad(): Promise<void> {\n    this.strings = await getLocaleComponentStrings(this.element);\n    await this.refresh();\n  }\n\n  @Method()\n  async refresh() {\n    this.rootBlocks = [];\n    await this.loadJournalPage(0);\n    this.createActivityMapForJournal();\n  }\n\n  render() {\n    return (\n\n      <div class=\"tw-absolute tw-inset-0 tw-overflow-hidden\">\n        <div class=\"tw-h-full tw-flex tw-flex-col tw-bg-white tw-shadow-xl\">\n          <div class=\"tw-flex tw-flex-col tw-flex-1\">\n\n            <div class=\"tw-px-4 tw-py-6 tw-bg-gray-50 sm:tw-px-6\">\n              <div class=\"tw-flex tw-items-start tw-justify-between tw-space-x-3\">\n                <div class=\"tw-space-y-1\">\n                  <h2 class=\"tw-text-lg tw-font-medium tw-text-gray-900\">\n                    {this.strings.worfklowJournal}\n                  </h2>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"tw-flex-1 tw-relative\">\n              <div class=\"tw-absolute tw-inset-0 tw-overflow-y-scroll\">\n\n                <table class=\"workflow-journal-table\">\n                  <thead>\n                  <tr>\n                    <th class=\"tw-w-1\"/>\n                    <th>{this.strings.time}</th>\n                    <th class=\"tw-min-w-full\">{this.strings.activity}</th>\n                    <th>{this.strings.status}</th>\n                    <th>{this.strings.duration}</th>\n                  </tr>\n                  </thead>\n\n                  <tbody class=\"tw-bg-white tw-divide-y tw-divide-gray-100\">\n                  {this.renderBlocks(this.rootBlocks)}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderBlocks = (blocks: Array<ActivityExecutionEventBlock>) => {\n    const journalActivityMap = this.journalActivityMap;\n    const iconRegistry = this.iconRegistry;\n    const expandedBlocks = this.expandedBlocks;\n    const sortedBlocks = this.sortByTimestamp(blocks);\n\n    return sortedBlocks.map((block) => {\n      const activityNode = journalActivityMap[block.nodeId];\n\n      if (activityNode == null)\n        debugger\n\n      const activity = activityNode.activity;\n\n      if (activity.type == \"Elsa.Workflow\" || activity.type == \"Elsa.Flowchart\")\n        return this.renderBlocks(block.children);\n\n      const activityMetadata = activity.metadata;\n      const activityDisplayText = isNullOrWhitespace(activityMetadata.displayText) ? activity.id : activityMetadata.displayText;\n      const duration = durationToString(block.duration);\n      const status = block.completed ? 'Completed' : block.suspended ? 'Suspended' : block.faulted ? 'Faulted' : 'Started';\n      const icon = iconRegistry.getOrDefault(activity.type)({size: ActivityIconSize.Small});\n      const expanded = !!expandedBlocks.find(x => x == block);\n      const statusColor = block.completed ? \"tw-bg-blue-100\" : block.faulted ? \"tw-bg-red-100\" : \"tw-bg-green-100\";\n\n      const toggleIcon = expanded\n        ? (\n          <svg class=\"tw-h-6 tw-w-6 tw-text-gray-500\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\n            <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"/>\n            <line x1=\"9\" y1=\"12\" x2=\"15\" y2=\"12\"/>\n          </svg>\n        )\n        : (\n          <svg class=\"tw-h-6 tw-w-6 tw-text-gray-500\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\n            <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\"/>\n            <line x1=\"9\" y1=\"12\" x2=\"15\" y2=\"12\"/>\n            <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"15\"/>\n          </svg>\n        );\n\n      return (\n        [<tr>\n          <td class=\"tw-w-1\">\n            {block.children.length > 0 ? (<a href=\"#\" onClick={e => this.onBlockClick(e, block)}>\n              {toggleIcon}\n            </a>) : undefined}\n          </td>\n          <td>\n            <a href=\"#\" onClick={e => this.onJournalItemClick(e, block, activity)}>{formatTime(block.timestamp)}</a>\n          </td>\n          <td class=\"tw-min-w-full\">\n            <div class=\"tw-flex tw-items-center tw-space-x-1\">\n              <div class=\"tw-flex-shrink\">\n                <div class=\"tw-bg-blue-500 tw-rounded tw-p-1\">\n                  <a href=\"#\" onClick={e => this.onJournalItemClick(e, block, activity)}>{icon}</a>\n                </div>\n              </div>\n              <div><a href=\"#\" onClick={e => this.onJournalItemClick(e, block, activity)}>{activityDisplayText}</a></div>\n            </div>\n          </td>\n          <td>\n            <a href=\"#\" onClick={e => this.onJournalItemClick(e, block, activity)} class={`tw-inline-flex tw-rounded-full ${statusColor} tw-px-2 tw-text-xs tw-font-semibold tw-leading-5 tw-text-green-800`}>{status}</a>\n          </td>\n          <td><a href=\"#\" onClick={e => this.onJournalItemClick(e, block, activity)}>{duration}</a></td>\n        </tr>, expanded ? this.renderBlocks(block.children) : undefined]\n      );\n    }).filter(x => !!x);\n  }\n\n  private loadJournalPage = async (page: number): Promise<void> => {\n    if (!this.model)\n      return;\n\n    const workflowInstance = this.model.workflowInstance;\n    const workflowInstanceId = workflowInstance.id;\n    const pageOfRecords = await this.workflowInstancesApi.getJournal({page, pageSize: PAGE_SIZE, workflowInstanceId: workflowInstanceId});\n    const blocks = this.createBlocks(pageOfRecords.items);\n    const rootBlocks = blocks.filter(x => !x.parentActivityInstanceId);\n    this.workflowExecutionLogRecords = [...this.workflowExecutionLogRecords, ...pageOfRecords.items];\n    this.rootBlocks = rootBlocks;\n    this.blocks = this.sortByTimestamp(blocks);\n  }\n\n  private createBlocks = (records: Array<WorkflowExecutionLogRecord>): Array<ActivityExecutionEventBlock> => {\n    const startedEvents = records.filter(x => x.eventName == 'Started');\n    const completedEvents = records.filter(x => x.eventName == 'Completed');\n    const faultedEvents = records.filter(x => x.eventName == 'Faulted');\n    const suspendedEvents = records.filter(x => x.eventName == 'Suspended');\n\n    const blocks = startedEvents.map(startedRecord => {\n      const completedRecord = completedEvents.find(x => x.activityInstanceId == startedRecord.activityInstanceId);\n      const faultedRecord = faultedEvents.find(x => x.activityInstanceId == startedRecord.activityInstanceId);\n      const suspendedRecord = suspendedEvents.find(x => x.activityInstanceId == startedRecord.activityInstanceId);\n      const duration = !!completedRecord ? getDuration(completedRecord.timestamp, startedRecord.timestamp) : null;\n\n      return {\n        nodeId: startedRecord.nodeId,\n        activityId: startedRecord.activityId,\n        activityInstanceId: startedRecord.activityInstanceId,\n        parentActivityInstanceId: startedRecord.parentActivityInstanceId,\n        completed: !!completedRecord,\n        faulted: !!faultedRecord,\n        suspended: !!suspendedRecord,\n        timestamp: startedRecord.timestamp,\n        duration: duration,\n        startedRecord: startedRecord,\n        completedRecord: completedRecord,\n        faultedRecord: faultedRecord,\n        suspendedRecord: suspendedRecord,\n        children: []\n      };\n    });\n\n    for (const block of blocks)\n      block.children = this.findChildBlocks(blocks, block.activityInstanceId);\n\n    return blocks;\n  };\n\n  private findChildBlocks = (blocks: Array<ActivityExecutionEventBlock>, parentActivityInstanceId?: string): Array<ActivityExecutionEventBlock> => {\n    if (blocks.length == 0)\n      return [];\n\n    return !!parentActivityInstanceId\n      ? blocks.filter(x => x.parentActivityInstanceId == parentActivityInstanceId)\n      : blocks.filter(x => !x.parentActivityInstanceId);\n  }\n\n  private onBlockClick = (e: MouseEvent, block: ActivityExecutionEventBlock) => {\n    e.preventDefault();\n\n    const existingBlock = this.expandedBlocks.find(x => x == block);\n    this.expandedBlocks = existingBlock ? this.expandedBlocks.filter(x => x != existingBlock) : [...this.expandedBlocks, block];\n  };\n\n  private onJournalItemClick = async (e: MouseEvent, block: ActivityExecutionEventBlock, activity: Activity) => {\n    e.preventDefault();\n    this.journalItemSelected.emit({activity: activity, executionEventBlock: block, activityNode: this.journalActivityMap[block.nodeId]});\n  };\n\n  private sortByTimestamp(blocks: ActivityExecutionEventBlock[]) {\n    return blocks.sort(function (x, y) {\n      if (x.timestamp > y.timestamp)\n        return 1;\n      return -1;\n    });\n  }\n\n  private createActivityMapForJournal() {\n    const workflowDefinition = this.model.workflowDefinition;\n\n    // Create dummy root workflow to match structure of workflow execution log entries in order to generate the right node IDs.\n    const workflow: Workflow = {\n      type: 'Elsa.Workflow',\n      version: workflowDefinition.version,\n      id: \"Workflow1\",\n      root: workflowDefinition.root,\n      variables: workflowDefinition.variables,\n      metadata: {},\n      customProperties: {}\n    }\n\n    const graph = walkActivities(workflow);\n    const nodes = flatten(graph);\n    const map = new Set<ActivityNode>();\n\n    for (const node of nodes)\n      map[node.nodeId] = node;\n\n    this.journalActivityMap = map;\n    this.blocks = this.blocks.filter(x => !!map[x.nodeId]);\n  }\n}\n"],"version":3}