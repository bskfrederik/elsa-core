{"file":"properties2.js","mappings":"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","names":[],"sources":["./src/modules/workflow-instances/models.ts","./src/modules/workflow-instances/components/properties.tsx"],"sourcesContent":["import {TabDefinition, WorkflowExecutionLogRecord, WorkflowInstance} from \"../../models\";\r\nimport moment from \"moment\";\r\nimport {WorkflowDefinition} from \"../workflow-definitions/models/entities\";\r\n\r\nexport const WorkflowInstanceViewerEventTypes = {\r\n  WorkflowDefinition: {\r\n    Imported: 'workflow-instance-viewer:workflow-instance:imported'\r\n  },\r\n  WorkflowInstanceViewer: {\r\n    Ready: 'workflow-instance-viewer:ready'\r\n  }\r\n}\r\n\r\nexport const WorkflowInstancePropertiesEventTypes = {\r\n  Displaying: 'workflow-instance-properties:displaying'\r\n}\r\n\r\nexport interface WorkflowInstancePropertiesDisplayingArgs {\r\n  model: WorkflowInstancePropertiesViewerModel;\r\n}\r\n\r\nexport interface TabModel {\r\n  name: string;\r\n  tab: TabDefinition;\r\n}\r\n\r\nexport interface Widget {\r\n  name: string;\r\n  content: () => any;\r\n  order?: number;\r\n}\r\n\r\nexport interface PropertiesTabModel extends TabModel {\r\n  Widgets: Array<Widget>;\r\n}\r\n\r\nexport interface WorkflowInstancePropertiesViewerModel {\r\n  tabModels: Array<TabModel>;\r\n}\r\n\r\nexport interface ActivityExecutionEventBlock {\r\n  nodeId: string;\r\n  activityId: string;\r\n  activityInstanceId: string;\r\n  parentActivityInstanceId: string;\r\n  completed: boolean;\r\n  suspended: boolean;\r\n  faulted: boolean;\r\n  timestamp: Date;\r\n  duration?: moment.Duration;\r\n  startedRecord: WorkflowExecutionLogRecord;\r\n  completedRecord?: WorkflowExecutionLogRecord;\r\n  faultedRecord?: WorkflowExecutionLogRecord;\r\n  suspendedRecord?: WorkflowExecutionLogRecord;\r\n  children: Array<ActivityExecutionEventBlock>;\r\n}\r\n\r\nexport interface WorkflowJournalModel {\r\n  workflowInstance: WorkflowInstance;\r\n  workflowDefinition: WorkflowDefinition;\r\n}\r\n","import {Component, Element, Event, EventEmitter, h, Method, Prop, State, Watch} from '@stencil/core';\nimport {TabChangedArgs, Variable, WorkflowInstance} from '../../../models';\nimport {InfoList} from \"../../../components/shared/forms/info-list\";\nimport {formatTimestamp, isNullOrWhitespace} from \"../../../utils\";\nimport {PropertiesTabModel, TabModel, WorkflowInstancePropertiesDisplayingArgs, WorkflowInstancePropertiesEventTypes, WorkflowInstancePropertiesViewerModel} from \"../models\";\nimport {Container} from \"typedi\";\nimport {EventBus} from \"../../../services\";\nimport {WorkflowDefinition} from \"../../workflow-definitions/models/entities\";\nimport { getLocaleComponentStrings } from '../../../utils/locale';\n\n@Component({\n  tag: 'elsa-workflow-instance-properties',\n})\nexport class WorkflowDefinitionPropertiesEditor {\n  private readonly eventBus: EventBus;\n  private slideOverPanel: HTMLElsaSlideOverPanelElement;\n\n  constructor() {\n    this.eventBus = Container.get(EventBus);\n\n    this.model = {\n      tabModels: [],\n    }\n  }\n\n  @Prop() workflowDefinition?: WorkflowDefinition;\n  @Prop() workflowInstance?: WorkflowInstance;\n  @State() private model: WorkflowInstancePropertiesViewerModel;\n  @State() private selectedTabIndex: number = 0;\n  @State() private changeHandle: object = {};\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n\n  @Method()\n  public async show(): Promise<void> {\n    await this.slideOverPanel.show();\n  }\n\n  @Method()\n  public async hide(): Promise<void> {\n    await this.slideOverPanel.hide();\n  }\n\n  @Watch('workflowDefinition')\n  async onWorkflowDefinitionChanged() {\n    await this.createModel();\n  }\n\n  @Watch('workflowInstance')\n  async onWorkflowInstanceChanged() {\n    await this.createModel();\n  }\n\n  async componentWillLoad() {\n    this.strings = await getLocaleComponentStrings(this.element);\n    await this.createModel();\n  }\n\n  public render() {\n    const workflowDefinition = this.workflowDefinition;\n    const title = !isNullOrWhitespace(workflowDefinition?.name) ? workflowDefinition.name : '-';\n    const subTitle = 'Workflow Instance';\n    const tabs = this.model.tabModels.map(x => x.tab);\n\n    return (\n      <elsa-form-panel\n        mainTitle={title}\n        subTitle={subTitle}\n        tabs={tabs}\n        selectedTabIndex={this.selectedTabIndex}\n        onSelectedTabIndexChanged={e => this.onSelectedTabIndexChanged(e)}/>\n    );\n  }\n\n  private createModel = async () => {\n    const model = {\n      tabModels: [],\n    };\n\n    const workflowDefinition = this.workflowDefinition;\n    const workflowInstance = this.workflowInstance;\n\n    if (!workflowDefinition || !workflowInstance) {\n      this.model = model;\n      return;\n    }\n\n    const propertiesTabModel: PropertiesTabModel = {\n      name: 'properties',\n      tab: null,\n      Widgets: [{\n        name: 'workflowInstanceInfo',\n        content: () => {\n\n          const identityDetails = {\n            [this.strings.propertiesTabInstanceId]: isNullOrWhitespace(workflowInstance.id) ? this.strings.propertiesNew : workflowInstance.id,\n            [this.strings.propertiesTabDefinitionId]: isNullOrWhitespace(workflowDefinition.definitionId) ? this.strings.propertiesNew : workflowDefinition.definitionId,\n            [this.strings.propertiesTabVersion]: workflowDefinition.version.toString(),\n          };\n\n          const statusDetails = {\n            [this.strings.propertiesTabStatus]: workflowInstance.status,\n            [this.strings.propertiesTabSubStatus]: workflowInstance.subStatus\n          };\n\n          const timestampDetails = {\n            [this.strings.propertiesTabCreated]: formatTimestamp(workflowInstance.createdAt),\n            [this.strings.propertiesTabLastExecution]: formatTimestamp(workflowInstance.updatedAt),\n            [this.strings.propertiesTabFinished]: formatTimestamp(workflowInstance.finishedAt),\n          };\n\n          return <div>\n            <InfoList title={this.strings.propertiesTab} dictionary={identityDetails}/>\n            <InfoList title={this.strings.propertiesTabStatus} dictionary={statusDetails}/>\n            <InfoList title={this.strings.propertiesTabTimeStamps} dictionary={timestampDetails} hideEmptyValues={true}/>\n          </div>;\n        },\n        order: 10\n      }]\n    };\n\n    propertiesTabModel.tab = {\n      displayText: this.strings.propertiesTab,\n      content: () => this.renderPropertiesTab(propertiesTabModel)\n    };\n\n    const variablesTabModel: TabModel = {\n      name: 'variables',\n      tab: {\n        displayText: this.strings.variablesTab,\n        content: () => this.renderVariablesTab()\n      }\n    }\n\n    model.tabModels = [propertiesTabModel, variablesTabModel];\n\n    const args: WorkflowInstancePropertiesDisplayingArgs = {model};\n\n    await this.eventBus.emit(WorkflowInstancePropertiesEventTypes.Displaying, this, args);\n\n    this.model = model;\n  }\n\n  private renderPropertiesTab = (tabModel: PropertiesTabModel) => {\n    const widgets = tabModel.Widgets.sort((a, b) => a.order < b.order ? -1 : a.order > b.order ? 1 : 0);\n\n    return <div>\n      {widgets.map(widget => widget.content())}\n    </div>\n  };\n\n  private renderVariablesTab = () => {\n    const variables: Array<Variable> = this.workflowDefinition?.variables ?? [];\n\n    return <div>\n      <elsa-variables-viewer variables={variables} workflowDefinition={this.workflowDefinition} workflowInstance={this.workflowInstance} />\n    </div>\n  };\n\n  private onSelectedTabIndexChanged = (e: CustomEvent<TabChangedArgs>) => this.selectedTabIndex = e.detail.selectedTabIndex;\n}\n"],"version":3}