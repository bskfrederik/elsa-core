{"file":"tooltip.js","mappings":"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","names":[],"sources":["./src/components/shared/tooltip/tooltip.scss?tag=elsa-tooltip","./src/components/shared/tooltip/tooltip.tsx"],"sourcesContent":[".tooltip-container {\r\n    .tooltip {\r\n        visibility: hidden;\r\n    }\r\n    &:hover {\r\n        .tooltip {\r\n            visibility: visible;\r\n        }\r\n    }\r\n}\r\n","import { Component, h, Prop, Element, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'elsa-tooltip',\r\n  styleUrl: 'tooltip.scss',\r\n})\r\nexport class Tooltip {\r\n  @Prop() tooltipContent: any;\r\n  /** Specifying `auto` will default to `bottom`, but will reposition to `top` if the tooltip height runs offscreen  */\r\n  @Prop() tooltipPosition?: 'right' | 'left' | 'top' | 'bottom' | 'auto' = 'right';\r\n  @State() triangleClass: string = '';\r\n  @Element() private element: HTMLElement;\r\n\r\n  private getTooltipPositionClasses = (tooltipPosition: 'right' | 'left' | 'top' | 'bottom') => {\r\n    const triangleClasses = {\r\n      right: 'tw-left-0 -tw-ml-2 tw-bottom-0 tw-top-0 tw-h-full',\r\n      left: 'tw-right-0 -tw-mr-2 tw-bottom-0 tw-top-0 tw-h-full tw-rotate-180',\r\n      top: 'tw-left-1/2 -tw-mt-1 tw-top-full -tw-translate-x-1/2 -tw-rotate-90',\r\n      bottom: 'tw-left-1/2 -tw-mb-1 tw-bottom-full -tw-translate-x-1/2 tw-rotate-90',\r\n    };\r\n\r\n    this.triangleClass = triangleClasses[tooltipPosition];\r\n  };\r\n\r\n  private onMouseOver = () => {\r\n    const rootNode: HTMLElement = this.element.querySelector('.tooltip-container');\r\n    const tooltip: HTMLElement = this.element.querySelector('.tooltip');\r\n\r\n    if(!tooltip)\r\n      return;\r\n\r\n    const rect = rootNode.getBoundingClientRect();\r\n    const tooltipRect = tooltip.getBoundingClientRect();\r\n\r\n    let left = '0px';\r\n    let top = '0px';\r\n    let caretPaddingPx = 16;\r\n    let tooltipPosition = this.tooltipPosition!;\r\n\r\n    if (tooltipPosition === 'auto') {\r\n      // Calculate what the Y would be for bottom\r\n      const y = rect.y + rect.height + caretPaddingPx + tooltipRect.height;\r\n\r\n      if (this.isOutOfBounds(y)) {\r\n        // Use Top positioning\r\n        tooltipPosition = 'top';\r\n      } else {\r\n        // Use Bottom positioning\r\n        tooltipPosition = 'bottom';\r\n      }\r\n    }\r\n\r\n    switch (tooltipPosition) {\r\n      case 'right':\r\n        left = `${rect.x + rect.width + caretPaddingPx}px`;\r\n        top = `${(rect.height - tooltipRect.height) / 2 + rect.top}px`;\r\n        this.getTooltipPositionClasses('right');\r\n        break;\r\n      case 'left':\r\n        left = `${rect.left - tooltipRect.width - caretPaddingPx}px`;\r\n        top = `${(rect.height - tooltipRect.height) / 2 + rect.top}px`;\r\n        this.getTooltipPositionClasses('left');\r\n        break;\r\n      case 'top':\r\n        left = `${(rect.width - tooltipRect.width) / 2 + rect.left}px`;\r\n        top = `${rect.y - tooltipRect.height - caretPaddingPx}px`;\r\n        this.getTooltipPositionClasses('top');\r\n        break;\r\n      case 'bottom':\r\n        left = `${(rect.width - tooltipRect.width) / 2 + rect.left}px`;\r\n        top = `${rect.y + rect.height + caretPaddingPx}px`;\r\n        this.getTooltipPositionClasses('bottom');\r\n        break;\r\n    }\r\n\r\n    tooltip.style.left = left;\r\n    tooltip.style.top = top;\r\n  };\r\n  private isOutOfBounds = (y: number) => {\r\n    const viewportHeight = window.innerHeight;\r\n\r\n    // If any part of the tooltip is out of the viewport,\r\n    // rather than entirely out of the viewport\r\n    return y > viewportHeight;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div onMouseOver={() => this.onMouseOver()} class=\"tooltip-container tw-relative tw-w-full\">\r\n        <slot />\r\n        {this.tooltipContent && (\r\n          <div role=\"tooltip\" class={`tooltip tw-z-20 tw-w-48 tw-fixed tw-transition tw-duration-150 tw-ease-in-out tw-shadow-lg tw-bg-gray-800 tw-text-white tw-p-4 tw-rounded`}>\r\n            <svg class={`tw-absolute ${this.triangleClass}`} width=\"9px\" height=\"16px\" viewBox=\"0 0 9 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n                <g id=\"Tooltips-\" tw-transform=\"translate(-874.000000, -1029.000000)\" fill=\"#111827\">\r\n                  <g tw-transform=\"translate(850.000000, 975.000000)\">\r\n                    <g tw-transform=\"translate(24.000000, 0.000000)\">\r\n                      <polygon tw-transform=\"translate(4.500000, 62.000000) rotate(-90.000000) translate(-4.500000, -62.000000) \" points=\"4.5 57.5 12.5 66.5 -3.5 66.5\" />\r\n                    </g>\r\n                  </g>\r\n                </g>\r\n              </g>\r\n            </svg>\r\n            <p class=\"tw-text-white tw-text-sm\"> {this.tooltipContent}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}