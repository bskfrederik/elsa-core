{"file":"modal-type.js","mappings":"IA0BY;AAAZ,WAAY,eAAe;EACzB,yDAAM,CAAA;EACN,yDAAM,CAAA;EACN,yDAAM,CAAA;AACR,CAAC,EAJW,eAAe,KAAf,eAAe,QAI1B;MASY,mBAAmB;;AAEhB,0BAAM,GAAG,CAAC,OAA8C,MAA6B;EACjG,IAAI,EAAE,QAAQ;EACd,IAAI,EAAE,QAAQ;EACd,IAAI,EAAE,eAAe,CAAC,MAAM;EAC5B,OAAO,EAAE,OAAO;CACjB,CAAC,CAAC;AAEW,yBAAK,GAAG,CAAC,OAA8C,MAA6B;EAChG,IAAI,EAAE,OAAO;EACb,IAAI,EAAE,OAAO;EACb,IAAI,EAAE,eAAe,CAAC,MAAM;EAC5B,OAAO,EAAE,OAAO;CACjB,CAAC,CAAC;AAEW,wBAAI,GAAG,CAAC,OAA8C,MAA6B;EAC/F,IAAI,EAAE,MAAM;EACZ,IAAI,EAAE,MAAM;EACZ,IAAI,EAAE,eAAe,CAAC,MAAM;EAC5B,SAAS,EAAE,IAAI;EACf,OAAO,EAAE,OAAO;CACjB,CAAC,CAAC;AAEW,0BAAM,GAAG,CAAC,OAA8C,MAA6B;EACjG,IAAI,EAAE,QAAQ;EACd,IAAI,EAAE,QAAQ;EACd,IAAI,EAAE,eAAe,CAAC,MAAM;EAC5B,WAAW,EAAE,IAAI;EACjB,OAAO,EAAE,OAAO;CACjB,CAAC,CAAC;AAEW,2BAAO,GAAG,CAAC,OAA8C,MAA6B;EAClG,IAAI,EAAE,SAAS;EACf,IAAI,EAAE,SAAS;EACf,IAAI,EAAE,eAAe,CAAC,MAAM;EAC5B,WAAW,EAAE,IAAI;EACjB,OAAO,EAAE,OAAO;CACjB,CAAC,CAAC;AAEW,6BAAS,GAAG,CAAC,OAA8C,MAA6B;EACpG,IAAI,EAAE,WAAW;EACjB,IAAI,EAAE,WAAW;EACjB,IAAI,EAAE,eAAe,CAAC,MAAM;EAC5B,WAAW,EAAE,IAAI;EACjB,OAAO,EAAE,OAAO;CACjB,CAAC,CAAC;AAEW,uBAAG,GAAG,CAAC,OAA8C,MAA6B;EAC9F,IAAI,EAAE,KAAK;EACX,IAAI,EAAE,KAAK;EACX,IAAI,EAAE,eAAe,CAAC,MAAM;EAC5B,SAAS,EAAE,IAAI;EACf,OAAO,EAAE,OAAO;CACjB,CAAC,CAAC;AAEW,uBAAG,GAAG,CAAC,OAA8C,MAA6B;EAC9F,IAAI,EAAE,KAAK;EACX,IAAI,EAAE,KAAK;EACX,IAAI,EAAE,eAAe,CAAC,MAAM;EAC5B,WAAW,EAAE,IAAI;EACjB,OAAO,EAAE,OAAO;CACjB,CAAC;;ICrGQ;AAAZ,WAAY,SAAS;EACjB,+CAAO,CAAA;EACP,yDAAY,CAAA;AAChB,CAAC,EAHW,SAAS,KAAT,SAAS;;;;","names":[],"sources":["./src/components/shared/modal-dialog/models.ts","./src/components/shared/modal-dialog/modal-type.ts"],"sourcesContent":["import {ModalType} from \"./modal-type\";\r\n\r\nexport interface ModalDialogInstance {\r\n  content: () => any;\r\n  options?: ShowModalDialogOptions;\r\n  modalDialogRef?: HTMLElement;\r\n  modalDialogContentRef?: HTMLElement;\r\n  actionInvoked?: (args: ModalActionClickArgs) => void;\r\n}\r\n\r\nexport interface ModalActionClickArgs {\r\n  e: Event;\r\n  action: ModalActionDefinition;\r\n  instance: ModalDialogInstance\r\n}\r\n\r\nexport interface ModalActionDefinition {\r\n  text: string;\r\n  name?: string;\r\n  isPrimary?: boolean;\r\n  isDangerous?: boolean;\r\n  type?: ModalActionType;\r\n  onClick?: (args: ModalActionClickArgs) => void;\r\n  display?: (button: ModalActionDefinition) => any;\r\n}\r\n\r\nexport enum ModalActionType {\r\n  Button,\r\n  Submit,\r\n  Cancel\r\n}\r\n\r\nexport interface ShowModalDialogOptions {\r\n  actions?: Array<ModalActionDefinition>;\r\n  modalType?: ModalType;\r\n  autoHide?: boolean;\r\n  size?: string;\r\n}\r\n\r\nexport class DefaultModalActions {\r\n\r\n  public static Cancel = (handler?: (args: ModalActionClickArgs) => void): ModalActionDefinition => ({\r\n    text: 'Cancel',\r\n    name: 'Cancel',\r\n    type: ModalActionType.Cancel,\r\n    onClick: handler\r\n  });\r\n\r\n  public static Close = (handler?: (args: ModalActionClickArgs) => void): ModalActionDefinition => ({\r\n    text: 'Close',\r\n    name: 'Close',\r\n    type: ModalActionType.Cancel,\r\n    onClick: handler\r\n  });\r\n\r\n  public static Save = (handler?: (args: ModalActionClickArgs) => void): ModalActionDefinition => ({\r\n    text: 'Save',\r\n    name: 'Save',\r\n    type: ModalActionType.Submit,\r\n    isPrimary: true,\r\n    onClick: handler\r\n  });\r\n\r\n  public static Delete = (handler?: (args: ModalActionClickArgs) => void): ModalActionDefinition => ({\r\n    text: 'Delete',\r\n    name: 'Delete',\r\n    type: ModalActionType.Button,\r\n    isDangerous: true,\r\n    onClick: handler\r\n  });\r\n\r\n  public static Publish = (handler?: (args: ModalActionClickArgs) => void): ModalActionDefinition => ({\r\n    text: 'Publish',\r\n    name: 'Publish',\r\n    type: ModalActionType.Button,\r\n    isDangerous: true,\r\n    onClick: handler\r\n  });\r\n\r\n  public static Unpublish = (handler?: (args: ModalActionClickArgs) => void): ModalActionDefinition => ({\r\n    text: 'Unpublish',\r\n    name: 'Unpublish',\r\n    type: ModalActionType.Button,\r\n    isDangerous: true,\r\n    onClick: handler\r\n  });\r\n\r\n  public static New = (handler?: (args: ModalActionClickArgs) => void): ModalActionDefinition => ({\r\n    text: 'New',\r\n    name: 'New',\r\n    type: ModalActionType.Button,\r\n    isPrimary: true,\r\n    onClick: handler\r\n  });\r\n\r\n  public static Yes = (handler?: (args: ModalActionClickArgs) => void): ModalActionDefinition => ({\r\n    text: 'Yes',\r\n    name: 'Yes',\r\n    type: ModalActionType.Button,\r\n    isDangerous: true,\r\n    onClick: handler\r\n  });\r\n}\r\n","export enum ModalType {\r\n    Default,\r\n    Confirmation\r\n}"],"version":3}