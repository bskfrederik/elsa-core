{"file":"select-list-items.js","mappings":";;;;AAQA,eAAe,iBAAiB,CAAC,OAA0C;EACzE,MAAM,kBAAkB,GAAG,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;EAC7D,MAAM,UAAU,GAAG,MAAM,kBAAkB,CAAC,aAAa,EAAE,CAAC;EAC5D,OAAO,MAAM,UAAU,CAAC,QAAQ,CAAC,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,6BAA6B,EAAE,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;AAC1H,CAAC;AAEM,eAAe,kBAAkB,CAAC,kBAAmC;EAC1E,MAAM,OAAO,GAAQ,kBAAkB,CAAC,OAAO,CAAC;EAChD,IAAI,UAAsB,CAAC;EAE3B,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,6BAA6B;IACpD,UAAU,GAAG,MAAM,iBAAiB,CAAC,OAAO,CAAC,CAAC;OAC3C,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC;IAC7B,UAAU,GAAG;MACX,KAAK,EAAE,OAAO;MACd,WAAW,EAAE,KAAK;KACnB,CAAC;;IAEF,UAAU,GAAG,OAAqB,CAAC;EAErC,OAAO,UAAU,IAAI,EAAC,KAAK,EAAE,EAAE,EAAE,WAAW,EAAE,KAAK,EAAC,CAAC;AACvD;;;;","names":[],"sources":["./src/utils/select-list-items.ts"],"sourcesContent":["import {\r\n  InputDescriptor,\r\n  RuntimeSelectListProviderSettings,\r\n  SelectList,\r\n} from \"../models\";\r\nimport {Container} from \"typedi\";\r\nimport {ElsaClientProvider} from \"../services\";\r\n\r\nasync function fetchRuntimeItems(options: RuntimeSelectListProviderSettings): Promise<SelectList> {\r\n  const elsaClientProvider = Container.get(ElsaClientProvider);\r\n  const elsaClient = await elsaClientProvider.getElsaClient();\r\n  return await elsaClient.designer.runtimeSelectListApi.get(options.runtimeSelectListProviderType, options.context || {});\r\n}\r\n\r\nexport async function getSelectListItems(propertyDescriptor: InputDescriptor): Promise<SelectList> {\r\n  const options: any = propertyDescriptor.options;\r\n  let selectList: SelectList;\r\n\r\n  if (!!options && options.runtimeSelectListProviderType)\r\n    selectList = await fetchRuntimeItems(options);\r\n  else if (Array.isArray(options))\r\n    selectList = {\r\n      items: options,\r\n      isFlagsEnum: false\r\n    };\r\n  else\r\n    selectList = options as SelectList;\r\n\r\n  return selectList || {items: [], isFlagsEnum: false};\r\n}\r\n"],"version":3}