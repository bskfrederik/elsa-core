{"file":"toolbar.js","mappings":";;;MAQa,OAAO;;;;;;;EAOlB,MAAM;IAEJ,MAAM,aAAa,GAA8B,CAAC;QAChD,IAAI,EAAE,cAAc;QACpB,OAAO,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;OAC1C,EAAC;QACA,IAAI,EAAE,YAAY;QAClB,OAAO,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;OAC1C,CAAC,CAAC;IAEH,QACE,WAAK,KAAK,EAAC,sKAAsK,IAC/K,4BAAsB,IAAI,EAAC,aAAa,EAAC,KAAK,EAAC,SAAS,EAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAC,SAAS,GAAE,EAChG,cAAQ,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAC,2BAA2B,kBAEzD,CAKL,EACN;GACH;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/modules/workflow-definitions/components/toolbar.tsx"],"sourcesContent":["import {Component, h, Prop, Event, EventEmitter} from '@stencil/core';\nimport {DropdownButtonItem} from \"../../../components/shared/dropdown-button/models\";\nimport {LayoutDirection} from \"../../flowchart/models\";\nimport {PlayButtonIcon} from \"../../../components/icons/buttons/play\";\n\n@Component({\n  tag: 'elsa-workflow-definition-editor-toolbar',\n})\nexport class Toolbar {\n  @Prop()\n  public zoomToFit: () => Promise<void>;\n\n  @Event()\n  public autoLayout: EventEmitter<LayoutDirection>;\n\n  render() {\n\n    const layoutButtons: Array<DropdownButtonItem> = [{\n      text: 'Horizontally',\n      handler: () => this.autoLayout.emit('LR')\n    },{\n      text: 'Vertically',\n      handler: () => this.autoLayout.emit('TB')\n    }];\n\n    return (\n      <div class=\"elsa-panel-toolbar tw-flex tw-justify-center tw-absolute tw-border-b tw-border-gray-200 tw-top-0 tw-px-1 tw-pl-4 tw-pb-2 tw-text-sm tw-bg-white tw-z-10 tw-space-x-2\">\n        <elsa-dropdown-button text=\"Auto-layout\" theme=\"Primary\" items={layoutButtons} class=\"tw-mt-2\"/>\n        <button onClick={this.zoomToFit} class=\"elsa-btn elsa-btn-primary\">\n          Zoom to fit\n        </button>\n        {/*Coming soon...*/}\n        {/*<button class=\"elsa-btn elsa-btn-action disabled\" disabled={true}>*/}\n        {/*  <PlayButtonIcon/> Run*/}\n        {/*</button>*/}\n      </div>\n    );\n  }\n}\n"],"version":3}