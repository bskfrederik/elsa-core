{"file":"elsa-slide-over-panel.entry.cjs.js","mappings":"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","names":["h","PanelActionType"],"sources":["./src/components/shared/slide-over-panel/slide-over-panel.tsx"],"sourcesContent":["import {Component, Event, EventEmitter, h, Method, Prop, State, Watch} from '@stencil/core';\r\nimport {TabDefinition} from '../../../models';\r\nimport {PanelActionDefinition, PanelActionType} from \"../../shared/form-panel/models\";\r\n\r\n@Component({\r\n  tag: 'elsa-slide-over-panel'\r\n})\r\nexport class SlideOverPanel {\r\n  private overlayElement: HTMLElement;\r\n  private formElement: HTMLFormElement;\r\n\r\n  @Prop() public headerText: string;\r\n  @Prop() public tabs: Array<TabDefinition> = [];\r\n  @Prop({mutable: true}) public selectedTab?: TabDefinition;\r\n  @Prop() public actions: Array<PanelActionDefinition> = [];\r\n  @Prop() public expand: boolean;\r\n  @Event() public collapsed: EventEmitter;\r\n\r\n  @Method()\r\n  public async show(): Promise<void> {\r\n    this.isShowing = true;\r\n    this.isHiding = false;\r\n    this.isVisible = true;\r\n  }\r\n\r\n  @Method()\r\n  public async hide(): Promise<void> {\r\n    this.isHiding = true;\r\n    this.isShowing = false;\r\n  }\r\n\r\n  @State() public isHiding: boolean = false;\r\n  @State() public isShowing: boolean = false;\r\n  @State() public isVisible: boolean = false;\r\n\r\n  @Watch('expand')\r\n  private handleExpanded(value: boolean) {\r\n    this.isShowing = value;\r\n    this.isHiding = !value;\r\n\r\n    if (value)\r\n      this.isVisible = true;\r\n  }\r\n\r\n  public render() {\r\n    return this.renderPanel();\r\n  }\r\n\r\n  private onCloseClick = async () => {\r\n    await this.hide();\r\n  };\r\n\r\n  private onOverlayClick = async (e: MouseEvent) => {\r\n    if (e.target != this.overlayElement)\r\n      return;\r\n\r\n    // Hide panel.\r\n    await this.hide();\r\n  };\r\n\r\n  private onTransitionEnd = (e: TransitionEvent) => {\r\n    if (this.isHiding) {\r\n      this.isVisible = false;\r\n      this.isHiding = false;\r\n      this.collapsed.emit();\r\n    }\r\n  };\r\n\r\n  private onTabClick(e: Event, tab: TabDefinition) {\r\n    e.preventDefault();\r\n    this.selectedTab = tab;\r\n  }\r\n\r\n  private renderPanel() {\r\n    const isVisible = this.isVisible;\r\n    const isHiding = this.isHiding;\r\n    const wrapperClass = isVisible ? 'tw-block' : 'hidden';\r\n    const backdropClass = !isHiding && isVisible ? 'tw-opacity-50' : 'tw-opacity-0';\r\n    const panelClass = !isHiding && isVisible ? 'tw-max-w-2xl w-2xl' : 'tw-max-tw-w-0 tw-w-0';\r\n    const tabs = this.tabs;\r\n    const selectedTab = this.selectedTab;\r\n    const actions = this.actions;\r\n\r\n    return (\r\n      <div class={`tw-fixed tw-inset-0 tw-overflow-hidden tw-z-10 ${wrapperClass}`} aria-labelledby=\"slide-over-title\" role=\"dialog\"\r\n           aria-modal=\"true\">\r\n        <div class=\"tw-absolute tw-inset-0 tw-overflow-hidden\">\r\n\r\n          <div class={`tw-absolute tw-inset-0 tw-bg-gray-100 tw-ease-in-out tw-duration-200 ${backdropClass}`}\r\n               onTransitionEnd={e => this.onTransitionEnd(e)}/>\r\n\r\n          <div class=\"tw-absolute tw-inset-0\" aria-hidden=\"true\" onClick={e => this.onOverlayClick(e)}\r\n               ref={el => this.overlayElement = el}>\r\n\r\n            <div class=\"tw-fixed tw-inset-y-0 tw-right-0 tw-pl-10 tw-max-w-full tw-flex sm:tw-pl-16\">\r\n\r\n              <div class={`tw-w-screen tw-ease-in-out tw-duration-200 ${panelClass}`}>\r\n                <form class=\"tw-h-full tw-flex tw-flex-col tw-bg-white tw-shadow-xl\"\r\n                      ref={el => this.formElement = el} method=\"post\">\r\n                  <div class=\"tw-flex tw-flex-col tw-flex-1\">\r\n\r\n                    <div class=\"tw-px-4 tw-py-6 tw-bg-gray-50 sm:tw-px-6\">\r\n                      <div class=\"tw-flex tw-items-start tw-justify-between tw-space-x-3\">\r\n                        <div class=\"tw-space-y-1\">\r\n                          <h2 class=\"tw-text-lg tw-font-medium tw-text-gray-900\" id=\"slide-over-title\">\r\n                            {this.headerText}\r\n                          </h2>\r\n                        </div>\r\n                        <div class=\"tw-h-7 tw-flex tw-items-center\">\r\n                          <button type=\"button\" class=\"tw-text-gray-400 hover:tw-text-gray-500\"\r\n                                  onClick={() => this.onCloseClick()}>\r\n                            <span class=\"tw-sr-only\">Close panel</span>\r\n                            <svg class=\"tw-h-6 tw-w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                                 stroke=\"currentColor\" aria-hidden=\"true\">\r\n                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                                    d=\"M6 18L18 6M6 6l12 12\"/>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"tw-border-b tw-border-gray-200\">\r\n                      <nav class=\"-tw-mb-px tw-flex\" aria-label=\"Tabs\">\r\n                        {tabs.map(tab => {\r\n                          const cssClass = tab == selectedTab ? 'tw-border-blue-500 tw-text-blue-600' : 'tw-border-transparent tw-text-gray-500 hover:tw-text-gray-700 hover:tw-border-gray-300';\r\n                          return <a href=\"#\"\r\n                                    onClick={e => this.onTabClick(e, tab)}\r\n                                    class={`${cssClass} tw-py-4 tw-px-1 tw-text-center tw-border-b-2 tw-font-medium tw-text-sm tw-flex-1`}>\r\n                            {tab.displayText}\r\n                          </a>\r\n                        })}\r\n                      </nav>\r\n                    </div>\r\n\r\n                    <div class=\"tw-flex-1 tw-relative\">\r\n\r\n                      <div class=\"tw-absolute tw-inset-0 tw-overflow-y-scroll\">\r\n                        {tabs.map(tab => {\r\n                          const cssClass = tab == selectedTab ? '' : 'hidden';\r\n                          return <div class={cssClass}>\r\n                            {tab.content()}\r\n                          </div>\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"tw-flex-shrink-0 tw-px-4 tw-border-t tw-border-gray-200 tw-py-5 sm:tw-px-6\">\r\n                    <div class=\"tw-space-x-3 tw-flex tw-justify-end\">\r\n                      {actions.map(action => {\r\n\r\n                        if (action.display)\r\n                          return action.display(action);\r\n\r\n                        const cssClass = action.isPrimary ? 'tw-text-white tw-bg-blue-600 hover:tw-bg-blue-700 tw-border-transparent' : 'tw-bg-white tw-border-gray-300 tw-text-gray-700 hover:tw-bg-gray-50';\r\n                        const buttonType = action.type == PanelActionType.Submit ? 'submit' : 'button';\r\n                        const cancelHandler = async () => await this.hide();\r\n\r\n                        const emptyHandler = () => {\r\n                        };\r\n\r\n                        const clickHandler = !!action.onClick ? action.onClick : action.type == PanelActionType.Cancel ? cancelHandler : emptyHandler;\r\n\r\n                        return <button type={buttonType}\r\n                                       onClick={e => clickHandler({e, action})}\r\n                                       class={`${cssClass} tw-py-2 tw-px-4 tw-border tw-rounded-md tw-shadow-sm tw-text-sm tw-font-medium focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-offset-2 focus:tw-ring-blue-500`}>\r\n                          {action.text}\r\n                        </button>\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}