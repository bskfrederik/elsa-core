{"file":"elsa-flow-switch-editor.entry.cjs.js","mappings":";;;;;;;;;;;;;;MAca,gBAAgB;;;IAGnB,sBAAiB,GAAkB,CAACA,iBAAW,CAAC,UAAU,EAAEA,iBAAW,CAAC,OAAO,CAAC,CAAC;IAkDjF,mBAAc,GAAG;MACvB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;MACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;MAC5C,MAAM,eAAe,GAAG,YAAY,CAAC,eAAe,CAAC;MACrD,MAAM,YAAY,GAAG,eAAe,CAAC,IAAI,CAAC;MAC1C,MAAM,qBAAqB,GAAGC,uBAAS,CAAC,YAAY,CAAC,CAAC;MAEtD,QAAQ,CAAC,qBAAqB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;MAC7C,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC;KACxC,CAAC;;iBA5D8C,EAAE;;EAIlD,qBAAqB,CAAC,KAA2B;IAC/C,IAAI,CAAC,WAAW,EAAE,CAAC;GACpB;EAED,iBAAiB;IACf,IAAI,CAAC,WAAW,EAAE,CAAC;GACpB;EAEO,WAAW;IACjB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;IAC5C,MAAM,eAAe,GAAG,YAAY,CAAC,eAAe,CAAC;IACrD,MAAM,YAAY,GAAG,eAAe,CAAC,IAAI,CAAC;IAC1C,MAAM,qBAAqB,GAAGA,uBAAS,CAAC,YAAY,CAAC,CAAC;IACtD,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;GACpD;EAEO,cAAc;IACpB,MAAM,QAAQ,GAAG,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;IACjD,MAAM,OAAO,GAAmB,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAC,IAAI,EAAED,iBAAW,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE,EAAC,EAAC,CAAC;IACxG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACtC,IAAI,CAAC,cAAc,EAAE,CAAC;GACvB;EAEO,iBAAiB,CAAC,UAA0B;IAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,CAAC;IACrD,IAAI,CAAC,cAAc,EAAE,CAAC;GACvB;EAEO,kBAAkB,CAAC,CAAQ,EAAE,UAA0B;IAC7D,UAAU,CAAC,KAAK,GAAI,CAAC,CAAC,aAAkC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtE,IAAI,CAAC,cAAc,EAAE,CAAC;GACvB;EAEO,uBAAuB,CAAC,CAAsC,EAAE,UAA0B;IAChG,UAAU,CAAC,SAAS,GAAG,EAAC,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC;IAChF,IAAI,CAAC,cAAc,EAAE,CAAC;GACvB;EAEO,mBAAmB,CAAC,CAAQ,EAAE,UAA0B;IAC9D,MAAM,MAAM,GAAG,CAAC,CAAC,aAAkC,CAAC;IACpD,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;IAC5B,UAAU,CAAC,SAAS,mCAAO,UAAU,CAAC,SAAS,KAAE,IAAI,EAAE,MAAM,GAAC,CAAC;IAC/D,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;GACvB;EAaD,MAAM;IACJ,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACvC,MAAM,eAAe,GAAG,YAAY,CAAC,eAAe,CAAC;IACrD,MAAM,WAAW,GAAG,eAAe,CAAC,WAAW,CAAC;IAChD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACzB,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;IAEjD,QACEE,qBACEA,iBAAK,KAAK,EAAC,QAAQ,IACjBA,uBAAQ,WAAW,CAAS,CACxB,EACNA,mBAAO,KAAK,EAAC,SAAS,IACpBA,uBACAA,oBACEA,gBAAI,KAAK,EAAC,WAAW,WAAU,EAC/BA,gBAAI,KAAK,EAAC,WAAW,iBAAgB,EACrCA,gBAAI,KAAK,EAAC,WAAW,aAAY,CAC9B,CACG,EACRA,uBACC,KAAK,CAAC,GAAG,CAAC,CAAC,UAAU,EAAEC,OAAK;MAC3B,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;MACvC,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC;MACnC,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC;MAC9B,MAAM,QAAQ,GAAGC,yBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;MAErD,QACEF,gBAAI,GAAG,EAAE,QAAQC,OAAK,EAAE,IACtBD,gBAAI,KAAK,EAAC,iBAAiB,IACzBA,mBAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,UAAU,CAAC,GAAG,CACjG,EACLA,gBAAI,KAAK,EAAC,iBAAiB,IACzBA,iBAAK,KAAK,EAAC,0DAA0D,IACnEA,gCACE,GAAG,EAAE,iBAAiBC,OAAK,EAAE,EAC7B,KAAK,EAAE,UAAU,EACjB,QAAQ,EAAE,QAAQ,EAClB,cAAc,EAAE,IAAI,EACpB,YAAY,EAAC,QAAQ,EACrB,OAAO,EAAC,4BAA4B,EACpC,cAAc,EAAE,CAAC,IAAI,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,UAAU,CAAC,GAChE,EACFD,iBAAK,KAAK,EAAC,6DAA6D,IACtEA,oBAAQ,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,KAAK,EAAC,wKAAwK,IAC3O,iBAAiB,CAAC,GAAG,CAAC,eAAe;QACpC,MAAM,QAAQ,GAAG,eAAe,IAAI,MAAM,CAAC;QAC3C,OAAOA,oBAAQ,QAAQ,EAAE,QAAQ,IAAG,eAAe,CAAU,CAAC;OAC/D,CAAC,CACK,CACL,CACF,CACH,EACLA,oBACEA,oBAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,KAAK,EAAC,kBAAkB,IAC/FA,QAACG,uBAAkB,OAAE,CACd,CACN,CACF,EACL;KACH,CAAC,CACM,CACF,EACRH,iBAAK,KAAK,EAAC,QAAQ,IACjBA,oBAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,cAAc,EAAE,EAAE,KAAK,EAAC,UAAU,IAC1EA,QAACI,mBAAc,OAAE,aAEV,CACL,CACF,EACN;GACH;;;;;;;;","names":["SyntaxNames","camelCase","h","index","mapSyntaxToLanguage","TrashBinButtonIcon","PlusButtonIcon"],"sources":["./src/modules/switch/flow/flow-switch-editor.tsx"],"sourcesContent":["import {Component, h, Prop, State, Watch} from \"@stencil/core\";\r\nimport {camelCase} from 'lodash';\r\nimport {ActivityInputContext} from \"../../../services/activity-input-driver\";\r\nimport {mapSyntaxToLanguage} from \"../../../utils\";\r\nimport {SyntaxNames} from \"../../../models\";\r\nimport {MonacoValueChangedArgs} from \"../../../components/shared/monaco-editor/monaco-editor\";\r\nimport {TrashBinButtonIcon} from \"../../../components/icons/buttons/trash-bin\";\r\nimport {PlusButtonIcon} from \"../../../components/icons/buttons/plus\";\r\nimport {FlowSwitchCase} from \"./models\";\r\n\r\n@Component({\r\n  tag: 'elsa-flow-switch-editor',\r\n  shadow: false\r\n})\r\nexport class FlowSwitchEditor {\r\n  @Prop() inputContext: ActivityInputContext;\r\n  @State() private cases: Array<FlowSwitchCase> = [];\r\n  private supportedSyntaxes: Array<string> = [SyntaxNames.JavaScript, SyntaxNames.Literal];\r\n\r\n  @Watch('inputContext')\r\n  onInputContextChanged(value: ActivityInputContext){\r\n    this.updateCases();\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.updateCases();\r\n  }\r\n\r\n  private updateCases(){\r\n    const inputContext = this.inputContext;\r\n    const activity = this.inputContext.activity;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const propertyName = inputDescriptor.name;\r\n    const camelCasePropertyName = camelCase(propertyName);\r\n    this.cases = activity[camelCasePropertyName] || [];\r\n  }\r\n\r\n  private onAddCaseClick() {\r\n    const caseName = `Case ${this.cases.length + 1}`;\r\n    const newCase: FlowSwitchCase = {label: caseName, condition: {type: SyntaxNames.JavaScript, value: ''}};\r\n    this.cases = [...this.cases, newCase];\r\n    this.updateActivity();\r\n  }\r\n\r\n  private onDeleteCaseClick(switchCase: FlowSwitchCase) {\r\n    this.cases = this.cases.filter(x => x != switchCase);\r\n    this.updateActivity();\r\n  }\r\n\r\n  private onCaseLabelChanged(e: Event, switchCase: FlowSwitchCase) {\r\n    switchCase.label = (e.currentTarget as HTMLInputElement).value.trim();\r\n    this.updateActivity();\r\n  }\r\n\r\n  private onCaseExpressionChanged(e: CustomEvent<MonacoValueChangedArgs>, switchCase: FlowSwitchCase) {\r\n    switchCase.condition = {type: switchCase.condition.type, value: e.detail.value};\r\n    this.updateActivity();\r\n  }\r\n\r\n  private onCaseSyntaxChanged(e: Event, switchCase: FlowSwitchCase) {\r\n    const select = e.currentTarget as HTMLSelectElement;\r\n    const syntax = select.value;\r\n    switchCase.condition = {...switchCase.condition, type: syntax};\r\n    this.cases = [...this.cases];\r\n    this.updateActivity();\r\n  }\r\n\r\n  private updateActivity = () => {\r\n    const inputContext = this.inputContext;\r\n    const activity = this.inputContext.activity;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const propertyName = inputDescriptor.name;\r\n    const camelCasePropertyName = camelCase(propertyName);\r\n\r\n    activity[camelCasePropertyName] = this.cases;\r\n    this.inputContext.notifyInputChanged();\r\n  };\r\n\r\n  render() {\r\n    const inputContext = this.inputContext;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const displayName = inputDescriptor.displayName;\r\n    const cases = this.cases;\r\n    const supportedSyntaxes = this.supportedSyntaxes;\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"tw-p-4\">\r\n          <label>{displayName}</label>\r\n        </div>\r\n        <table class=\"tw-mt-1\">\r\n          <thead>\r\n          <tr>\r\n            <th class=\"tw-w-3/12\">Name</th>\r\n            <th class=\"tw-w-8/12\">Expression</th>\r\n            <th class=\"tw-w-1/12\">&nbsp;</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {cases.map((switchCase, index) => {\r\n            const condition = switchCase.condition;\r\n            const expression = condition.value;\r\n            const syntax = condition.type;\r\n            const language = mapSyntaxToLanguage(condition.type);\r\n\r\n            return (\r\n              <tr key={`case-${index}`}>\r\n                <td class=\"tw-py-2 tw-pr-5\">\r\n                  <input type=\"text\" value={switchCase.label} onChange={e => this.onCaseLabelChanged(e, switchCase)}/>\r\n                </td>\r\n                <td class=\"tw-py-2 tw-pl-5\">\r\n                  <div class=\"tw-mt-1 tw-relative tw-rounded-md tw-shadow-sm tw-h-full\">\r\n                    <elsa-monaco-editor\r\n                      key={`monaco-editor-${index}`}\r\n                      value={expression}\r\n                      language={language}\r\n                      singleLineMode={true}\r\n                      editorHeight=\"2.75em\"\r\n                      padding=\"tw-pt-1.5 tw-pl-1 tw-pr-28\"\r\n                      onValueChanged={e => this.onCaseExpressionChanged(e, switchCase)}\r\n                    />\r\n                    <div class=\"tw-absolute tw-inset-y-0 tw-right-0 tw-flex tw-items-center\">\r\n                      <select onChange={e => this.onCaseSyntaxChanged(e, switchCase)} class=\"focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-h-full tw-py-0 tw-pl-2 tw-pr-7 tw-border-transparent tw-bg-transparent tw-text-gray-500 sm:tw-text-sm tw-rounded-md\">\r\n                        {supportedSyntaxes.map(supportedSyntax => {\r\n                          const selected = supportedSyntax == syntax;\r\n                          return <option selected={selected}>{supportedSyntax}</option>;\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <button type=\"button\" onClick={() => this.onDeleteCaseClick(switchCase)} class=\"elsa-icon-button\">\r\n                    <TrashBinButtonIcon/>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n          </tbody>\r\n        </table>\r\n        <div class=\"tw-p-4\">\r\n          <button type=\"button\" onClick={() => this.onAddCaseClick()} class=\"elsa-btn\">\r\n            <PlusButtonIcon/>\r\n            Add Case\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}