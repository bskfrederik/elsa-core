{"file":"elsa-workflow-publish-button.entry.cjs.js","mappings":";;;;;;;;MAaa,aAAa;;;;;;;;;;;EAahB,cAAc;IACpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;MACvB,KAAK,EAAE,MAAM,IAAI,CAAC,UAAU,GAAG,IAAI;MACnC,QAAQ,EAAE,MAAM,IAAI,CAAC,UAAU,GAAG,KAAK;KACxC,CAAC,CAAC;GACJ;EAEO,gBAAgB;IACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;GAC9B;EAEO,MAAM,aAAa;IACzB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;GAC3B;EAEO,MAAM,aAAa;IACzB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;GAC3B;EAEO,cAAc;IACpB,IAAG,CAAC,IAAI,CAAC,UAAU;MACjB,OAAO,IAAI,CAAC;IAEd,OAAOA,iBAAK,KAAK,EAAC,iEAAiE,EAAC,KAAK,EAAC,4BAA4B,EAAC,IAAI,EAAC,MAAM,EAAC,OAAO,EAAC,WAAW,IACpJA,oBAAQ,KAAK,EAAC,eAAe,EAAC,EAAE,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,EAAC,MAAM,EAAC,cAAc,kBAAc,GAAG,GAAE,EAC7FA,kBAAM,KAAK,EAAC,eAAe,EAAC,IAAI,EAAC,cAAc,EAAC,CAAC,EAAC,iHAAiH,GAAE,CACjK,CAAC;GACR;EAED,MAAM;IACJ,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IAEnC,MAAM,KAAK,GAA8B,CAAC;QACxC,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,MAAM,IAAI,CAAC,aAAa,EAAE;QACnC,KAAK,EAAE,CAAC;OACT,EAAC;QACA,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,MAAM,IAAI,CAAC,aAAa,EAAE;QACnC,KAAK,EAAE,CAAC;OACT,EAAE;QACD,IAAI,EAAE,WAAW;QACjB,OAAO,EAAE,MAAM,IAAI,CAAC,gBAAgB,EAAE;QACtC,KAAK,EAAE,CAAC;OACT,CAAC,CAAC;IAEH,MAAM,QAAQ,GAAuB;MACnC,IAAI,EAAE,UAAU,GAAG,YAAY,GAAG,SAAS;MAC3C,OAAO,EAAE,UAAU,GAAG,SAAQ,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE;KAC7D,CAAA;IAED,OAAOA,kCAAsB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,YAAY,EAAE,MAAMC,uCAAmB,CAAC,oBAAoB,EAAE,GAAI,CAAA;GACpN;;;;;","names":["h","NotificationService"],"sources":["./src/modules/workflow-definitions/components/publish-button.tsx"],"sourcesContent":["import {Component, Event, EventEmitter, h, Prop} from '@stencil/core';\r\nimport {DropdownButtonItem} from \"../../../components/shared/dropdown-button/models\";\r\nimport NotificationService from \"../../notifications/notification-service\";\r\n\r\nexport interface PublishClickedArgs {\r\n  begin: () => void;\r\n  complete: () => void;\r\n}\r\n\r\n@Component({\r\n  tag: 'elsa-workflow-publish-button',\r\n  shadow: false,\r\n})\r\nexport class PublishButton {\r\n\r\n  @Prop() publishing: boolean;\r\n  @Prop() disabled: boolean;\r\n  @Event({bubbles: true}) newClicked: EventEmitter;\r\n  @Event({bubbles: true}) publishClicked: EventEmitter<PublishClickedArgs>;\r\n  @Event({bubbles: true}) unPublishClicked: EventEmitter;\r\n  @Event({bubbles: true}) exportClicked: EventEmitter;\r\n  @Event({bubbles: true}) importClicked: EventEmitter<File>;\r\n\r\n  menu: HTMLElement;\r\n  element: HTMLElement;\r\n\r\n  private onPublishClick() {\r\n    this.publishClicked.emit({\r\n      begin: () => this.publishing = true,\r\n      complete: () => this.publishing = false\r\n    });\r\n  }\r\n\r\n  private onUnPublishClick() {\r\n    this.unPublishClicked.emit();\r\n  }\r\n\r\n  private async onExportClick() {\r\n    this.exportClicked.emit();\r\n  }\r\n\r\n  private async onImportClick() {\r\n    this.importClicked.emit();\r\n  }\r\n\r\n  private publishingIcon() {\r\n    if(!this.publishing)\r\n      return null;\r\n\r\n    return <svg class=\"tw-animate-spin -tw-ml-1 tw-mr-3 tw-h-5 tw-w-5 tw-text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n      <circle class=\"tw-opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"/>\r\n      <path class=\"tw-opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\r\n    </svg>;\r\n  }\r\n\r\n  render() {\r\n    const publishing = this.publishing;\r\n\r\n    const items: Array<DropdownButtonItem> = [{\r\n      text: 'Export',\r\n      handler: () => this.onExportClick(),\r\n      group: 1\r\n    },{\r\n      text: 'Import',\r\n      handler: () => this.onImportClick(),\r\n      group: 1\r\n    }, {\r\n      text: 'Unpublish',\r\n      handler: () => this.onUnPublishClick(),\r\n      group: 2\r\n    }];\r\n\r\n    const mainItem: DropdownButtonItem = {\r\n      text: publishing ? 'Publishing' : 'Publish',\r\n      handler: publishing ? () => {} : () => this.onPublishClick()\r\n    }\r\n\r\n    return <elsa-dropdown-button disabled={this.disabled} text={mainItem.text} handler={mainItem.handler} items={items} icon={this.publishingIcon()} onMenuOpened={() => NotificationService.hideAllNotifications()} />\r\n  }\r\n}\r\n"],"version":3}