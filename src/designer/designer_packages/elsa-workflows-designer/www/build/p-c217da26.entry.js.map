{"version":3,"names":["WorkflowIcon","h","class","fill","viewBox","stroke","d","x","y","width","height","rx","WorkflowStatusIcon","cx","cy","r","points","Search","onSearch","searchTextPlaceholder","onSubmit","e","preventDefault","form","target","formData","FormData","searchTerm","get","toString","onSearchDebounced","debounce","onKeyUp","term","value","htmlFor","name","placeholder","type","Filter","pageSizeFilter","workflowFilter","statusFilter","subStatusFilter","orderByFilter","resetFilter","onBulkDelete","onBulkCancel","bulkText","bulkDeleteText","bulkCancelText","resetText","BulkActions","onClick","PageSizeFilter","Object","assign","WorkflowFilter","StatusFilter","SubStatusFilter","OrderByFilter","bulkActions","text","onBulkActionSelected","action","detail","handler","items","icon","BulkActionsIcon","origin","DropdownButtonOrigin","TopLeft","theme","onItemSelected","selectedPageSize","onChange","pageSizeText","selectedPageSizeText","pageSizes","map","isSelected","onPageSizeChanged","parseInt","PageSizeIcon","TopRight","workflows","selectedWorkflowDefinitionId","workflowText","selectedWorkflow","find","definitionId","getWorkflowName","workflow","_a","length","selectedWorkflowText","allItem","onWorkflowChanged","selectedStatus","selectedStatusText","statuses","WorkflowStatus","Running","Finished","statusOptions","onStatusChanged","selectedSubStatusText","subStatuses","WorkflowSubStatus","Executing","Suspended","Faulted","Cancelled","subStatusOptions","selectedOrderBy","orderByText","selectedOrderByText","orderByValues","OrderBy","Updated","Created","onOrderByChanged","OrderByIcon","key","getRequest","json","localStorage","getItem","JSON","parse","persistRequest","request","setItem","stringify","statusColorMap","subStatusColorMap","Compensating","getSubStatusColor","status","updateSelectedWorkflowInstances","isChecked","workflowInstances","selectedWorkflowInstanceIds","currentItems","id","concat","filter","item","includes","WorkflowInstanceBrowser","constructor","hostRef","this","publishedOrLatestWorkflows","onDeleteManyClick","async","modalDialogService","show","DefaultContents","Warning","actions","DefaultModalActions","Delete","workflowInstancesApi","deleteMany","workflowInstanceIds","loadWorkflowInstances","Cancel","modalType","ModalType","Confirmation","onCancelManyClick","Yes","cancelMany","resetPagination","currentPage","loadWorkflowDefinitions","versionOptions","allVersions","workflowDefinitionsApi","list","selectLatestWorkflows","getSelectAllState","findIndex","setSelectAllIndeterminateState","selectAllCheckbox","selectedItems","indeterminate","groups","_","groupBy","first","orderBy","pageSize","currentPageSize","onWorkflowStatusChanged","onWorkflowSubStatusChanged","selectedSubStatus","onWorkflowInstanceClick","workflowInstance","workflowInstanceSelected","emit","onPaginated","page","totalCount","DEFAULT_PAGE_SIZE","Container","WorkflowInstancesApi","WorkflowDefinitionsApi","ModalDialogService","strings","getLocaleComponentStrings","element","persistedRequest","subStatus","workflowDefinition","render","filterProps","allWorkflows","undefined","Host","checked","onSelectAllCheckChange","ref","el","correlation","worfklow","version","workflowName","created","finished","statusColor","onWorkflowInstanceCheckChange","href","correlationId","formatTimestamp","createdAt","finishedAt","menuItems","EditIcon","onDeleteClick","DeleteIcon","orderDirection","OrderDirection","Descending","delete","checkBox","selectAllChecked","MIN_PAGE_SIZE","MAX_PAGE_SIZE","START_PAGE"],"sources":["./src/components/icons/tooling/workflow.tsx","./src/components/icons/tooling/workflow-status-icon.tsx","./src/modules/workflow-instances/components/search.tsx","./src/modules/workflow-instances/components/filter.tsx","./src/modules/workflow-instances/services/lookup-persistence.ts","./src/modules/workflow-instances/services/utils.ts","./src/modules/workflow-instances/components/browser.tsx"],"sourcesContent":["import {FunctionalComponent, h} from \"@stencil/core\";\r\n\r\nexport const WorkflowIcon: FunctionalComponent = () =>\r\n  <svg class=\"tw-mr-3 tw-h-5 tw-w-5 tw-text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\r\n    <rect x=\"4\" y=\"4\" width=\"6\" height=\"6\" rx=\"1\"/>\r\n    <rect x=\"14\" y=\"4\" width=\"6\" height=\"6\" rx=\"1\"/>\r\n    <rect x=\"4\" y=\"14\" width=\"6\" height=\"6\" rx=\"1\"/>\r\n    <rect x=\"14\" y=\"14\" width=\"6\" height=\"6\" rx=\"1\"/>\r\n  </svg>;\r\n","import {FunctionalComponent, h} from \"@stencil/core\";\r\n\r\nexport const WorkflowStatusIcon: FunctionalComponent = () =>\r\n  <svg class=\"tw-mr-3 tw-h-5 tw-w-5 tw-text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\"/>\r\n    <polygon points=\"10 8 16 12 10 16 10 8\"/>\r\n  </svg>;\r\n","import {FunctionalComponent, h} from \"@stencil/core\";\nimport {debounce} from 'lodash';\n\nexport interface SearchProps {\n  onSearch: (term: string) => void;\n  searchTextPlaceholder: string;\n}\n\nexport const Search: FunctionalComponent<SearchProps> = ({onSearch, searchTextPlaceholder}) => {\n\n  const onSubmit = (e: Event) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n    const formData = new FormData(form);\n    const searchTerm: FormDataEntryValue = formData.get('searchTerm').toString();\n\n    onSearch(searchTerm);\n  }\n\n  const onSearchDebounced = debounce(onSearch, 200);\n\n  const onKeyUp = (e: KeyboardEvent) => {\n    const term = (e.target as HTMLInputElement).value;\n    onSearchDebounced(term);\n  };\n\n  return <div class=\"tw-relative tw-z-10 tw-flex-shrink-0 tw-flex tw-h-16 tw-bg-white tw-border-b tw-border-gray-200\">\n    <div class=\"tw-flex-1 tw-px-4 tw-flex tw-justify-between sm:tw-px-6 lg:tw-px-8\">\n      <div class=\"tw-flex-1 tw-flex\">\n        <form class=\"tw-w-full tw-flex md:tw-ml-0\" onSubmit={onSubmit}>\n          <label htmlFor=\"search_field\" class=\"tw-sr-only\">Search</label>\n          <div class=\"tw-relative tw-w-full tw-text-gray-400 focus-within:tw-text-gray-600\">\n            <div\n              class=\"tw-absolute tw-inset-y-0 tw-left-0 tw-flex tw-items-center tw-pointer-events-none\">\n              <svg class=\"tw-h-5 tw-w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\"\n                      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"/>\n              </svg>\n            </div>\n            <input name=\"searchTerm\"\n                   onKeyUp={onKeyUp}\n                   class=\"tw-block tw-w-full tw-h-full tw-pl-8 tw-pr-3 tw-py-2 tw-rounded-md tw-text-gray-900 tw-placeholder-cool-gray-500 focus:tw-placeholder-cool-gray-400 sm:tw-text-sm tw-border-0 focus:tw-outline-none focus:tw-ring-0\"\n                   placeholder={searchTextPlaceholder}\n                   type=\"search\"/>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>;\n}\n","import {FunctionalComponent, h} from \"@stencil/core\";\nimport {WorkflowDefinitionSummary} from \"../../workflow-definitions/models/entities\";\nimport {OrderBy, WorkflowStatus, WorkflowSubStatus} from \"../../../models\";\nimport {DropdownButtonItem, DropdownButtonOrigin} from \"../../../components/shared/dropdown-button/models\";\nimport {BulkActionsIcon, OrderByIcon, PageSizeIcon, WorkflowIcon, WorkflowStatusIcon} from \"../../../components/icons/tooling\";\n\nexport interface FilterProps extends BulkActionsProps {\n  pageSizeFilter: PageSizeFilterProps;\n  workflowFilter: WorkflowFilterProps;\n  statusFilter: StatusFilterProps;\n  subStatusFilter: SubStatusFilterProps;\n  orderByFilter: OrderByFilterProps;\n  resetFilter: () => void;\n  resetText: string;\n\n}\n\nexport interface BulkActionsProps {\n  onBulkDelete: () => void;\n  onBulkCancel: () => void;\n  bulkText: string;\n  bulkDeleteText: string;\n  bulkCancelText: string;\n}\n\nexport interface PageSizeFilterProps {\n  selectedPageSize: number;\n  onChange: (pageSize: number) => void;\n  pageSizeText: string;\n}\n\nexport interface WorkflowFilterProps {\n  workflows: Array<WorkflowDefinitionSummary>;\n  selectedWorkflowDefinitionId?: string;\n  onChange: (definitionId: string) => void;\n  workflowText: string;\n}\n\nexport interface StatusFilterProps {\n  selectedStatus?: WorkflowStatus;\n  onChange: (status: WorkflowStatus) => void;\n}\n\nexport interface SubStatusFilterProps {\n  selectedStatus?: WorkflowSubStatus;\n  onChange: (status: WorkflowSubStatus) => void;\n}\n\nexport interface OrderByFilterProps {\n  selectedOrderBy?: OrderBy;\n  onChange: (orderBy: OrderBy) => void;\n  orderByText: string;\n\n}\n\nexport const Filter: FunctionalComponent<FilterProps> = ({pageSizeFilter, workflowFilter, statusFilter, subStatusFilter, orderByFilter, resetFilter, onBulkDelete, onBulkCancel, bulkText, bulkDeleteText, bulkCancelText, resetText}) => {\n\n  return <div class=\"tw-p-8 tw-flex tw-content-end tw-justify-right tw-bg-white tw-space-x-4\">\n    <div class=\"tw-flex-shrink-0\">\n      <BulkActions onBulkDelete={onBulkDelete} onBulkCancel={onBulkCancel} bulkText={bulkText} bulkDeleteText={bulkDeleteText} bulkCancelText={bulkCancelText} />\n    </div>\n    <div class=\"tw-flex-1\">\n      &nbsp;\n    </div>\n\n    <button onClick={resetFilter} type=\"button\" class=\"tw-text-sm tw-text-blue-600 active:tw-text-blue-700 tw-px-3 active:ring tw-ring-blue-500 tw-rounded\">\n      {resetText}\n    </button>\n\n    <PageSizeFilter {...pageSizeFilter}/>\n    <WorkflowFilter {...workflowFilter}/>\n    <StatusFilter {...statusFilter}/>\n    <SubStatusFilter {...subStatusFilter}/>\n    <OrderByFilter {...orderByFilter} />\n  </div>;\n}\n\nconst BulkActions: FunctionalComponent<BulkActionsProps> = ({ onBulkDelete, onBulkCancel, bulkText, bulkDeleteText, bulkCancelText }) => {\n  const bulkActions = [{\n    text: bulkDeleteText,\n    name: 'Delete',\n  }, {\n    text: bulkCancelText,\n    name: 'Cancel',\n  }];\n\n  const onBulkActionSelected = (e: CustomEvent<DropdownButtonItem>) => {\n    const action = e.detail;\n    switch (action.name) {\n      case 'Delete':\n        onBulkDelete();\n        break;\n      case 'Cancel':\n        onBulkCancel();\n        break;\n\n      default:\n        action.handler();\n    }\n  };\n\n  return <elsa-dropdown-button\n    text={bulkText} items={bulkActions} icon={<BulkActionsIcon/>}\n    origin={DropdownButtonOrigin.TopLeft}\n    theme=\"Secondary\"\n    onItemSelected={onBulkActionSelected}/>\n}\n\nconst PageSizeFilter: FunctionalComponent<PageSizeFilterProps> = ({selectedPageSize, onChange, pageSizeText}) => {\n  const selectedPageSizeText = `${pageSizeText}: ${selectedPageSize}`;\n  const pageSizes: Array<number> = [5, 10, 15, 20, 30, 50, 100];\n\n  const items: Array<DropdownButtonItem> = pageSizes.map(x => {\n    const text = \"\" + x;\n    return {text: text, isSelected: x == selectedPageSize, value: x};\n  });\n\n  const onPageSizeChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(parseInt(e.detail.value));\n\n  return <elsa-dropdown-button\n    text={selectedPageSizeText} items={items} icon={<PageSizeIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onPageSizeChanged}/>\n}\n\nconst WorkflowFilter: FunctionalComponent<WorkflowFilterProps> = ({workflows, selectedWorkflowDefinitionId, onChange, workflowText}) => {\n  const selectedWorkflow = workflows.find(x => x.definitionId == selectedWorkflowDefinitionId);\n  const getWorkflowName = (workflow?: WorkflowDefinitionSummary) => workflow?.name?.length > 0 ? workflow.name : 'Untitled';\n  const selectedWorkflowText = !selectedWorkflowDefinitionId ? workflowText : getWorkflowName(selectedWorkflow);\n  let items: Array<DropdownButtonItem> = workflows.map(x => ({text: getWorkflowName(x), value: x.definitionId, isSelected: x.definitionId == selectedWorkflowDefinitionId}));\n  const allItem: DropdownButtonItem = {text: workflowText, value: null, isSelected: !selectedWorkflowDefinitionId};\n  const onWorkflowChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  items = [allItem, ...items];\n\n  return <elsa-dropdown-button\n    text={selectedWorkflowText} items={items} icon={<WorkflowIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onWorkflowChanged}/>\n}\n\nconst StatusFilter: FunctionalComponent<StatusFilterProps> = ({selectedStatus, onChange}) => {\n  const selectedStatusText = !!selectedStatus ? selectedStatus : 'Status';\n  const statuses: Array<WorkflowStatus> = [null, WorkflowStatus.Running, WorkflowStatus.Finished];\n  const statusOptions: Array<DropdownButtonItem> = statuses.map(x => ({text: x ?? 'All', isSelected: x == selectedStatus, value: x}));\n  const onStatusChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  return <elsa-dropdown-button\n    text={selectedStatusText} items={statusOptions} icon={<WorkflowStatusIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onStatusChanged}/>\n}\n\nconst SubStatusFilter: FunctionalComponent<SubStatusFilterProps> = ({selectedStatus, onChange}) => {\n  const selectedSubStatusText = !!selectedStatus ? selectedStatus : 'Sub status';\n  const subStatuses: Array<WorkflowSubStatus> = [null, WorkflowSubStatus.Executing, WorkflowSubStatus.Suspended, WorkflowSubStatus.Finished, WorkflowSubStatus.Faulted, WorkflowSubStatus.Cancelled];\n  const subStatusOptions: Array<DropdownButtonItem> = subStatuses.map(x => ({text: x ?? 'All', isSelected: x == selectedStatus, value: x}));\n  const onStatusChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  return <elsa-dropdown-button\n    text={selectedSubStatusText} items={subStatusOptions} icon={<WorkflowStatusIcon/>}\n    origin={DropdownButtonOrigin.TopRight}\n    theme=\"Secondary\"\n    onItemSelected={onStatusChanged}/>\n}\n\nconst OrderByFilter: FunctionalComponent<OrderByFilterProps> = ({selectedOrderBy, onChange, orderByText}) => {\n  const selectedOrderByText = !!selectedOrderBy ? `${orderByText}: ${selectedOrderBy}` : orderByText;\n  const orderByValues: Array<OrderBy> = [OrderBy.Finished, OrderBy.Updated, OrderBy.Created];\n  const items: Array<DropdownButtonItem> = orderByValues.map(x => ({text: x, value: x, isSelected: x == selectedOrderBy}));\n  const onOrderByChanged = (e: CustomEvent<DropdownButtonItem>) => onChange(e.detail.value);\n\n  return <elsa-dropdown-button\n    text={selectedOrderByText} items={items} icon={<OrderByIcon/>}\n    theme=\"Secondary\"\n    origin={DropdownButtonOrigin.TopRight}\n    onItemSelected={onOrderByChanged}/>\n}\n","import { ListWorkflowInstancesRequest, WorkflowInstancesApi } from './workflow-instances-api';\r\n\r\nconst key = 'LS/wfInstanceBrowser';\r\n\r\nexport function getRequest(): ListWorkflowInstancesRequest | undefined {\r\n  var json = localStorage.getItem(key);\r\n\r\n  if (!json) return;\r\n\r\n  return JSON.parse(json);\r\n}\r\nexport function persistRequest(request: ListWorkflowInstancesRequest) {\r\n  localStorage.setItem(key, JSON.stringify(request));\r\n}\r\n","import {PagedList, WorkflowInstanceSummary, WorkflowStatus, WorkflowSubStatus} from \"../../../models\";\r\n\r\nconst statusColorMap = {};\r\nconst subStatusColorMap = {};\r\n\r\nstatusColorMap[WorkflowStatus.Running] = 'bg-rose-600';\r\nstatusColorMap[WorkflowStatus.Finished] = 'tw-bg-green-600';\r\n\r\nsubStatusColorMap[WorkflowSubStatus.Executing] = 'bg-rose-600';\r\nsubStatusColorMap[WorkflowSubStatus.Suspended] = 'tw-bg-blue-600';\r\nsubStatusColorMap[WorkflowSubStatus.Finished] = 'tw-bg-green-600';\r\nsubStatusColorMap[WorkflowSubStatus.Faulted] = 'tw-bg-red-600';\r\nsubStatusColorMap[WorkflowSubStatus.Compensating] = 'bg-orange-600';\r\nsubStatusColorMap[WorkflowSubStatus.Cancelled] = 'bg-gray-900';\r\n\r\nexport function getStatusColor(status: WorkflowStatus) {\r\n  return statusColorMap[status] ?? statusColorMap[WorkflowStatus.Running];\r\n}\r\n\r\nexport function getSubStatusColor(status: WorkflowSubStatus) {\r\n  return subStatusColorMap[status] ?? statusColorMap[WorkflowSubStatus.Suspended];\r\n}\r\n\r\nexport function updateSelectedWorkflowInstances(isChecked: boolean, workflowInstances: PagedList<WorkflowInstanceSummary>, selectedWorkflowInstanceIds: Array<string>) {\r\n  const currentItems = workflowInstances.items.map(x => x.id);\r\n\r\n  return isChecked\r\n    ? selectedWorkflowInstanceIds.concat(currentItems.filter(item => !selectedWorkflowInstanceIds.includes(item)))\r\n    : selectedWorkflowInstanceIds.filter(item => !currentItems.includes(item));\r\n\r\n}\r\n","import {Component, Element, Event, EventEmitter, h, Host, Method, Prop, State} from '@stencil/core';\nimport _ from 'lodash';\nimport {Search} from \"./search\";\nimport {Filter, FilterProps} from \"./filter\";\nimport {ListWorkflowInstancesRequest, WorkflowInstancesApi} from \"../services/workflow-instances-api\";\nimport {getRequest, persistRequest} from '../services/lookup-persistence';\nimport {WorkflowDefinition, WorkflowDefinitionSummary} from \"../../workflow-definitions/models/entities\";\nimport {OrderBy, OrderDirection, PagedList, VersionOptions, WorkflowInstanceSummary, WorkflowStatus, WorkflowSubStatus} from \"../../../models\";\nimport {Container} from \"typedi\";\nimport {WorkflowDefinitionsApi} from \"../../workflow-definitions\";\nimport {getSubStatusColor, updateSelectedWorkflowInstances} from \"../services/utils\";\nimport {formatTimestamp} from \"../../../utils\";\nimport {DeleteIcon, EditIcon} from \"../../../components/icons/tooling\";\nimport {PagerData} from \"../../../components/shared/pager/pager\";\nimport {DefaultContents, DefaultModalActions, ModalDialogService, ModalType} from '../../../components/shared/modal-dialog';\nimport { getLocaleComponentStrings } from '../../../utils/locale';\n\n@Component({\n  tag: 'elsa-workflow-instance-browser',\n  shadow: false,\n})\nexport class WorkflowInstanceBrowser {\n  static readonly DEFAULT_PAGE_SIZE = 15;\n  static readonly MIN_PAGE_SIZE = 5;\n  static readonly MAX_PAGE_SIZE = 100;\n  static readonly START_PAGE = 0;\n\n  private readonly workflowInstancesApi: WorkflowInstancesApi;\n  private readonly workflowDefinitionsApi: WorkflowDefinitionsApi;\n  private readonly modalDialogService: ModalDialogService;\n\n  private selectAllCheckbox: HTMLInputElement;\n  private publishedOrLatestWorkflows: Array<WorkflowDefinitionSummary> = [];\n\n\n  constructor() {\n    this.workflowInstancesApi = Container.get(WorkflowInstancesApi);\n    this.workflowDefinitionsApi = Container.get(WorkflowDefinitionsApi);\n    this.modalDialogService = Container.get(ModalDialogService);\n  }\n\n  @Prop() workflowDefinition: WorkflowDefinition;\n  @Event() public workflowInstanceSelected: EventEmitter<WorkflowInstanceSummary>;\n  @State() private workflowInstances: PagedList<WorkflowInstanceSummary> = {items: [], totalCount: 0};\n  @State() private workflows: Array<WorkflowDefinitionSummary> = [];\n  @State() private selectAllChecked: boolean;\n  @State() private selectedWorkflowInstanceIds: Array<string> = [];\n  @State() private searchTerm?: string;\n  @State() private currentPage: number = 0;\n  @State() private currentPageSize: number = WorkflowInstanceBrowser.DEFAULT_PAGE_SIZE;\n  @State() private selectedWorkflowDefinitionId?: string;\n  @State() private selectedStatus?: WorkflowStatus;\n  @State() private selectedSubStatus?: WorkflowSubStatus;\n  @State() private orderBy?: OrderBy;\n\n\n  @Element() element: HTMLElement;\n  strings!: any;\n\n  async componentWillLoad() {\n    this.strings = await getLocaleComponentStrings(this.element);\n    var persistedRequest = getRequest()\n\n    if (persistedRequest) {\n      // TODO: Persist search term, need to bind the value to the input\n      //this.searchTerm = persistedRequest.searchTerm\n      this.currentPage = persistedRequest.page\n      this.currentPageSize = persistedRequest.pageSize\n      this.orderBy = persistedRequest.orderBy\n      this.selectedWorkflowDefinitionId = persistedRequest.definitionId\n      this.selectedStatus = persistedRequest.status\n      this.selectedSubStatus = persistedRequest.subStatus\n    }\n\n    if(this.workflowDefinition != null)\n      this.selectedWorkflowDefinitionId = this.workflowDefinition.definitionId;\n\n    await this.loadWorkflowDefinitions();\n    await this.loadWorkflowInstances();\n  }\n\n  public render() {\n    const publishedOrLatestWorkflows = this.publishedOrLatestWorkflows;\n    const workflowInstances = this.workflowInstances;\n    const totalCount = workflowInstances.totalCount\n\n    const filterProps: FilterProps = {\n      resetText: this.strings.resetText,\n      bulkText: this.strings.bulkText,\n      bulkDeleteText: this.strings.bulkDeleteText,\n      bulkCancelText: this.strings.bulkCancelText,\n      pageSizeFilter: {\n        selectedPageSize: this.currentPageSize,\n        onChange: this.onPageSizeChanged,\n        pageSizeText: this.strings.pageSizes,\n      },\n      orderByFilter: {\n        selectedOrderBy: this.orderBy,\n        onChange: this.onOrderByChanged,\n        orderByText: this.strings.orderBy,\n      },\n      statusFilter: {\n        selectedStatus: this.selectedStatus,\n        onChange: this.onWorkflowStatusChanged\n      },\n      subStatusFilter: {\n        selectedStatus: this.selectedSubStatus,\n        onChange: this.onWorkflowSubStatusChanged\n      },\n      workflowFilter: {\n        workflows: publishedOrLatestWorkflows,\n        selectedWorkflowDefinitionId: this.selectedWorkflowDefinitionId,\n        onChange: this.onWorkflowChanged,\n        workflowText: this.strings.allWorkflows\n      },\n      resetFilter: async () => {\n        this.resetPagination();\n        this.currentPageSize = WorkflowInstanceBrowser.DEFAULT_PAGE_SIZE;\n        this.selectedStatus = undefined\n        this.selectedSubStatus = undefined\n        this.orderBy = undefined\n        this.selectedWorkflowDefinitionId = undefined\n\n        await this.loadWorkflowInstances();\n      },\n      onBulkDelete: this.onDeleteManyClick,\n      onBulkCancel: this.onCancelManyClick\n    };\n\n    return (\n      <Host class=\"tw-block\">\n\n        <div class=\"tw-pt-4\">\n          <h2 class=\"tw-text-lg tw-font-medium tw-ml-4 tw-mb-2\">{this.strings.name}</h2>\n\n          <Search onSearch={this.onSearch} searchTextPlaceholder={this.strings.searchTextPlaceholder}/>\n          <Filter {...filterProps}/>\n\n          <div class=\"tw-align-middle tw-inline-block tw-min-w-full tw-border-b tw-border-gray-200\">\n            <table class=\"default-table\">\n              <thead>\n              <tr>\n                <th>\n                  <input type=\"checkbox\" value=\"true\" checked={this.getSelectAllState()}\n                         onChange={e => this.onSelectAllCheckChange(e)}\n                         ref={el => this.selectAllCheckbox = el}/>\n                </th>\n                <th><span class=\"lg:tw-pl-2\">{this.strings.id}</span></th>\n                <th>{this.strings.correlation}</th>\n                <th>{this.strings.worfklow}</th>\n                <th class=\"tw-align-right\">{this.strings.version}</th>\n                <th>{this.strings.workflowName}</th>\n                <th>{this.strings.status}</th>\n                <th>{this.strings.created}</th>\n                <th>{this.strings.finished}</th>\n                <th/>\n              </tr>\n              </thead>\n              <tbody class=\"tw-bg-white tw-divide-y tw-divide-gray-100\">\n              {workflowInstances.items.map(workflowInstance => {\n                const statusColor = getSubStatusColor(workflowInstance.subStatus);\n                const isSelected = this.selectedWorkflowInstanceIds.findIndex(x => x === workflowInstance.id) >= 0;\n                const workflow: WorkflowDefinitionSummary = publishedOrLatestWorkflows.find(x => x.definitionId == workflowInstance.definitionId);\n                const workflowName = !!workflow ? (workflow.name || 'Untitled') : '(Definition not found)';\n\n                return (\n                  <tr>\n                    <td>\n                      <input type=\"checkbox\" value={workflowInstance.id} checked={isSelected} onChange={e => this.onWorkflowInstanceCheckChange(e, workflowInstance)}/>\n                    </td>\n                    <td>\n                      <div class=\"tw-flex tw-items-center tw-space-x-3 lg:tw-pl-2\">\n                        <a onClick={e => this.onWorkflowInstanceClick(e, workflowInstance)} href=\"#\" class=\"tw-truncate hover:tw-text-gray-600\"><span>{workflowInstance.id}</span></a>\n                      </div>\n                    </td>\n\n                    <td>{workflowInstance.correlationId}</td>\n                    <td>{workflowName}</td>\n                    <td class=\"tw-align-right\">{workflowInstance.version}</td>\n                    <td>{workflowInstance.name}</td>\n                    <td>\n                      <div class=\"tw-flex tw-items-center tw-space-x-3 lg:tw-pl-2\">\n                        <div class={`tw-flex-shrink-0 tw-w-2.5 tw-h-2.5 tw-rounded-full ${statusColor}`}/>\n                        <span>{workflowInstance.status}</span>\n                      </div>\n                    </td>\n                    <td>{formatTimestamp(workflowInstance.createdAt, '-')}</td>\n                    <td>{formatTimestamp(workflowInstance.finishedAt, '-')}</td>\n                    <td class=\"tw-pr-6\">\n                      <elsa-context-menu menuItems={[\n                        {text: 'Edit', handler: e => this.onWorkflowInstanceClick(e, workflowInstance), icon: <EditIcon/>},\n                        {text: 'Delete', handler: e => this.onDeleteClick(e, workflowInstance), icon: <DeleteIcon/>}\n                      ]}/>\n                    </td>\n                  </tr>\n                );\n              })}\n              </tbody>\n            </table>\n            <elsa-pager page={this.currentPage} pageSize={this.currentPageSize} totalCount={totalCount} onPaginated={this.onPaginated}/>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  private onDeleteManyClick = async () => {\n    if(this.selectedWorkflowInstanceIds.length == 0)\n      return;\n\n    this.modalDialogService.show(\n      () => DefaultContents.Warning(\"Are you sure you want to delete selected workflow instances?\"),\n      {\n        actions: [DefaultModalActions.Delete(async () => {\n          await this.workflowInstancesApi.deleteMany({workflowInstanceIds: this.selectedWorkflowInstanceIds});\n          await this.loadWorkflowInstances();\n        }), DefaultModalActions.Cancel()],\n        modalType: ModalType.Confirmation\n      });\n  };\n\n  private onCancelManyClick = async () => {\n    if(this.selectedWorkflowInstanceIds.length == 0)\n      return;\n\n    this.modalDialogService.show(\n      () => DefaultContents.Warning(\"Are you sure you want to cancel selected workflow instances?\"),\n      {\n        actions: [DefaultModalActions.Yes(async () => {\n          await this.workflowInstancesApi.cancelMany({workflowInstanceIds: this.selectedWorkflowInstanceIds});\n          await this.loadWorkflowInstances();\n        }), DefaultModalActions.Cancel()],\n        modalType: ModalType.Confirmation\n      });\n  };\n\n  private resetPagination = () => {\n    this.currentPage = 0;\n    this.selectedWorkflowInstanceIds = [];\n  };\n\n  private async loadWorkflowInstances() {\n\n    const request: ListWorkflowInstancesRequest = {\n      searchTerm: this.searchTerm,\n      definitionId: this.selectedWorkflowDefinitionId,\n      status: this.selectedStatus,\n      subStatus: this.selectedSubStatus,\n      orderBy: this.orderBy,\n      orderDirection: OrderDirection.Descending,\n      page: this.currentPage,\n      pageSize: this.currentPageSize\n    };\n\n    persistRequest(request)\n    this.workflowInstances = await this.workflowInstancesApi.list(request);\n  }\n\n  private loadWorkflowDefinitions = async () => {\n    const versionOptions: VersionOptions = {allVersions: true};\n    const workflows = await this.workflowDefinitionsApi.list({versionOptions});\n    this.publishedOrLatestWorkflows = this.selectLatestWorkflows(workflows.items);\n  };\n\n  private getSelectAllState = () => {\n    const {items} = this.workflowInstances;\n    const selectedWorkflowInstanceIds = this.selectedWorkflowInstanceIds;\n    return items.findIndex(item => !selectedWorkflowInstanceIds.includes(item.id)) < 0;\n  }\n\n  private setSelectAllIndeterminateState = () => {\n    if (this.selectAllCheckbox) {\n      const selectedItems = this.workflowInstances.items.filter(item => this.selectedWorkflowInstanceIds.includes(item.id));\n      this.selectAllCheckbox.indeterminate = selectedItems.length != 0 && selectedItems.length != this.workflowInstances.items.length;\n    }\n  }\n\n  private selectLatestWorkflows = (workflows: Array<WorkflowDefinitionSummary>): Array<WorkflowDefinitionSummary> => {\n    const groups = _.groupBy(workflows, 'definitionId');\n    return _.map(groups, x => _.first(_.orderBy(x, 'version', 'desc')));\n  }\n\n  private onSearch = async (term: string) => {\n    this.searchTerm = term;\n    this.resetPagination();\n    await this.loadWorkflowInstances();\n  };\n\n  private onPageSizeChanged = async (pageSize: number) => {\n    this.currentPageSize = pageSize;\n    this.resetPagination();\n    await this.loadWorkflowInstances();\n  };\n\n  private onWorkflowChanged = async (definitionId: string) => {\n    this.selectedWorkflowDefinitionId = definitionId;\n    this.resetPagination();\n    await this.loadWorkflowInstances();\n  };\n\n  private onWorkflowStatusChanged = async (status: WorkflowStatus) => {\n    this.selectedStatus = status;\n    this.resetPagination();\n    await this.loadWorkflowInstances();\n  };\n\n  private onWorkflowSubStatusChanged = async (status: WorkflowSubStatus) => {\n    this.selectedSubStatus = status;\n    this.resetPagination();\n    await this.loadWorkflowInstances();\n  };\n\n  private onOrderByChanged = async (orderBy: OrderBy) => {\n    this.orderBy = orderBy;\n    await this.loadWorkflowInstances();\n  };\n\n  private async onDeleteClick(e: MouseEvent, workflowInstance: WorkflowInstanceSummary) {\n    // const result = await this.confirmDialog.show(t('DeleteConfirmationModel.Title'), t('DeleteConfirmationModel.Message'));\n    //\n    // if (!result)\n    //   return;\n    //\n\n    await this.workflowInstancesApi.delete(workflowInstance);\n    await this.loadWorkflowInstances();\n  }\n\n  private onWorkflowInstanceClick = async (e: MouseEvent, workflowInstance: WorkflowInstanceSummary) => {\n    e.preventDefault();\n    this.workflowInstanceSelected.emit(workflowInstance);\n  }\n\n  private onSelectAllCheckChange(e: Event) {\n    const checkBox = e.target as HTMLInputElement;\n    const isChecked = checkBox.checked;\n    this.selectAllChecked = isChecked;\n    this.selectedWorkflowInstanceIds = updateSelectedWorkflowInstances(isChecked, this.workflowInstances, this.selectedWorkflowInstanceIds);\n  }\n\n  private onWorkflowInstanceCheckChange(e: Event, workflowInstance: WorkflowInstanceSummary) {\n    const checkBox = e.target as HTMLInputElement;\n    const isChecked = checkBox.checked;\n\n    if (isChecked)\n      this.selectedWorkflowInstanceIds = [...this.selectedWorkflowInstanceIds, workflowInstance.id];\n    else\n      this.selectedWorkflowInstanceIds = this.selectedWorkflowInstanceIds.filter(x => x != workflowInstance.id);\n\n    this.setSelectAllIndeterminateState();\n  }\n\n  onPaginated = async (e: CustomEvent<PagerData>) => {\n    this.currentPage = e.detail.page;\n    await this.loadWorkflowInstances();\n  };\n}\n"],"mappings":"kfAEO,MAAMA,EAAoC,IAC/CC,EAAA,OAAKC,MAAM,yCAAyCC,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBACzFJ,EAAA,QAAMI,OAAO,OAAOC,EAAE,kBACtBL,EAAA,QAAMM,EAAE,IAAIC,EAAE,IAAIC,MAAM,IAAIC,OAAO,IAAIC,GAAG,MAC1CV,EAAA,QAAMM,EAAE,KAAKC,EAAE,IAAIC,MAAM,IAAIC,OAAO,IAAIC,GAAG,MAC3CV,EAAA,QAAMM,EAAE,IAAIC,EAAE,KAAKC,MAAM,IAAIC,OAAO,IAAIC,GAAG,MAC3CV,EAAA,QAAMM,EAAE,KAAKC,EAAE,KAAKC,MAAM,IAAIC,OAAO,IAAIC,GAAG,OCNzC,MAAMC,EAA0C,IACrDX,EAAA,OAAKC,MAAM,yCAAyCC,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBACzFJ,EAAA,UAAQY,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1Bd,EAAA,WAASe,OAAO,2BCGb,MAAMC,EAA2C,EAAEC,WAAUC,4BAElE,MAAMC,EAAYC,IAChBA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,OACf,MAAMC,EAAW,IAAIC,SAASH,GAC9B,MAAMI,EAAiCF,EAASG,IAAI,cAAcC,WAElEX,EAASS,EAAW,EAGtB,MAAMG,EAAoBC,WAASb,EAAU,KAE7C,MAAMc,EAAWX,IACf,MAAMY,EAAQZ,EAAEG,OAA4BU,MAC5CJ,EAAkBG,EAAK,EAGzB,OAAOhC,EAAA,OAAKC,MAAM,mGAChBD,EAAA,OAAKC,MAAM,sEACTD,EAAA,OAAKC,MAAM,qBACTD,EAAA,QAAMC,MAAM,+BAA+BkB,SAAUA,GACnDnB,EAAA,SAAOkC,QAAQ,eAAejC,MAAM,cAAY,UAChDD,EAAA,OAAKC,MAAM,wEACTD,EAAA,OACEC,MAAM,qFACND,EAAA,OAAKC,MAAM,gBAAgBC,KAAK,eAAeC,QAAQ,aACrDH,EAAA,oBAAgB,UAAS,YAAW,UAC9BK,EAAE,uHAGZL,EAAA,SAAOmC,KAAK,aACLJ,QAASA,EACT9B,MAAM,sNACNmC,YAAalB,EACbmB,KAAK,eAKhB,ECOD,MAAMC,EAA2C,EAAEC,iBAAgBC,iBAAgBC,eAAcC,kBAAiBC,gBAAeC,cAAaC,eAAcC,eAAcC,WAAUC,iBAAgBC,iBAAgBC,eAElNlD,EAAA,OAAKC,MAAM,2EAChBD,EAAA,OAAKC,MAAM,oBACTD,EAACmD,EAAW,CAACN,aAAcA,EAAcC,aAAcA,EAAcC,SAAUA,EAAUC,eAAgBA,EAAgBC,eAAgBA,KAE3IjD,EAAA,OAAKC,MAAM,aAAW,KAItBD,EAAA,UAAQoD,QAASR,EAAaP,KAAK,SAASpC,MAAM,uGAC/CiD,GAGHlD,EAACqD,EAAcC,OAAAC,OAAA,GAAKhB,IACpBvC,EAACwD,EAAcF,OAAAC,OAAA,GAAKf,IACpBxC,EAACyD,EAAYH,OAAAC,OAAA,GAAKd,IAClBzC,EAAC0D,EAAeJ,OAAAC,OAAA,GAAKb,IACrB1C,EAAC2D,EAAaL,OAAAC,OAAA,GAAKZ,KAIvB,MAAMQ,EAAqD,EAAGN,eAAcC,eAAcC,WAAUC,iBAAgBC,qBAClH,MAAMW,EAAc,CAAC,CACnBC,KAAMb,EACNb,KAAM,UACL,CACD0B,KAAMZ,EACNd,KAAM,WAGR,MAAM2B,EAAwB1C,IAC5B,MAAM2C,EAAS3C,EAAE4C,OACjB,OAAQD,EAAO5B,MACb,IAAK,SACHU,IACA,MACF,IAAK,SACHC,IACA,MAEF,QACEiB,EAAOE,U,EAIb,OAAOjE,EAAA,wBACL6D,KAAMd,EAAUmB,MAAON,EAAaO,KAAMnE,EAACoE,EAAe,MAC1DC,OAAQC,EAAqBC,QAC7BC,MAAM,YACNC,eAAgBX,GAAuB,EAG3C,MAAMT,EAA2D,EAAEqB,mBAAkBC,WAAUC,mBAC7F,MAAMC,EAAuB,GAAGD,MAAiBF,IACjD,MAAMI,EAA2B,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAEzD,MAAMZ,EAAmCY,EAAUC,KAAIzE,IACrD,MAAMuD,EAAO,GAAKvD,EAClB,MAAO,CAACuD,KAAMA,EAAMmB,WAAY1E,GAAKoE,EAAkBzC,MAAO3B,EAAE,IAGlE,MAAM2E,EAAqB7D,GAAuCuD,EAASO,SAAS9D,EAAE4C,OAAO/B,QAE7F,OAAOjC,EAAA,wBACL6D,KAAMgB,EAAsBX,MAAOA,EAAOC,KAAMnE,EAACmF,EAAY,MAC7Dd,OAAQC,EAAqBc,SAC7BZ,MAAM,YACNC,eAAgBQ,GAAoB,EAGxC,MAAMzB,EAA2D,EAAE6B,YAAWC,+BAA8BX,WAAUY,mBACpH,MAAMC,EAAmBH,EAAUI,MAAKnF,GAAKA,EAAEoF,cAAgBJ,IAC/D,MAAMK,EAAmBC,IAAoC,IAAAC,EAAK,QAAAA,EAAAD,IAAQ,MAARA,SAAQ,SAARA,EAAUzD,QAAI,MAAA0D,SAAA,SAAAA,EAAEC,QAAS,EAAIF,EAASzD,KAAO,UAAU,EACzH,MAAM4D,GAAwBT,EAA+BC,EAAeI,EAAgBH,GAC5F,IAAItB,EAAmCmB,EAAUN,KAAIzE,IAAC,CAAMuD,KAAM8B,EAAgBrF,GAAI2B,MAAO3B,EAAEoF,aAAcV,WAAY1E,EAAEoF,cAAgBJ,MAC3I,MAAMU,EAA8B,CAACnC,KAAM0B,EAActD,MAAO,KAAM+C,YAAaM,GACnF,MAAMW,EAAqB7E,GAAuCuD,EAASvD,EAAE4C,OAAO/B,OAEpFiC,EAAQ,CAAC8B,KAAY9B,GAErB,OAAOlE,EAAA,wBACL6D,KAAMkC,EAAsB7B,MAAOA,EAAOC,KAAMnE,EAACD,EAAY,MAC7DsE,OAAQC,EAAqBc,SAC7BZ,MAAM,YACNC,eAAgBwB,GAAoB,EAGxC,MAAMxC,EAAuD,EAAEyC,iBAAgBvB,eAC7E,MAAMwB,IAAuBD,EAAiBA,EAAiB,SAC/D,MAAME,EAAkC,CAAC,KAAMC,EAAeC,QAASD,EAAeE,UACtF,MAAMC,EAA2CJ,EAASrB,KAAIzE,IAAC,CAAMuD,KAAMvD,IAAC,MAADA,SAAC,EAADA,EAAK,MAAO0E,WAAY1E,GAAK4F,EAAgBjE,MAAO3B,MAC/H,MAAMmG,EAAmBrF,GAAuCuD,EAASvD,EAAE4C,OAAO/B,OAElF,OAAOjC,EAAA,wBACL6D,KAAMsC,EAAoBjC,MAAOsC,EAAerC,KAAMnE,EAACW,EAAkB,MACzE0D,OAAQC,EAAqBc,SAC7BZ,MAAM,YACNC,eAAgBgC,GAAkB,EAGtC,MAAM/C,EAA6D,EAAEwC,iBAAgBvB,eACnF,MAAM+B,IAA0BR,EAAiBA,EAAiB,aAClE,MAAMS,EAAwC,CAAC,KAAMC,EAAkBC,UAAWD,EAAkBE,UAAWF,EAAkBL,SAAUK,EAAkBG,QAASH,EAAkBI,WACxL,MAAMC,EAA8CN,EAAY5B,KAAIzE,IAAC,CAAMuD,KAAMvD,IAAC,MAADA,SAAC,EAADA,EAAK,MAAO0E,WAAY1E,GAAK4F,EAAgBjE,MAAO3B,MACrI,MAAMmG,EAAmBrF,GAAuCuD,EAASvD,EAAE4C,OAAO/B,OAElF,OAAOjC,EAAA,wBACL6D,KAAM6C,EAAuBxC,MAAO+C,EAAkB9C,KAAMnE,EAACW,EAAkB,MAC/E0D,OAAQC,EAAqBc,SAC7BZ,MAAM,YACNC,eAAgBgC,GAAkB,EAGtC,MAAM9C,EAAyD,EAAEuD,kBAAiBvC,WAAUwC,kBAC1F,MAAMC,IAAwBF,EAAkB,GAAGC,MAAgBD,IAAoBC,EACvF,MAAME,EAAgC,CAACC,EAAQf,SAAUe,EAAQC,QAASD,EAAQE,SAClF,MAAMtD,EAAmCmD,EAActC,KAAIzE,IAAC,CAAMuD,KAAMvD,EAAG2B,MAAO3B,EAAG0E,WAAY1E,GAAK4G,MACtG,MAAMO,EAAoBrG,GAAuCuD,EAASvD,EAAE4C,OAAO/B,OAEnF,OAAOjC,EAAA,wBACL6D,KAAMuD,EAAqBlD,MAAOA,EAAOC,KAAMnE,EAAC0H,EAAW,MAC3DlD,MAAM,YACNH,OAAQC,EAAqBc,SAC7BX,eAAgBgD,GAAmB,ECjLvC,MAAME,EAAM,uB,SAEIC,IACd,IAAIC,EAAOC,aAAaC,QAAQJ,GAEhC,IAAKE,EAAM,OAEX,OAAOG,KAAKC,MAAMJ,EACpB,C,SACgBK,EAAeC,GAC7BL,aAAaM,QAAQT,EAAKK,KAAKK,UAAUF,GAC3C,CCXA,MAAMG,EAAiB,GACvB,MAAMC,EAAoB,GAE1BD,EAAejC,EAAeC,SAAW,cACzCgC,EAAejC,EAAeE,UAAY,kBAE1CgC,EAAkB3B,EAAkBC,WAAa,cACjD0B,EAAkB3B,EAAkBE,WAAa,iBACjDyB,EAAkB3B,EAAkBL,UAAY,kBAChDgC,EAAkB3B,EAAkBG,SAAW,gBAC/CwB,EAAkB3B,EAAkB4B,cAAgB,gBACpDD,EAAkB3B,EAAkBI,WAAa,c,SAMjCyB,EAAkBC,G,MAChC,OAAO7C,EAAA0C,EAAkBG,MAAO,MAAA7C,SAAA,EAAAA,EAAIyC,EAAe1B,EAAkBE,UACvE,C,SAEgB6B,EAAgCC,EAAoBC,EAAuDC,GACzH,MAAMC,EAAeF,EAAkB3E,MAAMa,KAAIzE,GAAKA,EAAE0I,KAExD,OAAOJ,EACHE,EAA4BG,OAAOF,EAAaG,QAAOC,IAASL,EAA4BM,SAASD,MACrGL,EAA4BI,QAAOC,IAASJ,EAAaK,SAASD,IAExE,C,MCTaE,EAAuB,MAclCC,YAAAC,G,6EAHQC,KAAAC,2BAA+D,GA8K/DD,KAAAE,kBAAoBC,UAC1B,GAAGH,KAAKV,4BAA4BhD,QAAU,EAC5C,OAEF0D,KAAKI,mBAAmBC,MACtB,IAAMC,EAAgBC,QAAQ,iEAC9B,CACEC,QAAS,CAACC,EAAoBC,QAAOP,gBAC7BH,KAAKW,qBAAqBC,WAAW,CAACC,oBAAqBb,KAAKV,oCAChEU,KAAKc,uBAAuB,IAChCL,EAAoBM,UACxBC,UAAWC,EAAUC,cACrB,EAGElB,KAAAmB,kBAAoBhB,UAC1B,GAAGH,KAAKV,4BAA4BhD,QAAU,EAC5C,OAEF0D,KAAKI,mBAAmBC,MACtB,IAAMC,EAAgBC,QAAQ,iEAC9B,CACEC,QAAS,CAACC,EAAoBW,KAAIjB,gBAC1BH,KAAKW,qBAAqBU,WAAW,CAACR,oBAAqBb,KAAKV,oCAChEU,KAAKc,uBAAuB,IAChCL,EAAoBM,UACxBC,UAAWC,EAAUC,cACrB,EAGElB,KAAAsB,gBAAkB,KACxBtB,KAAKuB,YAAc,EACnBvB,KAAKV,4BAA8B,EAAE,EAoB/BU,KAAAwB,wBAA0BrB,UAChC,MAAMsB,EAAiC,CAACC,YAAa,MACrD,MAAM7F,QAAkBmE,KAAK2B,uBAAuBC,KAAK,CAACH,mBAC1DzB,KAAKC,2BAA6BD,KAAK6B,sBAAsBhG,EAAUnB,MAAM,EAGvEsF,KAAA8B,kBAAoB,KAC1B,MAAMpH,MAACA,GAASsF,KAAKX,kBACrB,MAAMC,EAA8BU,KAAKV,4BACzC,OAAO5E,EAAMqH,WAAUpC,IAASL,EAA4BM,SAASD,EAAKH,MAAO,CAAC,EAG5EQ,KAAAgC,+BAAiC,KACvC,GAAIhC,KAAKiC,kBAAmB,CAC1B,MAAMC,EAAgBlC,KAAKX,kBAAkB3E,MAAMgF,QAAOC,GAAQK,KAAKV,4BAA4BM,SAASD,EAAKH,MACjHQ,KAAKiC,kBAAkBE,cAAgBD,EAAc5F,QAAU,GAAK4F,EAAc5F,QAAU0D,KAAKX,kBAAkB3E,MAAM4B,M,GAIrH0D,KAAA6B,sBAAyBhG,IAC/B,MAAMuG,EAASC,EAAEC,QAAQzG,EAAW,gBACpC,OAAOwG,EAAE9G,IAAI6G,GAAQtL,GAAKuL,EAAEE,MAAMF,EAAEG,QAAQ1L,EAAG,UAAW,UAAS,EAG7DkJ,KAAAvI,SAAW0I,MAAO3H,IACxBwH,KAAK9H,WAAaM,EAClBwH,KAAKsB,wBACCtB,KAAKc,uBAAuB,EAG5Bd,KAAAvE,kBAAoB0E,MAAOsC,IACjCzC,KAAK0C,gBAAkBD,EACvBzC,KAAKsB,wBACCtB,KAAKc,uBAAuB,EAG5Bd,KAAAvD,kBAAoB0D,MAAOjE,IACjC8D,KAAKlE,6BAA+BI,EACpC8D,KAAKsB,wBACCtB,KAAKc,uBAAuB,EAG5Bd,KAAA2C,wBAA0BxC,MAAOjB,IACvCc,KAAKtD,eAAiBwC,EACtBc,KAAKsB,wBACCtB,KAAKc,uBAAuB,EAG5Bd,KAAA4C,2BAA6BzC,MAAOjB,IAC1Cc,KAAK6C,kBAAoB3D,EACzBc,KAAKsB,wBACCtB,KAAKc,uBAAuB,EAG5Bd,KAAA/B,iBAAmBkC,MAAOqC,IAChCxC,KAAKwC,QAAUA,QACTxC,KAAKc,uBAAuB,EAc5Bd,KAAA8C,wBAA0B3C,MAAOvI,EAAemL,KACtDnL,EAAEC,iBACFmI,KAAKgD,yBAAyBC,KAAKF,EAAiB,EAsBtD/C,KAAAkD,YAAc/C,MAAOvI,IACnBoI,KAAKuB,YAAc3J,EAAE4C,OAAO2I,WACtBnD,KAAKc,uBAAuB,E,yDAvTqC,CAACpG,MAAO,GAAI0I,WAAY,G,eAClC,G,iEAED,G,2CAEvB,E,qBACIvD,EAAwBwD,kB,kIAbjErD,KAAKW,qBAAuB2C,EAAUnL,IAAIoL,GAC1CvD,KAAK2B,uBAAyB2B,EAAUnL,IAAIqL,GAC5CxD,KAAKI,mBAAqBkD,EAAUnL,IAAIsL,E,CAqB1CtD,0BACEH,KAAK0D,cAAgBC,EAA0B3D,KAAK4D,SACpD,IAAIC,EAAmBzF,IAEvB,GAAIyF,EAAkB,CAGpB7D,KAAKuB,YAAcsC,EAAiBV,KACpCnD,KAAK0C,gBAAkBmB,EAAiBpB,SACxCzC,KAAKwC,QAAUqB,EAAiBrB,QAChCxC,KAAKlE,6BAA+B+H,EAAiB3H,aACrD8D,KAAKtD,eAAiBmH,EAAiB3E,OACvCc,KAAK6C,kBAAoBgB,EAAiBC,S,CAG5C,GAAG9D,KAAK+D,oBAAsB,KAC5B/D,KAAKlE,6BAA+BkE,KAAK+D,mBAAmB7H,mBAExD8D,KAAKwB,gCACLxB,KAAKc,uB,CAGNkD,SACL,MAAM/D,EAA6BD,KAAKC,2BACxC,MAAMZ,EAAoBW,KAAKX,kBAC/B,MAAM+D,EAAa/D,EAAkB+D,WAErC,MAAMa,EAA2B,CAC/BvK,UAAWsG,KAAK0D,QAAQhK,UACxBH,SAAUyG,KAAK0D,QAAQnK,SACvBC,eAAgBwG,KAAK0D,QAAQlK,eAC7BC,eAAgBuG,KAAK0D,QAAQjK,eAC7BV,eAAgB,CACdmC,iBAAkB8E,KAAK0C,gBACvBvH,SAAU6E,KAAKvE,kBACfL,aAAc4E,KAAK0D,QAAQpI,WAE7BnC,cAAe,CACbuE,gBAAiBsC,KAAKwC,QACtBrH,SAAU6E,KAAK/B,iBACfN,YAAaqC,KAAK0D,QAAQlB,SAE5BvJ,aAAc,CACZyD,eAAgBsD,KAAKtD,eACrBvB,SAAU6E,KAAK2C,yBAEjBzJ,gBAAiB,CACfwD,eAAgBsD,KAAK6C,kBACrB1H,SAAU6E,KAAK4C,4BAEjB5J,eAAgB,CACd6C,UAAWoE,EACXnE,6BAA8BkE,KAAKlE,6BACnCX,SAAU6E,KAAKvD,kBACfV,aAAciE,KAAK0D,QAAQQ,cAE7B9K,YAAa+G,UACXH,KAAKsB,kBACLtB,KAAK0C,gBAAkB7C,EAAwBwD,kBAC/CrD,KAAKtD,eAAiByH,UACtBnE,KAAK6C,kBAAoBsB,UACzBnE,KAAKwC,QAAU2B,UACfnE,KAAKlE,6BAA+BqI,gBAE9BnE,KAAKc,uBAAuB,EAEpCzH,aAAc2G,KAAKE,kBACnB5G,aAAc0G,KAAKmB,mBAGrB,OACE3K,EAAC4N,EAAI,CAAC3N,MAAM,YAEVD,EAAA,OAAKC,MAAM,WACTD,EAAA,MAAIC,MAAM,6CAA6CuJ,KAAK0D,QAAQ/K,MAEpEnC,EAACgB,EAAM,CAACC,SAAUuI,KAAKvI,SAAUC,sBAAuBsI,KAAK0D,QAAQhM,wBACrElB,EAACsC,EAAMgB,OAAAC,OAAA,GAAKkK,IAEZzN,EAAA,OAAKC,MAAM,gFACTD,EAAA,SAAOC,MAAM,iBACXD,EAAA,aACAA,EAAA,UACEA,EAAA,UACEA,EAAA,SAAOqC,KAAK,WAAWJ,MAAM,OAAO4L,QAASrE,KAAK8B,oBAC3C3G,SAAUvD,GAAKoI,KAAKsE,uBAAuB1M,GAC3C2M,IAAKC,GAAMxE,KAAKiC,kBAAoBuC,KAE7ChO,EAAA,UAAIA,EAAA,QAAMC,MAAM,cAAcuJ,KAAK0D,QAAQlE,KAC3ChJ,EAAA,UAAKwJ,KAAK0D,QAAQe,aAClBjO,EAAA,UAAKwJ,KAAK0D,QAAQgB,UAClBlO,EAAA,MAAIC,MAAM,kBAAkBuJ,KAAK0D,QAAQiB,SACzCnO,EAAA,UAAKwJ,KAAK0D,QAAQkB,cAClBpO,EAAA,UAAKwJ,KAAK0D,QAAQxE,QAClB1I,EAAA,UAAKwJ,KAAK0D,QAAQmB,SAClBrO,EAAA,UAAKwJ,KAAK0D,QAAQoB,UAClBtO,EAAA,aAGFA,EAAA,SAAOC,MAAM,8CACZ4I,EAAkB3E,MAAMa,KAAIwH,IAC3B,MAAMgC,EAAc9F,EAAkB8D,EAAiBe,WACvD,MAAMtI,EAAawE,KAAKV,4BAA4ByC,WAAUjL,GAAKA,IAAMiM,EAAiBvD,MAAO,EACjG,MAAMpD,EAAsC6D,EAA2BhE,MAAKnF,GAAKA,EAAEoF,cAAgB6G,EAAiB7G,eACpH,MAAM0I,IAAiBxI,EAAYA,EAASzD,MAAQ,WAAc,yBAElE,OACEnC,EAAA,UACEA,EAAA,UACEA,EAAA,SAAOqC,KAAK,WAAWJ,MAAOsK,EAAiBvD,GAAI6E,QAAS7I,EAAYL,SAAUvD,GAAKoI,KAAKgF,8BAA8BpN,EAAGmL,MAE/HvM,EAAA,UACEA,EAAA,OAAKC,MAAM,mDACTD,EAAA,KAAGoD,QAAShC,GAAKoI,KAAK8C,wBAAwBlL,EAAGmL,GAAmBkC,KAAK,IAAIxO,MAAM,sCAAqCD,EAAA,YAAOuM,EAAiBvD,OAIpJhJ,EAAA,UAAKuM,EAAiBmC,eACtB1O,EAAA,UAAKoO,GACLpO,EAAA,MAAIC,MAAM,kBAAkBsM,EAAiB4B,SAC7CnO,EAAA,UAAKuM,EAAiBpK,MACtBnC,EAAA,UACEA,EAAA,OAAKC,MAAM,mDACTD,EAAA,OAAKC,MAAO,sDAAsDsO,MAClEvO,EAAA,YAAOuM,EAAiB7D,UAG5B1I,EAAA,UAAK2O,EAAgBpC,EAAiBqC,UAAW,MACjD5O,EAAA,UAAK2O,EAAgBpC,EAAiBsC,WAAY,MAClD7O,EAAA,MAAIC,MAAM,WACRD,EAAA,qBAAmB8O,UAAW,CAC5B,CAACjL,KAAM,OAAQI,QAAS7C,GAAKoI,KAAK8C,wBAAwBlL,EAAGmL,GAAmBpI,KAAMnE,EAAC+O,EAAQ,OAC/F,CAAClL,KAAM,SAAUI,QAAS7C,GAAKoI,KAAKwF,cAAc5N,EAAGmL,GAAmBpI,KAAMnE,EAACiP,EAAU,WAG1F,MAKXjP,EAAA,cAAY2M,KAAMnD,KAAKuB,YAAakB,SAAUzC,KAAK0C,gBAAiBU,WAAYA,EAAYF,YAAalD,KAAKkD,gB,CA0ChH/C,8BAEN,MAAMxB,EAAwC,CAC5CzG,WAAY8H,KAAK9H,WACjBgE,aAAc8D,KAAKlE,6BACnBoD,OAAQc,KAAKtD,eACboH,UAAW9D,KAAK6C,kBAChBL,QAASxC,KAAKwC,QACdkD,eAAgBC,EAAeC,WAC/BzC,KAAMnD,KAAKuB,YACXkB,SAAUzC,KAAK0C,iBAGjBhE,EAAeC,GACfqB,KAAKX,wBAA0BW,KAAKW,qBAAqBiB,KAAKjD,E,CA8DxDwB,oBAAoBvI,EAAemL,SAOnC/C,KAAKW,qBAAqBkF,OAAO9C,SACjC/C,KAAKc,uB,CAQLwD,uBAAuB1M,GAC7B,MAAMkO,EAAWlO,EAAEG,OACnB,MAAMqH,EAAY0G,EAASzB,QAC3BrE,KAAK+F,iBAAmB3G,EACxBY,KAAKV,4BAA8BH,EAAgCC,EAAWY,KAAKX,kBAAmBW,KAAKV,4B,CAGrG0F,8BAA8BpN,EAAUmL,GAC9C,MAAM+C,EAAWlO,EAAEG,OACnB,MAAMqH,EAAY0G,EAASzB,QAE3B,GAAIjF,EACFY,KAAKV,4BAA8B,IAAIU,KAAKV,4BAA6ByD,EAAiBvD,SAE1FQ,KAAKV,4BAA8BU,KAAKV,4BAA4BI,QAAO5I,GAAKA,GAAKiM,EAAiBvD,KAExGQ,KAAKgC,gC,gCAvUSnC,EAAAwD,kBAAoB,GACpBxD,EAAAmG,cAAgB,EAChBnG,EAAAoG,cAAgB,IAChBpG,EAAAqG,WAAa,S"}