{"version":3,"names":["VariablePickerInput","this","onChange","e","inputElement","target","variableId","value","variable","workflowDefinition","variables","find","x","id","inputContext","inputChanged","SyntaxNames","Literal","render","inputDescriptor","fieldName","name","fieldId","displayName","description","currentValue","getPropertyValue","undefined","defaultValue","toString","h","WorkflowDefinitionTunnel","Consumer","_a","FormEntry","label","hint","map","variableName","isSelected","selected","injectProps"],"sources":["./src/components/inputs/variable-picker.tsx"],"sourcesContent":["import {Component, h, Prop} from '@stencil/core';\r\nimport {SyntaxNames, Variable} from \"../../models\";\r\nimport {ActivityInputContext} from \"../../services/activity-input-driver\";\r\nimport {getPropertyValue} from \"../../utils\";\r\nimport {FormEntry} from \"../shared/forms/form-entry\";\r\nimport WorkflowDefinitionTunnel from \"../../modules/workflow-definitions/state\";\r\nimport {WorkflowDefinition} from \"../../modules/workflow-definitions/models/entities\";\r\n\r\n@Component({\r\n  tag: 'elsa-variable-picker-input',\r\n  shadow: false\r\n})\r\nexport class VariablePickerInput {\r\n  @Prop() inputContext: ActivityInputContext;\r\n  @Prop() workflowDefinition: WorkflowDefinition; // Injected by WorkflowDefinitionTunnel\r\n\r\n  public render() {\r\n    const inputContext = this.inputContext;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const fieldName = inputDescriptor.name;\r\n    const fieldId = inputDescriptor.name;\r\n    const displayName = inputDescriptor.displayName;\r\n    const description = inputDescriptor.description;\r\n    let currentValue = getPropertyValue(inputContext) as Variable;\r\n\r\n    if (currentValue == undefined) {\r\n      const defaultValue = inputDescriptor.defaultValue;\r\n      currentValue = defaultValue ? defaultValue.toString() : undefined;\r\n    }\r\n\r\n    return (\r\n      <WorkflowDefinitionTunnel.Consumer>\r\n        {({workflowDefinition}) => {\r\n          let variables: Variable[] = workflowDefinition?.variables ?? [];\r\n          variables = [null, ...variables];\r\n          return <FormEntry fieldId={fieldId} label={displayName} hint={description}>\r\n            <select id={fieldId} name={fieldName} onChange={e => this.onChange(e)}>\r\n              {variables.map((variable: Variable) => {\r\n                const variableName = variable?.name;\r\n                const variableId = variable?.id;\r\n                const isSelected = variableId == currentValue?.id;\r\n                return <option value={variableId} selected={isSelected}>{variableName}</option>;\r\n              })}\r\n            </select>\r\n          </FormEntry>\r\n        }}\r\n      </WorkflowDefinitionTunnel.Consumer>\r\n    );\r\n  }\r\n\r\n  private onChange = (e: Event) => {\r\n    const inputElement = e.target as HTMLSelectElement;\r\n    const variableId = inputElement.value;\r\n    const variable = this.workflowDefinition.variables.find(x => x.id == variableId);\r\n\r\n    this.inputContext.inputChanged(variable, SyntaxNames.Literal);\r\n  }\r\n}\r\nWorkflowDefinitionTunnel.injectProps(VariablePickerInput, ['workflowDefinition']);\r\n"],"mappings":"oWAYaA,EAAmB,M,yBAsCtBC,KAAAC,SAAYC,IAClB,MAAMC,EAAeD,EAAEE,OACvB,MAAMC,EAAaF,EAAaG,MAChC,MAAMC,EAAWP,KAAKQ,mBAAmBC,UAAUC,MAAKC,GAAKA,EAAEC,IAAMP,IAErEL,KAAKa,aAAaC,aAAaP,EAAUQ,EAAYC,QAAQ,E,8DAvCxDC,SACL,MAAMJ,EAAeb,KAAKa,aAC1B,MAAMK,EAAkBL,EAAaK,gBACrC,MAAMC,EAAYD,EAAgBE,KAClC,MAAMC,EAAUH,EAAgBE,KAChC,MAAME,EAAcJ,EAAgBI,YACpC,MAAMC,EAAcL,EAAgBK,YACpC,IAAIC,EAAeC,EAAiBZ,GAEpC,GAAIW,GAAgBE,UAAW,CAC7B,MAAMC,EAAeT,EAAgBS,aACrCH,EAAeG,EAAeA,EAAaC,WAAaF,S,CAG1D,OACEG,EAACC,EAAyBC,SAAQ,MAC/B,EAAEvB,yB,MACD,IAAIC,GAAwBuB,EAAAxB,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,aAAS,MAAAuB,SAAA,EAAAA,EAAI,GAC7DvB,EAAY,CAAC,QAASA,GACtB,OAAOoB,EAACI,EAAS,CAACZ,QAASA,EAASa,MAAOZ,EAAaa,KAAMZ,GAC5DM,EAAA,UAAQjB,GAAIS,EAASD,KAAMD,EAAWlB,SAAUC,GAAKF,KAAKC,SAASC,IAChEO,EAAU2B,KAAK7B,IACd,MAAM8B,EAAe9B,IAAQ,MAARA,SAAQ,SAARA,EAAUa,KAC/B,MAAMf,EAAaE,IAAQ,MAARA,SAAQ,SAARA,EAAUK,GAC7B,MAAM0B,EAAajC,IAAcmB,IAAY,MAAZA,SAAY,SAAZA,EAAcZ,IAC/C,OAAOiB,EAAA,UAAQvB,MAAOD,EAAYkC,SAAUD,GAAaD,EAAsB,KAGzE,G,GActBP,EAAyBU,YAAYzC,EAAqB,CAAC,8B"}