{"version":3,"names":["SlideOverPanel","this","onCloseClick","async","hide","onOverlayClick","e","target","overlayElement","onTransitionEnd","isHiding","isVisible","collapsed","emit","isShowing","handleExpanded","value","render","renderPanel","onTabClick","tab","preventDefault","selectedTab","wrapperClass","backdropClass","panelClass","tabs","actions","h","class","role","onClick","ref","el","formElement","method","id","headerText","type","xmlns","fill","viewBox","stroke","d","map","cssClass","href","displayText","content","action","display","isPrimary","buttonType","PanelActionType","Submit","cancelHandler","emptyHandler","clickHandler","Cancel","text"],"sources":["./src/components/shared/slide-over-panel/slide-over-panel.tsx"],"sourcesContent":["import {Component, Event, EventEmitter, h, Method, Prop, State, Watch} from '@stencil/core';\r\nimport {TabDefinition} from '../../../models';\r\nimport {PanelActionDefinition, PanelActionType} from \"../../shared/form-panel/models\";\r\n\r\n@Component({\r\n  tag: 'elsa-slide-over-panel'\r\n})\r\nexport class SlideOverPanel {\r\n  private overlayElement: HTMLElement;\r\n  private formElement: HTMLFormElement;\r\n\r\n  @Prop() public headerText: string;\r\n  @Prop() public tabs: Array<TabDefinition> = [];\r\n  @Prop({mutable: true}) public selectedTab?: TabDefinition;\r\n  @Prop() public actions: Array<PanelActionDefinition> = [];\r\n  @Prop() public expand: boolean;\r\n  @Event() public collapsed: EventEmitter;\r\n\r\n  @Method()\r\n  public async show(): Promise<void> {\r\n    this.isShowing = true;\r\n    this.isHiding = false;\r\n    this.isVisible = true;\r\n  }\r\n\r\n  @Method()\r\n  public async hide(): Promise<void> {\r\n    this.isHiding = true;\r\n    this.isShowing = false;\r\n  }\r\n\r\n  @State() public isHiding: boolean = false;\r\n  @State() public isShowing: boolean = false;\r\n  @State() public isVisible: boolean = false;\r\n\r\n  @Watch('expand')\r\n  private handleExpanded(value: boolean) {\r\n    this.isShowing = value;\r\n    this.isHiding = !value;\r\n\r\n    if (value)\r\n      this.isVisible = true;\r\n  }\r\n\r\n  public render() {\r\n    return this.renderPanel();\r\n  }\r\n\r\n  private onCloseClick = async () => {\r\n    await this.hide();\r\n  };\r\n\r\n  private onOverlayClick = async (e: MouseEvent) => {\r\n    if (e.target != this.overlayElement)\r\n      return;\r\n\r\n    // Hide panel.\r\n    await this.hide();\r\n  };\r\n\r\n  private onTransitionEnd = (e: TransitionEvent) => {\r\n    if (this.isHiding) {\r\n      this.isVisible = false;\r\n      this.isHiding = false;\r\n      this.collapsed.emit();\r\n    }\r\n  };\r\n\r\n  private onTabClick(e: Event, tab: TabDefinition) {\r\n    e.preventDefault();\r\n    this.selectedTab = tab;\r\n  }\r\n\r\n  private renderPanel() {\r\n    const isVisible = this.isVisible;\r\n    const isHiding = this.isHiding;\r\n    const wrapperClass = isVisible ? 'tw-block' : 'hidden';\r\n    const backdropClass = !isHiding && isVisible ? 'tw-opacity-50' : 'tw-opacity-0';\r\n    const panelClass = !isHiding && isVisible ? 'tw-max-w-2xl w-2xl' : 'tw-max-tw-w-0 tw-w-0';\r\n    const tabs = this.tabs;\r\n    const selectedTab = this.selectedTab;\r\n    const actions = this.actions;\r\n\r\n    return (\r\n      <div class={`tw-fixed tw-inset-0 tw-overflow-hidden tw-z-10 ${wrapperClass}`} aria-labelledby=\"slide-over-title\" role=\"dialog\"\r\n           aria-modal=\"true\">\r\n        <div class=\"tw-absolute tw-inset-0 tw-overflow-hidden\">\r\n\r\n          <div class={`tw-absolute tw-inset-0 tw-bg-gray-100 tw-ease-in-out tw-duration-200 ${backdropClass}`}\r\n               onTransitionEnd={e => this.onTransitionEnd(e)}/>\r\n\r\n          <div class=\"tw-absolute tw-inset-0\" aria-hidden=\"true\" onClick={e => this.onOverlayClick(e)}\r\n               ref={el => this.overlayElement = el}>\r\n\r\n            <div class=\"tw-fixed tw-inset-y-0 tw-right-0 tw-pl-10 tw-max-w-full tw-flex sm:tw-pl-16\">\r\n\r\n              <div class={`tw-w-screen tw-ease-in-out tw-duration-200 ${panelClass}`}>\r\n                <form class=\"tw-h-full tw-flex tw-flex-col tw-bg-white tw-shadow-xl\"\r\n                      ref={el => this.formElement = el} method=\"post\">\r\n                  <div class=\"tw-flex tw-flex-col tw-flex-1\">\r\n\r\n                    <div class=\"tw-px-4 tw-py-6 tw-bg-gray-50 sm:tw-px-6\">\r\n                      <div class=\"tw-flex tw-items-start tw-justify-between tw-space-x-3\">\r\n                        <div class=\"tw-space-y-1\">\r\n                          <h2 class=\"tw-text-lg tw-font-medium tw-text-gray-900\" id=\"slide-over-title\">\r\n                            {this.headerText}\r\n                          </h2>\r\n                        </div>\r\n                        <div class=\"tw-h-7 tw-flex tw-items-center\">\r\n                          <button type=\"button\" class=\"tw-text-gray-400 hover:tw-text-gray-500\"\r\n                                  onClick={() => this.onCloseClick()}>\r\n                            <span class=\"tw-sr-only\">Close panel</span>\r\n                            <svg class=\"tw-h-6 tw-w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                                 stroke=\"currentColor\" aria-hidden=\"true\">\r\n                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                                    d=\"M6 18L18 6M6 6l12 12\"/>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"tw-border-b tw-border-gray-200\">\r\n                      <nav class=\"-tw-mb-px tw-flex\" aria-label=\"Tabs\">\r\n                        {tabs.map(tab => {\r\n                          const cssClass = tab == selectedTab ? 'tw-border-blue-500 tw-text-blue-600' : 'tw-border-transparent tw-text-gray-500 hover:tw-text-gray-700 hover:tw-border-gray-300';\r\n                          return <a href=\"#\"\r\n                                    onClick={e => this.onTabClick(e, tab)}\r\n                                    class={`${cssClass} tw-py-4 tw-px-1 tw-text-center tw-border-b-2 tw-font-medium tw-text-sm tw-flex-1`}>\r\n                            {tab.displayText}\r\n                          </a>\r\n                        })}\r\n                      </nav>\r\n                    </div>\r\n\r\n                    <div class=\"tw-flex-1 tw-relative\">\r\n\r\n                      <div class=\"tw-absolute tw-inset-0 tw-overflow-y-scroll\">\r\n                        {tabs.map(tab => {\r\n                          const cssClass = tab == selectedTab ? '' : 'hidden';\r\n                          return <div class={cssClass}>\r\n                            {tab.content()}\r\n                          </div>\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"tw-flex-shrink-0 tw-px-4 tw-border-t tw-border-gray-200 tw-py-5 sm:tw-px-6\">\r\n                    <div class=\"tw-space-x-3 tw-flex tw-justify-end\">\r\n                      {actions.map(action => {\r\n\r\n                        if (action.display)\r\n                          return action.display(action);\r\n\r\n                        const cssClass = action.isPrimary ? 'tw-text-white tw-bg-blue-600 hover:tw-bg-blue-700 tw-border-transparent' : 'tw-bg-white tw-border-gray-300 tw-text-gray-700 hover:tw-bg-gray-50';\r\n                        const buttonType = action.type == PanelActionType.Submit ? 'submit' : 'button';\r\n                        const cancelHandler = async () => await this.hide();\r\n\r\n                        const emptyHandler = () => {\r\n                        };\r\n\r\n                        const clickHandler = !!action.onClick ? action.onClick : action.type == PanelActionType.Cancel ? cancelHandler : emptyHandler;\r\n\r\n                        return <button type={buttonType}\r\n                                       onClick={e => clickHandler({e, action})}\r\n                                       class={`${cssClass} tw-py-2 tw-px-4 tw-border tw-rounded-md tw-shadow-sm tw-text-sm tw-font-medium focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-offset-2 focus:tw-ring-blue-500`}>\r\n                          {action.text}\r\n                        </button>\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}