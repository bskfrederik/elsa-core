import{r as s,h as t}from"./p-a7a3baa1.js";import{R as o,C as i,Y as n,Z as e,n as c}from"./p-691e5295.js";import"./p-219f806a.js";import"./p-b6964c5d.js";import{F as r}from"./p-b15e4c38.js";import"./p-144a434e.js";import"./p-72dc819a.js";import"./p-e71312f9.js";import"./p-ddecd487.js";import"./p-ec4413cd.js";const a=class{constructor(t){s(this,t);this.workflowDefinitions=[];this.onChange=s=>{const t=s.target;const i=t.value;this.inputContext.inputChanged(i,o.Literal)};this.inputContext=undefined}async componentWillLoad(){const s=i.get(n);const t=await s.list({versionOptions:{isPublished:true},orderBy:e.Name});this.workflowDefinitions=t.items}render(){var s;const o=this.inputContext;const i=o.inputDescriptor;const n=i.name;const e=i.name;const a=i.displayName;const p=i.description;const d=this.workflowDefinitions;const l=c(o);const m=(s=l===null||l===void 0?void 0:l.expression)===null||s===void 0?void 0:s.value;return t(r,{fieldId:e,label:a,hint:p},t("select",{id:e,name:n,onChange:s=>this.onChange(s)},d.map((s=>{const o=s.definitionId;const i=o==m;return t("option",{value:o,selected:i},s.name)}))))}};export{a as elsa_workflow_definition_picker_input};
//# sourceMappingURL=p-8ea4f2bb.entry.js.map