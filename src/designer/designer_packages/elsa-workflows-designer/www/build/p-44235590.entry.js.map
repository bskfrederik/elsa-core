{"version":3,"names":["OutcomePicker","this","onExpressionChanged","e","inputContext","inputChanged","detail","expression","syntax","onChange","inputElement","target","outcome","value","SyntaxNames","Object","render","inputDescriptor","fieldName","name","fieldId","displayName","description","input","getInputPropertyValue","_a","_c","_b","type","defaultSyntax","h","WorkflowDefinitionTunnel","Consumer","workflowDefinition","outcomes","label","hint","id","map","isSelected","selected"],"sources":["./src/components/inputs/outcome-picker.tsx"],"sourcesContent":["import {Component, Prop, h} from '@stencil/core';\r\nimport {ObjectExpression, LiteralExpression, SyntaxNames, Variable} from \"../../models\";\r\nimport {ActivityInputContext} from \"../../services/activity-input-driver\";\r\nimport {getInputPropertyValue, getPropertyValue} from \"../../utils\";\r\nimport {FormEntry} from \"../shared/forms/form-entry\";\r\nimport WorkflowDefinitionTunnel from \"../../modules/workflow-definitions/state\";\r\nimport {OutputDefinition} from \"../../modules/workflow-definitions/models/entities\";\r\nimport {ExpressionChangedArs} from \"../shared/input-control-switch/input-control-switch\";\r\n\r\n@Component({\r\n  tag: 'elsa-outcome-picker-input',\r\n  shadow: false\r\n})\r\nexport class OutcomePicker {\r\n  @Prop() public inputContext: ActivityInputContext;\r\n\r\n  public render() {\r\n    const inputContext = this.inputContext;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const fieldName = inputDescriptor.name;\r\n    const fieldId = inputDescriptor.name;\r\n    const displayName = inputDescriptor.displayName;\r\n    const description = inputDescriptor.description;\r\n    const input = getInputPropertyValue(inputContext);\r\n    const value = (input?.expression as ObjectExpression)?.value;\r\n    const syntax = input?.expression?.type ?? inputDescriptor.defaultSyntax;\r\n\r\n    return (\r\n      <WorkflowDefinitionTunnel.Consumer>\r\n        {({workflowDefinition}) => {\r\n          let outcomes: string[] = workflowDefinition?.outcomes ?? [];\r\n          outcomes = [null, ...outcomes];\r\n          return <elsa-input-control-switch label={displayName} hint={description} syntax={syntax} expression={value} onExpressionChanged={this.onExpressionChanged}>\r\n            <select id={fieldId} name={fieldName} onChange={e => this.onChange(e)}>\r\n              {outcomes.map((outcome: string) => {\r\n                const displayName = outcome ?? '';\r\n                const isSelected = outcome == value;\r\n                return <option value={outcome} selected={isSelected}>{displayName}</option>;\r\n              })}\r\n            </select>\r\n          </elsa-input-control-switch>\r\n        }}\r\n      </WorkflowDefinitionTunnel.Consumer>\r\n    );\r\n  }\r\n\r\n  private onExpressionChanged = (e: CustomEvent<ExpressionChangedArs>) => {\r\n    this.inputContext.inputChanged(e.detail.expression, e.detail.syntax);\r\n  }\r\n\r\n  private onChange = (e: Event) => {\r\n    const inputElement = e.target as HTMLSelectElement;\r\n    const outcome = inputElement.value;\r\n    this.inputContext.inputChanged(outcome, SyntaxNames.Object);\r\n  }\r\n}\r\n"],"mappings":"wSAaaA,EAAa,M,yBAiChBC,KAAAC,oBAAuBC,IAC7BF,KAAKG,aAAaC,aAAaF,EAAEG,OAAOC,WAAYJ,EAAEG,OAAOE,OAAO,EAG9DP,KAAAQ,SAAYN,IAClB,MAAMO,EAAeP,EAAEQ,OACvB,MAAMC,EAAUF,EAAaG,MAC7BZ,KAAKG,aAAaC,aAAaO,EAASE,EAAYC,OAAO,E,4BArCtDC,S,UACL,MAAMZ,EAAeH,KAAKG,aAC1B,MAAMa,EAAkBb,EAAaa,gBACrC,MAAMC,EAAYD,EAAgBE,KAClC,MAAMC,EAAUH,EAAgBE,KAChC,MAAME,EAAcJ,EAAgBI,YACpC,MAAMC,EAAcL,EAAgBK,YACpC,MAAMC,EAAQC,EAAsBpB,GACpC,MAAMS,GAAQY,EAACF,IAAK,MAALA,SAAK,SAALA,EAAOhB,cAA+B,MAAAkB,SAAA,SAAAA,EAAEZ,MACvD,MAAML,GAASkB,GAAAC,EAAAJ,IAAK,MAALA,SAAK,SAALA,EAAOhB,cAAU,MAAAoB,SAAA,SAAAA,EAAEC,QAAI,MAAAF,SAAA,EAAAA,EAAIT,EAAgBY,cAE1D,OACEC,EAACC,EAAyBC,SAAQ,MAC/B,EAAEC,yB,MACD,IAAIC,GAAqBT,EAAAQ,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,YAAQ,MAAAT,SAAA,EAAAA,EAAI,GACzDS,EAAW,CAAC,QAASA,GACrB,OAAOJ,EAAA,6BAA2BK,MAAOd,EAAae,KAAMd,EAAad,OAAQA,EAAQD,WAAYM,EAAOX,oBAAqBD,KAAKC,qBACpI4B,EAAA,UAAQO,GAAIjB,EAASD,KAAMD,EAAWT,SAAUN,GAAKF,KAAKQ,SAASN,IAChE+B,EAASI,KAAK1B,IACb,MAAMS,EAAcT,IAAO,MAAPA,SAAO,EAAPA,EAAW,GAC/B,MAAM2B,EAAa3B,GAAWC,EAC9B,OAAOiB,EAAA,UAAQjB,MAAOD,EAAS4B,SAAUD,GAAalB,EAAqB,KAGrD,G"}