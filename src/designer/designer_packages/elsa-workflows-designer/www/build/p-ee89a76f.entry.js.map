{"version":3,"names":["FlowSwitchEditor","this","supportedSyntaxes","SyntaxNames","JavaScript","Literal","updateActivity","inputContext","activity","inputDescriptor","propertyName","name","camelCasePropertyName","camelCase","cases","notifyInputChanged","onInputContextChanged","value","updateCases","componentWillLoad","onAddCaseClick","caseName","length","newCase","label","condition","type","onDeleteCaseClick","switchCase","filter","x","onCaseLabelChanged","e","currentTarget","trim","onCaseExpressionChanged","detail","onCaseSyntaxChanged","select","syntax","Object","assign","render","displayName","h","class","map","index","expression","language","mapSyntaxToLanguage","key","onChange","singleLineMode","editorHeight","padding","onValueChanged","supportedSyntax","selected","onClick","TrashBinButtonIcon","PlusButtonIcon"],"sources":["./src/modules/switch/flow/flow-switch-editor.tsx"],"sourcesContent":["import {Component, h, Prop, State, Watch} from \"@stencil/core\";\r\nimport {camelCase} from 'lodash';\r\nimport {ActivityInputContext} from \"../../../services/activity-input-driver\";\r\nimport {mapSyntaxToLanguage} from \"../../../utils\";\r\nimport {SyntaxNames} from \"../../../models\";\r\nimport {MonacoValueChangedArgs} from \"../../../components/shared/monaco-editor/monaco-editor\";\r\nimport {TrashBinButtonIcon} from \"../../../components/icons/buttons/trash-bin\";\r\nimport {PlusButtonIcon} from \"../../../components/icons/buttons/plus\";\r\nimport {FlowSwitchCase} from \"./models\";\r\n\r\n@Component({\r\n  tag: 'elsa-flow-switch-editor',\r\n  shadow: false\r\n})\r\nexport class FlowSwitchEditor {\r\n  @Prop() inputContext: ActivityInputContext;\r\n  @State() private cases: Array<FlowSwitchCase> = [];\r\n  private supportedSyntaxes: Array<string> = [SyntaxNames.JavaScript, SyntaxNames.Literal];\r\n\r\n  @Watch('inputContext')\r\n  onInputContextChanged(value: ActivityInputContext){\r\n    this.updateCases();\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.updateCases();\r\n  }\r\n\r\n  private updateCases(){\r\n    const inputContext = this.inputContext;\r\n    const activity = this.inputContext.activity;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const propertyName = inputDescriptor.name;\r\n    const camelCasePropertyName = camelCase(propertyName);\r\n    this.cases = activity[camelCasePropertyName] || [];\r\n  }\r\n\r\n  private onAddCaseClick() {\r\n    const caseName = `Case ${this.cases.length + 1}`;\r\n    const newCase: FlowSwitchCase = {label: caseName, condition: {type: SyntaxNames.JavaScript, value: ''}};\r\n    this.cases = [...this.cases, newCase];\r\n    this.updateActivity();\r\n  }\r\n\r\n  private onDeleteCaseClick(switchCase: FlowSwitchCase) {\r\n    this.cases = this.cases.filter(x => x != switchCase);\r\n    this.updateActivity();\r\n  }\r\n\r\n  private onCaseLabelChanged(e: Event, switchCase: FlowSwitchCase) {\r\n    switchCase.label = (e.currentTarget as HTMLInputElement).value.trim();\r\n    this.updateActivity();\r\n  }\r\n\r\n  private onCaseExpressionChanged(e: CustomEvent<MonacoValueChangedArgs>, switchCase: FlowSwitchCase) {\r\n    switchCase.condition = {type: switchCase.condition.type, value: e.detail.value};\r\n    this.updateActivity();\r\n  }\r\n\r\n  private onCaseSyntaxChanged(e: Event, switchCase: FlowSwitchCase) {\r\n    const select = e.currentTarget as HTMLSelectElement;\r\n    const syntax = select.value;\r\n    switchCase.condition = {...switchCase.condition, type: syntax};\r\n    this.cases = [...this.cases];\r\n    this.updateActivity();\r\n  }\r\n\r\n  private updateActivity = () => {\r\n    const inputContext = this.inputContext;\r\n    const activity = this.inputContext.activity;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const propertyName = inputDescriptor.name;\r\n    const camelCasePropertyName = camelCase(propertyName);\r\n\r\n    activity[camelCasePropertyName] = this.cases;\r\n    this.inputContext.notifyInputChanged();\r\n  };\r\n\r\n  render() {\r\n    const inputContext = this.inputContext;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const displayName = inputDescriptor.displayName;\r\n    const cases = this.cases;\r\n    const supportedSyntaxes = this.supportedSyntaxes;\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"tw-p-4\">\r\n          <label>{displayName}</label>\r\n        </div>\r\n        <table class=\"tw-mt-1\">\r\n          <thead>\r\n          <tr>\r\n            <th class=\"tw-w-3/12\">Name</th>\r\n            <th class=\"tw-w-8/12\">Expression</th>\r\n            <th class=\"tw-w-1/12\">&nbsp;</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {cases.map((switchCase, index) => {\r\n            const condition = switchCase.condition;\r\n            const expression = condition.value;\r\n            const syntax = condition.type;\r\n            const language = mapSyntaxToLanguage(condition.type);\r\n\r\n            return (\r\n              <tr key={`case-${index}`}>\r\n                <td class=\"tw-py-2 tw-pr-5\">\r\n                  <input type=\"text\" value={switchCase.label} onChange={e => this.onCaseLabelChanged(e, switchCase)}/>\r\n                </td>\r\n                <td class=\"tw-py-2 tw-pl-5\">\r\n                  <div class=\"tw-mt-1 tw-relative tw-rounded-md tw-shadow-sm tw-h-full\">\r\n                    <elsa-monaco-editor\r\n                      key={`monaco-editor-${index}`}\r\n                      value={expression}\r\n                      language={language}\r\n                      singleLineMode={true}\r\n                      editorHeight=\"2.75em\"\r\n                      padding=\"tw-pt-1.5 tw-pl-1 tw-pr-28\"\r\n                      onValueChanged={e => this.onCaseExpressionChanged(e, switchCase)}\r\n                    />\r\n                    <div class=\"tw-absolute tw-inset-y-0 tw-right-0 tw-flex tw-items-center\">\r\n                      <select onChange={e => this.onCaseSyntaxChanged(e, switchCase)} class=\"focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-h-full tw-py-0 tw-pl-2 tw-pr-7 tw-border-transparent tw-bg-transparent tw-text-gray-500 sm:tw-text-sm tw-rounded-md\">\r\n                        {supportedSyntaxes.map(supportedSyntax => {\r\n                          const selected = supportedSyntax == syntax;\r\n                          return <option selected={selected}>{supportedSyntax}</option>;\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <button type=\"button\" onClick={() => this.onDeleteCaseClick(switchCase)} class=\"elsa-icon-button\">\r\n                    <TrashBinButtonIcon/>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n          </tbody>\r\n        </table>\r\n        <div class=\"tw-p-4\">\r\n          <button type=\"button\" onClick={() => this.onAddCaseClick()} class=\"elsa-btn\">\r\n            <PlusButtonIcon/>\r\n            Add Case\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}