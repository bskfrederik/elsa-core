const t=(t,n)=>{let s=new Map;let e=t;const o=(t,n)=>{if(Array.isArray(t)){[...t].forEach((t=>{n[t]=e[t]}))}else{n[t]=Object.assign({},e)}};const r=(t,n)=>{if(!s.has(t)){s.set(t,n);o(n,t)}return()=>{if(s.has(t)){s.delete(t)}}};const c=({state:t},n)=>{e=t;s.forEach(o);return n};const i=(t,s)=>n(r,s[0]);const f=(t,n)=>{const e=t.prototype;const o=e.connectedCallback;const c=e.disconnectedCallback;e.connectedCallback=function(){r(this,n);if(o){return o.call(this)}};e.disconnectedCallback=function(){s.delete(this);if(c){c.call(this)}}};return{Provider:c,Consumer:i,injectProps:f}};export{t as c};
//# sourceMappingURL=p-37e9f5c1.js.map