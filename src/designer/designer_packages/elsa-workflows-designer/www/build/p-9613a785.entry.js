import{r as t,c as i,h as s,a}from"./p-a7a3baa1.js";import{l as o}from"./p-e71312f9.js";import{P as e}from"./p-7e202d82.js";import{ad as n,ae as r,C as h,B as c,P as d,G as l,J as w,Y as f,M as p,w as y,af as v}from"./p-691e5295.js";import"./p-219f806a.js";import"./p-b6964c5d.js";import{W as k}from"./p-29c25553.js";import{W as u}from"./p-e75c6668.js";import"./p-72dc819a.js";import"./p-144a434e.js";import"./p-ddecd487.js";import"./p-37e9f5c1.js";const m=":root{--workflow-editor-width:480px;--activity-picker-width:300px;--activity-editor-height:200px}elsa-flowchart{position:absolute;left:var(--activity-picker-width);top:54px;right:var(--workflow-editor-width);bottom:var(--activity-editor-height)}.elsa-panel-toolbar{left:var(--activity-picker-width);right:var(--workflow-editor-width)}elsa-panel.panel-state-expanded.elsa-activity-picker-container{width:var(--activity-picker-width)}elsa-panel.panel-state-expanded.elsa-workflow-editor-container{width:var(--workflow-editor-width);right:0;left:unset}elsa-panel.panel-state-expanded.elsa-activity-editor-container{height:var(--activity-editor-height);right:var(--workflow-editor-width);left:var(--activity-picker-width);bottom:0}.activity-picker-closed .activity-list{display:none}.activity-picker-closed elsa-flowchart{left:0}.object-editor-closed .object-editor-container{display:none}.object-editor-closed elsa-flowchart{right:0}.activity-editor-closed .activity-editor-container{display:none}.activity-editor-closed elsa-flowchart{bottom:0}.panel-bottom{width:calc(100vw - var(--workflow-editor-width) - var(--activity-picker-width))}";const b=class{constructor(a){t(this,a);this.workflowUpdated=i(this,"workflowUpdated",7);this.renderSelectedObject=()=>{if(!!this.selectedActivity)return s("elsa-activity-properties-editor",{isReadonly:this.workflowDefinition.isReadonly,activity:this.selectedActivity,variables:this.workflowDefinitionState.variables,outputs:this.workflowDefinitionState.outputs,workflowDefinitionId:this.workflowDefinitionState.definitionId,onActivityUpdated:t=>this.onActivityUpdated(t)})};this.getWorkflowDefinitionInternal=async()=>{const t=await this.flowchart.export();const i=this.workflowDefinitionState;i.root=t;return i};this.saveChanges=async()=>{const t=this.workflowDefinitionState;if(t.isReadonly){console.debug("Workflow definition is readonly. Changes will not be saved.");return}if(!t.isLatest){console.debug("Workflow definition is not the latest version. Changes will not be saved.");return}if(await this.hasWorkflowDefinitionAnyUpdatedData(t)){if(t.isPublished){t.version=this.workflowVersions.find((t=>t.isLatest)).version}this.workflowUpdated.emit({workflowDefinition:this.workflowDefinitionState})}await this.updateSelectedActivity()};this.hasWorkflowDefinitionAnyUpdatedData=async t=>{const i=await this.workflowDefinitionApi.get({definitionId:t.definitionId,versionOptions:{version:t.version}});const s=n.cloneDeep(t);r(s.root);return!o.isEqual(i,s)};this.updateLayout=async()=>{await this.flowchart.updateLayout()};this.updateContainerLayout=async(t,i)=>{if(i)this.container.classList.remove(t);else this.container.classList.toggle(t,true);await this.updateLayout()};this.updateActivityInternal=async t=>{t.updatePorts=true;await this.flowchart.updateActivity(t);this.saveChangesDebounced()};this.onActivityPickerPanelStateChanged=async t=>await this.updateContainerLayout("activity-picker-closed",t.expanded);this.onWorkflowEditorPanelStateChanged=async t=>await this.updateContainerLayout("object-editor-closed",t.expanded);this.onActivityEditorPanelStateChanged=async t=>await this.updateContainerLayout("activity-editor-closed",t.expanded);this.onDragOver=t=>{t.preventDefault()};this.onDrop=async t=>{const i=t.dataTransfer.getData("activity-descriptor");const s=JSON.parse(i);await this.flowchart.addActivity({descriptor:s,x:t.pageX,y:t.pageY})};this.onZoomToFit=async()=>await this.flowchart.zoomToFit();this.onAutoLayout=async t=>{await this.flowchart.autoLayout(t)};this.onActivityUpdated=async t=>{var i,s,a;const o={activity:t.detail.activity,id:(s=(i=t.detail.newId)!==null&&i!==void 0?i:t.detail.originalId)!==null&&s!==void 0?s:t.detail.activity.id,originalId:(a=t.detail.originalId)!==null&&a!==void 0?a:t.detail.activity.id};await this.updateActivityInternal(o)};this.onWorkflowPropsUpdated=t=>{this.saveChangesDebounced();if(t.detail.updatedTab==u.Variables){const t=this.selectedActivity;this.selectedActivity=null;this.selectedActivity=t}};this.onVersionSelected=async t=>{const i=t.detail;const s=await this.workflowDefinitionApi.get({definitionId:i.definitionId,versionOptions:{version:i.version}});await this.importWorkflow(s)};this.onDeleteVersionClicked=async t=>{const i=t.detail;await this.workflowDefinitionApi.deleteVersion({definitionId:i.definitionId,version:i.version});const s=await this.workflowDefinitionApi.get({definitionId:i.definitionId,versionOptions:{isLatest:true}});await this.loadWorkflowVersions();await this.importWorkflow(s)};this.onRevertVersionClicked=async t=>{const i=t.detail;await this.workflowDefinitionApi.revertVersion({definitionId:i.definitionId,version:i.version});const s=await this.workflowDefinitionApi.get({definitionId:i.definitionId,versionOptions:{isLatest:true}});await this.loadWorkflowVersions();await this.importWorkflow(s)};this.workflowDefinition=undefined;this.monacoLibPath=undefined;this.workflowDefinitionState=undefined;this.selectedActivity=undefined;this.workflowVersions=[];this.eventBus=h.get(c);this.pluginRegistry=h.get(d);this.activityNameFormatter=h.get(l);this.portProviderRegistry=h.get(w);this.saveChangesDebounced=o.debounce(this.saveChanges,1e3);this.workflowDefinitionApi=h.get(f)}handleMonacoLibPath(t){const i=h.get(p);i.monacoLibPath=t}async onWorkflowDefinitionChanged(t){await this.importWorkflow(t)}async handleResize(){await this.updateLayout()}async handleContainerSelected(t){this.selectedActivity=t.detail.activity}async getFlowchart(){return this.flowchart}async registerActivityDrivers(t){const i=h.get(y);t(i)}getWorkflowDefinition(){return this.getWorkflowDefinitionInternal()}async importWorkflow(t){await this.updateWorkflowDefinition(t);await this.loadWorkflowVersions();window.requestAnimationFrame((async()=>{await this.flowchart.updateGraph();await this.updateSelectedActivity()}));await this.eventBus.emit(v.WorkflowDefinition.Imported,this,{workflowDefinition:t})}async updateWorkflowDefinition(t){if(this.workflowDefinitionState!=t){this.workflowDefinitionState=t;window.requestAnimationFrame((async()=>{await this.updateSelectedActivity();await this.eventBus.emit(v.WorkflowEditor.WorkflowLoaded,this,{workflowEditor:this,workflowDefinition:t})}))}}async newWorkflow(){const t=await this.flowchart.newRoot();const i={root:t,id:"",name:"Workflow 1",definitionId:"",version:1,isLatest:true,isPublished:false,isReadonly:false,materializerName:"Json"};await this.updateWorkflowDefinition(i);return i}async loadWorkflowVersions(){if(this.workflowDefinitionState.definitionId!=null&&this.workflowDefinitionState.definitionId.length>0){const t=await this.workflowDefinitionApi.getVersions(this.workflowDefinitionState.definitionId);this.workflowVersions=t.sort(((t,i)=>t.version>i.version?-1:1))}else{this.workflowVersions=[]}}async updateActivity(t){const i={activity:t,id:t.id,originalId:t.id};await this.updateActivityInternal(i)}async componentWillLoad(){await this.updateWorkflowDefinition(this.workflowDefinition);await this.loadWorkflowVersions()}async componentDidLoad(){if(!this.workflowDefinitionState)await this.newWorkflow();else await this.importWorkflow(this.workflowDefinitionState);await this.eventBus.emit(v.WorkflowEditor.Ready,this,{workflowEditor:this,workflowDefinition:this.workflowDefinitionState})}async onActivitySelected(t){this.selectedActivity=t.detail.activity}async onChildActivitySelected(t){const{childActivity:i}=t.detail;this.selectedActivity=i}async onGraphUpdated(t){await this.updateSelectedActivity();this.saveChangesDebounced()}async updateSelectedActivity(){var t;if(!!this.selectedActivity)this.selectedActivity=await((t=this.flowchart)===null||t===void 0?void 0:t.getActivity(this.selectedActivity.id))}render(){const t=this.workflowDefinitionState;const i={workflowDefinition:this.workflowDefinitionState};return s(k.Provider,{state:i},s("div",{class:"tw-absolute tw-inset-0",ref:t=>this.container=t},s("elsa-workflow-definition-editor-toolbar",{zoomToFit:this.onZoomToFit,onAutoLayout:t=>this.onAutoLayout(t.detail)}),s("elsa-panel",{class:"elsa-activity-picker-container tw-z-30",position:e.Left,onExpandedStateChanged:t=>this.onActivityPickerPanelStateChanged(t.detail)},s("elsa-workflow-definition-editor-toolbox",{isReadonly:this.workflowDefinition.isReadonly,ref:t=>this.toolbox=t})),s("elsa-flowchart",{isReadonly:this.workflowDefinition.isReadonly,key:t.definitionId,ref:t=>this.flowchart=t,rootActivity:t.root,interactiveMode:true,onActivitySelected:t=>this.onActivitySelected(t),onChildActivitySelected:t=>this.onChildActivitySelected(t),onGraphUpdated:t=>this.onGraphUpdated(t),onDragOver:t=>this.onDragOver(t),onDrop:t=>this.onDrop(t)}),s("elsa-panel",{class:"elsa-workflow-editor-container tw-z-30",position:e.Right,onExpandedStateChanged:t=>this.onWorkflowEditorPanelStateChanged(t.detail)},s("div",{class:"object-editor-container"},s("elsa-workflow-definition-properties-editor",{readonly:this.workflowDefinition.isReadonly,workflowDefinition:this.workflowDefinitionState,workflowVersions:this.workflowVersions,onWorkflowPropsUpdated:t=>this.onWorkflowPropsUpdated(t),onVersionSelected:t=>this.onVersionSelected(t),onDeleteVersionClicked:t=>this.onDeleteVersionClicked(t),onRevertVersionClicked:t=>this.onRevertVersionClicked(t)}))),s("elsa-panel",{class:"elsa-activity-editor-container panel-bottom",position:e.Bottom,onExpandedStateChanged:t=>this.onActivityEditorPanelStateChanged(t.detail)},s("div",{class:"activity-editor-container"},this.renderSelectedObject()))))}get el(){return a(this)}static get watchers(){return{monacoLibPath:["handleMonacoLibPath"],workflowDefinition:["onWorkflowDefinitionChanged"]}}};b.style=m;export{b as elsa_workflow_definition_editor};
//# sourceMappingURL=p-9613a785.entry.js.map