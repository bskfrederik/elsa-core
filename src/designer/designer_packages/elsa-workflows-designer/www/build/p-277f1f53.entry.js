import{r as t,h as i,a as e}from"./p-a7a3baa1.js";import{P as s}from"./p-7e202d82.js";import{a8 as a,a as o,q as n,C as r,B as c,M as l,w as h,af as d}from"./p-691e5295.js";import"./p-219f806a.js";import"./p-b6964c5d.js";import"./p-144a434e.js";import"./p-72dc819a.js";import"./p-e71312f9.js";import"./p-ddecd487.js";var w=undefined&&undefined.__decorate||function(t,i,e,s){var a=arguments.length,o=a<3?i:s===null?s=Object.getOwnPropertyDescriptor(i,e):s,n;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")o=Reflect.decorate(t,i,e,s);else for(var r=t.length-1;r>=0;r--)if(n=t[r])o=(a<3?n(o):a>3?n(i,e,o):n(i,e))||o;return a>3&&o&&Object.defineProperty(i,e,o),o};var f=undefined&&undefined.__metadata||function(t,i){if(typeof Reflect==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(t,i)};let p=class t{constructor(t){this.getHttpClient=async()=>await this.provider.getHttpClient();this.provider=t}async list(t){let i={page:t.page,pageSize:t.pageSize};const e=n(i);const s=await this.getHttpClient();const a=await s.get(`workflow-instances/${t.workflowInstanceId}/journal${e}`);return a.data}async getLastEntry(t){const i=await this.getHttpClient();const e=await i.get(`workflow-instances/${t.workflowInstanceId}/journal/${t.activityId}`);return e.data}};p=w([a(),f("design:paramtypes",[o])],p);const y=":root{--workflow-editor-width:580px;--activity-picker-width:300px;--activity-editor-height:200px}elsa-flowchart{position:absolute;left:var(--activity-picker-width);top:0;right:var(--workflow-editor-width);bottom:var(--activity-editor-height)}.elsa-panel-toolbar{left:var(--activity-picker-width);right:var(--workflow-editor-width)}elsa-panel.panel-state-expanded.elsa-activity-picker-container{width:var(--activity-picker-width)}elsa-panel.panel-state-expanded.elsa-workflow-editor-container{width:var(--workflow-editor-width);right:0;left:unset}elsa-panel.panel-state-expanded.elsa-activity-editor-container{height:var(--activity-editor-height);right:var(--workflow-editor-width);left:var(--activity-picker-width);bottom:0}.activity-picker-closed .activity-list{display:none}.activity-picker-closed elsa-flowchart{left:0}.object-editor-closed .object-editor-container{display:none}.object-editor-closed elsa-flowchart{right:0}.activity-editor-closed .activity-editor-container{display:none}.activity-editor-closed elsa-flowchart{bottom:0}";const u=class{constructor(e){t(this,e);this.isJournalSelecting=false;this.renderSelectedObject=()=>{const t=this.selectedActivity;if(!!t){const e=this.selectedExecutionLogRecord;return i("elsa-activity-properties",{activity:t,activityExecutionLog:e})}};this.getWorkflowInternal=async()=>{const t=await this.flowchartElement.export();const i=this.mainWorkflowDefinitionState;i.root=t;return i};this.updateLayout=async()=>{await this.flowchartElement.updateLayout()};this.updateContainerLayout=async(t,i)=>{if(i)this.container.classList.remove(t);else this.container.classList.toggle(t,true);await this.updateLayout()};this.onActivityPickerPanelStateChanged=async t=>await this.updateContainerLayout("activity-picker-closed",t.expanded);this.onActivityEditorPanelStateChanged=async t=>await this.updateContainerLayout("object-editor-closed",t.expanded);this.monacoLibPath=undefined;this.workflowDefinition=undefined;this.workflowInstance=undefined;this.mainWorkflowDefinitionState=undefined;this.targetWorkflowDefinitionState=undefined;this.workflowInstanceState=undefined;this.selectedActivity=undefined;this.selectedExecutionLogRecord=undefined;this.flowchartRootActivity=undefined;this.eventBus=r.get(c);this.journalApi=r.get(p)}handleMonacoLibPath(t){const i=r.get(l);i.monacoLibPath=t}async onWorkflowDefinitionChanged(t){await this.importWorkflow(t,this.workflowInstanceState)}async onWorkflowInstanceChanged(t){await this.importWorkflow(this.mainWorkflowDefinitionState,this.workflowInstance)}async handleResize(){await this.updateLayout()}async handlePanelCollapsed(){this.selectedActivity=null}async handleContainerSelected(t){}async handleActivitySelected(t){if(this.isJournalSelecting)return;this.selectedActivity=t.detail.activity;const i=this.workflowInstance.id;const e=this.selectedActivity.id;this.selectedExecutionLogRecord=await this.journalApi.getLastEntry({workflowInstanceId:i,activityId:e})}async handleJournalItemSelected(t){const i=t.detail.activity.id;const e=t.detail.activityNode;const s=await this.flowchartElement.getGraph();const a=s.getNodes().find((t=>t.id==i));const o=t.detail.executionEventBlock;this.selectedExecutionLogRecord=o.faulted?o.faultedRecord:o.completed?o.completedRecord:o.startedRecord;this.isJournalSelecting=true;if(a==null){await this.importSelectedItemsWorkflow(e);this.selectedActivity=t.detail.activity;s.resetSelection()}else{this.selectedActivity=a.data;s.resetSelection(a)}this.isJournalSelecting=false}async importSelectedItemsWorkflow(t){const i=this.findConsumingWorkflowRecursive(t);this.flowchartRootActivity=await this.getFlowchartByActivityNode(i);window.requestAnimationFrame((async()=>{await this.flowchartElement.updateGraph()}))}findConsumingWorkflowRecursive(t){const i=t.parents[0];if(i==null){return t}else{const t=i.activity.type;if(t=="Elsa.Workflow"||t=="Elsa.Flowchart"){return this.findConsumingWorkflowRecursive(i)}else{return i}}}async getFlowchartByActivityNode(t){const i=t.parents[0]==null;return i?this.workflowDefinition.root:this.findFlowchartOfActivityRecursive(t.activity)}findFlowchartOfActivityRecursive(t){if(t.type=="Elsa.Flowchart"){return t}else if(t.root==null&&t.body.type=="Elsa.Flowchart"){return t.body}else{return this.findFlowchartOfActivityRecursive(t.root)}}async getCanvas(){return this.flowchartElement}async registerActivityDrivers(t){const i=r.get(h);t(i)}getWorkflow(){return this.getWorkflowInternal()}async importWorkflow(t,i){this.workflowInstanceState=i;await this.updateWorkflowDefinition(t);window.requestAnimationFrame((async()=>{await this.flowchartElement.updateGraph()}));await this.eventBus.emit(d.WorkflowDefinition.Imported,this,{workflowDefinition:t})}async updateWorkflowDefinition(t){this.mainWorkflowDefinitionState=t}async componentWillLoad(){this.workflowInstanceState=this.workflowInstance;await this.updateWorkflowDefinition(this.workflowDefinition)}async componentDidLoad(){if(!!this.mainWorkflowDefinitionState&&!!this.workflowInstanceState)await this.importWorkflow(this.workflowDefinition,this.workflowInstance);await this.eventBus.emit(d.WorkflowEditor.Ready,this,{workflowEditor:this})}render(){var t;const e=this.mainWorkflowDefinitionState;const a=this.workflowInstanceState;const o={workflowInstance:a,workflowDefinition:e};this.flowchartRootActivity=(t=this.flowchartRootActivity)!==null&&t!==void 0?t:this.mainWorkflowDefinitionState.root;return i("div",{class:"tw-absolute tw-inset-0",ref:t=>this.container=t},i("elsa-panel",{class:"elsa-activity-picker-container tw-z-30",position:s.Left,onExpandedStateChanged:t=>this.onActivityPickerPanelStateChanged(t.detail)},i("elsa-workflow-journal",{model:o})),i("elsa-flowchart",{ref:t=>this.flowchartElement=t,rootActivity:this.flowchartRootActivity,interactiveMode:false}),i("elsa-panel",{class:"elsa-workflow-editor-container tw-z-30",position:s.Right,onExpandedStateChanged:t=>this.onActivityEditorPanelStateChanged(t.detail)},i("div",{class:"object-editor-container"},i("elsa-workflow-instance-properties",{workflowDefinition:e,workflowInstance:this.workflowInstanceState}))),i("elsa-panel",{class:"elsa-activity-editor-container",position:s.Bottom},i("div",{class:"activity-editor-container"},this.renderSelectedObject())))}get el(){return e(this)}static get watchers(){return{monacoLibPath:["handleMonacoLibPath"],workflowDefinition:["onWorkflowDefinitionChanged"],workflowInstance:["onWorkflowInstanceChanged"]}}};u.style=y;export{u as elsa_workflow_instance_viewer};
//# sourceMappingURL=p-277f1f53.entry.js.map