{"version":3,"names":["Checkbox","this","getSelectedValue","inputContext","inputDescriptor","defaultValue","input","getInputPropertyValue","value","_b","_a","expression","toLowerCase","onPropertyEditorChanged","e","inputElement","target","isChecked","checked","inputChanged","SyntaxNames","Literal","onExpressionChanged","detail","syntax","async","render","fieldName","name","fieldId","displayName","hint","description","_d","_c","type","defaultSyntax","h","label","hideLabel","class","id","onChange","htmlFor"],"sources":["./src/components/inputs/checkbox.tsx"],"sourcesContent":["import {Component, Prop, h, State} from '@stencil/core';\r\nimport {LiteralExpression, SyntaxNames} from \"../../models\";\r\nimport {ActivityInputContext} from \"../../services/activity-input-driver\";\r\nimport {getInputPropertyValue } from \"../../utils\";\r\nimport {ExpressionChangedArs} from \"../shared/input-control-switch/input-control-switch\";\r\n\r\n@Component({\r\n  tag: 'elsa-checkbox-input',\r\n  shadow: false\r\n})\r\nexport class Checkbox {\r\n  @Prop() public inputContext: ActivityInputContext;\r\n  @State() private isChecked?: boolean;\r\n\r\n  public async componentWillLoad() {\r\n    this.isChecked = this.getSelectedValue();\r\n  }\r\n\r\n  private getSelectedValue = (): boolean => {\r\n    const inputContext = this.inputContext;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const defaultValue = inputDescriptor.defaultValue;\r\n    const input = getInputPropertyValue(inputContext);\r\n    const value = ((input?.expression as LiteralExpression)?.value) ?? defaultValue;\r\n    return typeof value == \"boolean\" ? value : typeof value == \"string\" ? value?.toLowerCase() === 'true' : false;\r\n  };\r\n\r\n  render() {\r\n    const inputContext = this.inputContext;\r\n    const inputDescriptor = inputContext.inputDescriptor;\r\n    const fieldName = inputDescriptor.name;\r\n    const fieldId = inputDescriptor.name;\r\n    const displayName = inputDescriptor.displayName;\r\n    const hint = inputDescriptor.description;\r\n    const defaultValue = inputDescriptor.defaultValue;\r\n    const input = getInputPropertyValue(inputContext);\r\n    const value = ((input?.expression as LiteralExpression)?.value) ?? defaultValue;\r\n    const syntax = input?.expression?.type ?? inputDescriptor.defaultSyntax;\r\n    const isChecked = this.isChecked;\r\n\r\n    return (\r\n      <elsa-input-control-switch label={displayName} hideLabel={true} hint={hint} syntax={syntax} expression={value} onExpressionChanged={this.onExpressionChanged}>\r\n        <div class=\"tw-flex tw-space-x-1\">\r\n          <input type=\"checkbox\" name={fieldName} id={fieldId} checked={isChecked} onChange={this.onPropertyEditorChanged}/>\r\n          <label htmlFor={fieldId}>{displayName}</label>\r\n        </div>\r\n      </elsa-input-control-switch>\r\n    );\r\n  }\r\n\r\n  private onPropertyEditorChanged = (e: Event) => {\r\n    const inputElement = e.target as HTMLInputElement;\r\n    this.isChecked = inputElement.checked;\r\n    this.inputContext.inputChanged(inputElement.checked, SyntaxNames.Literal);\r\n  }\r\n\r\n  private onExpressionChanged = (e: CustomEvent<ExpressionChangedArs>) => {\r\n    this.inputContext.inputChanged(e.detail.expression, e.detail.syntax);\r\n  }\r\n}\r\n"],"mappings":"4OAUaA,EAAQ,M,yBAQXC,KAAAC,iBAAmB,K,QACzB,MAAMC,EAAeF,KAAKE,aAC1B,MAAMC,EAAkBD,EAAaC,gBACrC,MAAMC,EAAeD,EAAgBC,aACrC,MAAMC,EAAQC,EAAsBJ,GACpC,MAAMK,GAAQC,GAACC,EAACJ,IAAK,MAALA,SAAK,SAALA,EAAOK,cAAgC,MAAAD,SAAA,SAAAA,EAAEF,SAAM,MAAAC,SAAA,EAAAA,EAAIJ,EACnE,cAAcG,GAAS,UAAYA,SAAeA,GAAS,UAAWA,IAAK,MAALA,SAAK,SAALA,EAAOI,iBAAkB,OAAS,KAAK,EA0BvGX,KAAAY,wBAA2BC,IACjC,MAAMC,EAAeD,EAAEE,OACvBf,KAAKgB,UAAYF,EAAaG,QAC9BjB,KAAKE,aAAagB,aAAaJ,EAAaG,QAASE,EAAYC,QAAQ,EAGnEpB,KAAAqB,oBAAuBR,IAC7Bb,KAAKE,aAAagB,aAAaL,EAAES,OAAOZ,WAAYG,EAAES,OAAOC,OAAO,E,qDA3C/DC,0BACLxB,KAAKgB,UAAYhB,KAAKC,kB,CAYxBwB,S,YACE,MAAMvB,EAAeF,KAAKE,aAC1B,MAAMC,EAAkBD,EAAaC,gBACrC,MAAMuB,EAAYvB,EAAgBwB,KAClC,MAAMC,EAAUzB,EAAgBwB,KAChC,MAAME,EAAc1B,EAAgB0B,YACpC,MAAMC,EAAO3B,EAAgB4B,YAC7B,MAAM3B,EAAeD,EAAgBC,aACrC,MAAMC,EAAQC,EAAsBJ,GACpC,MAAMK,GAAQC,GAACC,EAACJ,IAAK,MAALA,SAAK,SAALA,EAAOK,cAAgC,MAAAD,SAAA,SAAAA,EAAEF,SAAM,MAAAC,SAAA,EAAAA,EAAIJ,EACnE,MAAMmB,GAASS,GAAAC,EAAA5B,IAAK,MAALA,SAAK,SAALA,EAAOK,cAAU,MAAAuB,SAAA,SAAAA,EAAEC,QAAI,MAAAF,SAAA,EAAAA,EAAI7B,EAAgBgC,cAC1D,MAAMnB,EAAYhB,KAAKgB,UAEvB,OACEoB,EAAA,6BAA2BC,MAAOR,EAAaS,UAAW,KAAMR,KAAMA,EAAMP,OAAQA,EAAQb,WAAYH,EAAOc,oBAAqBrB,KAAKqB,qBACvIe,EAAA,OAAKG,MAAM,wBACTH,EAAA,SAAOF,KAAK,WAAWP,KAAMD,EAAWc,GAAIZ,EAASX,QAASD,EAAWyB,SAAUzC,KAAKY,0BACxFwB,EAAA,SAAOM,QAASd,GAAUC,I"}