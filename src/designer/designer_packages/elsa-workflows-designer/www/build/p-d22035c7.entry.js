import{r as t,c as s,h as e}from"./p-a7a3baa1.js";import{F as i}from"./p-b15e4c38.js";import{W as o}from"./p-92761193.js";import"./p-ec4413cd.js";const c=class{constructor(e){t(this,e);this.workflowDefinitionChanged=s(this,"workflowDefinitionChanged",7);this.onSelectedProvidersChanged=t=>{const s=t.detail;this.selectList={items:this.selectList.items.map((t=>Object.assign(Object.assign({},t),{selected:s.includes(t.value)})))};this.workflowDefinition.customProperties[o]=s;this.workflowDefinitionChanged.emit(this.workflowDefinition)};this.descriptors=[];this.workflowDefinition=undefined;this.selectList={items:[]};this.selectedProviderTypes=[]}async componentWillLoad(){var t;const s=this.workflowDefinition;const e=(t=s===null||s===void 0?void 0:s.customProperties[o])!==null&&t!==void 0?t:[];const i=this.descriptors.map((t=>({text:t.name,value:t.type})));this.selectList={items:i};this.selectedProviderTypes=e}render(){const t=this.selectList;return e(i,{label:"Active providers",fieldId:"EnabledProviders",hint:"Select the providers to activate for this workflow."},e("elsa-check-list",{selectList:t,selectedValues:this.selectedProviderTypes,onSelectedValuesChanged:this.onSelectedProvidersChanged}))}};export{c as elsa_workflow_context_provider_check_list};
//# sourceMappingURL=p-d22035c7.entry.js.map