{"version":3,"names":["Blank","render","h","class","ModalDialog","this","handleDefaultClose","async","hide","ModalType","Default","animate","showInternal","hideInternal","isVisible","overlay","style","opacity","modal","enter","then","shown","emit","leave","hidden","e","key","componentDidRender","modalDialogInstance","modalDialogContentRef","element","querySelector","children","actions","content","Host","ref","el","onClick","size","role","map","action","display","cssClass","isPrimary","isDangerous","buttonType","type","ModalActionType","Submit","cancelHandler","defaultHandler","args","actionInvoked","clickHandler","Cancel","instance","autoHide","text","ModalDialogContainer","constructor","hostRef","onInstanceHidden","instances","state","filter","x","options","_a","modalType","_b","_c","modalDialogRef","onActionInvoked","detail","onHidden","NotificationTemplate","connectedCallback","time","notification","timestamp","fromNow","timer","window","setInterval","disconnectedCallback","clearInterval","NotificationDisplayType","Success","xmlns","fill","viewBox","stroke","d","InProgress","cx","cy","r","Warning","Error","title","innerHTML","formatTextWithLineBreaks","name","NotificationManager","deleteNotif","id","notificationStore","notifications","item","handleToggle","NotificationServiceLocal","toggleNotification","toggle","onModalStateChange","value","closeMenu","toggleMenu","length","href","slot","NotificationService","studioCss","Studio","eventBus","Container","get","EventBus","workflowDefinitionManager","WorkflowDefinitionManager","pluginRegistry","PluginRegistry","handleServerUrl","settings","ServerSettings","baseAddress","handleMonacoLibPath","MonacoEditorSettings","monacoLibPath","context","container","initializing","serverUrl","optionsStore","enableFlexiblePorts","EventTypes","Initializing","initialize","authContext","AuthContext","disableAuth","getIsSignedIn","Auth","SignedIn","studioComponentStore","activeComponentFactory","modalComponents","ToastManager","find","showToast","ToastNotification","handleClick","hideToast","setTimeout","showDuration","clearTimeout","infoPanelBoolean","NotificationEventTypes","Add","Update","Toggle","PackagesApi","provider","getHttpClient","httpClient","response","data","__decorate","Service","ElsaClientProvider","WorkflowToolbar","onNotificationClick","stopPropagation","packagesApi","getVersion","currentElsaVersion","packageVersion","logoPath","getAssetPath","src","alt","toolbarComponentStore","components","component","modalState","notificationService","WorkflowToolbarMenu","isMenuOpen","menu","hideAllNotifications","onMenuItemClick","menuItem","preventDefault","menuItems","toolbarButtonMenuItemStore","items","tabindex","onWindowClicked","event","target","contains"],"sources":["./src/components/studio/blank.tsx","./src/components/shared/modal-dialog/modal-dialog.tsx","./src/components/shared/modal-dialog/modal-dialog-container.tsx","./src/modules/notifications/notification-template.tsx","./src/modules/notifications/notification-manager.tsx","./src/components/studio/studio.css?tag=elsa-studio","./src/components/studio/studio.tsx","./src/modules/notifications/toast-manager.tsx","./src/modules/notifications/toast-notification.tsx","./src/modules/notifications/event-types.ts","./src/services/api-client/packages-api.ts","./src/components/toolbar/workflow-toolbar/workflow-toolbar.tsx","./src/components/toolbar/workflow-toolbar-menu/workflow-toolbar-menu.tsx"],"sourcesContent":["import {Component, h} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: 'elsa-blank',\r\n  shadow: false,\r\n})\r\nexport class Blank{\r\n  render(){\r\n    return <div class=\"tw-bg-gray-800 tw-overflow-hidden tw-h-screen\"></div>;\r\n  }\r\n}\r\n","import {Component, Host, h, State, Listen, Method, Event, Element, EventEmitter, Prop} from '@stencil/core';\r\nimport {enter, leave} from 'el-transition'\r\nimport {ModalActionClickArgs, ModalActionDefinition, ModalActionType, ModalDialogInstance} from \"./models\";\r\nimport {ModalType} from \"./modal-type\";\r\n\r\n@Component({\r\n  tag: 'elsa-modal-dialog',\r\n  shadow: false,\r\n})\r\nexport class ModalDialog {\r\n  private overlay: HTMLElement\r\n  private modal: HTMLElement\r\n\r\n  @Prop() modalDialogInstance: ModalDialogInstance;\r\n  @Prop() actions: Array<ModalActionDefinition> = [];\r\n  @Prop() size: string = 'tw-max-w-6xl';\r\n  @Prop() type: ModalType = ModalType.Default;\r\n  @Prop() autoHide: boolean = true;\r\n  @Prop() content: () => any = () => <div/>;\r\n  @Event() shown: EventEmitter;\r\n  @Event() hidden: EventEmitter;\r\n  @Event() actionInvoked: EventEmitter<ModalActionClickArgs>;\r\n  @State() private isVisible: boolean = true;\r\n  @Element() element;\r\n\r\n  @Method()\r\n  async show(animate: boolean = true) {\r\n    this.showInternal(animate);\r\n  }\r\n\r\n  @Method()\r\n  async hide(animate: boolean = true) {\r\n    this.hideInternal(animate);\r\n  }\r\n\r\n  handleDefaultClose = async () => {\r\n    await this.hide();\r\n  }\r\n\r\n  showInternal(animate: boolean) {\r\n    this.isVisible = true;\r\n\r\n    if (!animate) {\r\n      this.overlay.style.opacity = '1';\r\n      this.modal.style.opacity = '1';\r\n    }\r\n\r\n    enter(this.overlay);\r\n    enter(this.modal).then(this.shown.emit);\r\n  }\r\n\r\n  hideInternal(animate: boolean) {\r\n    if (!animate) {\r\n      this.isVisible = false\r\n    }\r\n\r\n    leave(this.overlay);\r\n    leave(this.modal).then(() => {\r\n      this.isVisible = false;\r\n      this.hidden.emit();\r\n    });\r\n  }\r\n\r\n  @Listen('keydown', {target: 'window'})\r\n  async handleKeyDown(e: KeyboardEvent) {\r\n    if (this.isVisible && e.key === 'Escape') {\r\n      await this.hide(true);\r\n    }\r\n  }\r\n\r\n  componentDidRender() {\r\n    if (this.isVisible) {\r\n      enter(this.overlay);\r\n      enter(this.modal).then(this.shown.emit);\r\n    }\r\n\r\n    this.modalDialogInstance.modalDialogContentRef = this.element.querySelector('.modal-content').children[0];\r\n  }\r\n\r\n  render() {\r\n    const actions = this.actions;\r\n    const content = this.content();\r\n\r\n    return (\r\n      <Host class={{'hidden': !this.isVisible, 'tw-block': true}}>\r\n        <div class=\"tw-fixed tw-z-50 tw-inset-0 tw-overflow-y-auto\">\r\n          <div class=\"tw-flex tw-items-end tw-justify-center tw-min-tw-h-screen tw-pt-4 tw-px-4 tw-pb-20 tw-text-center sm:tw-block sm:tw-p-0\">\r\n            <div ref={el => this.overlay = el}\r\n                 onClick={() => this.hide(true)}\r\n                 data-transition-enter=\"tw-ease-out tw-duration-300\" data-transition-enter-start=\"tw-opacity-0\"\r\n                 data-transition-enter-end=\"tw-opacity-0\" data-transition-leave=\"tw-ease-in tw-duration-200\"\r\n                 data-transition-leave-start=\"tw-opacity-0\" data-transition-leave-end=\"tw-opacity-0\"\r\n                 class=\"hidden tw-fixed tw-inset-0 tw-transition-opacity\" aria-hidden=\"true\">\r\n              <div class=\"tw-absolute tw-inset-0 tw-bg-gray-500 tw-opacity-75\"/>\r\n            </div>\r\n\r\n            <span class=\"hidden sm:tw-inline-block sm:tw-align-middle sm:tw-h-screen\" aria-hidden=\"true\"/>\r\n            <div ref={el => this.modal = el}\r\n                 data-transition-enter=\"tw-ease-out tw-duration-300\"\r\n                 data-transition-enter-start=\"tw-opacity-0 tw-translate-y-4 sm:tw-translate-y-0 sm:tw-scale-95\"\r\n                 data-transition-enter-end=\"tw-opacity-0 tw-translate-y-0 sm:tw-scale-100\"\r\n                 data-transition-leave=\"tw-ease-in tw-duration-200\"\r\n                 data-transition-leave-start=\"tw-opacity-0 tw-translate-y-0 sm:tw-scale-100\"\r\n                 data-transition-leave-end=\"tw-opacity-0 tw-translate-y-4 sm:tw-translate-y-0 sm:tw-scale-95\"\r\n                 class={`hidden tw-inline-block sm:tw-align-top tw-bg-white tw-rounded-lg tw-text-left tw-overflow-visible tw-shadow-xl tw-transform tw-transition-all sm:tw-my-8 sm:tw-align-top ${this.size}`}\r\n                 role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\r\n              <div class=\"modal-content\">\r\n                {content}\r\n              </div>\r\n\r\n              <div class=\"tw-bg-gray-50 tw-px-4 tw-py-3 sm:tw-px-6 sm:tw-flex sm:tw-flex-row-reverse\">\r\n\r\n                {actions.map(action => {\r\n\r\n                  if (action.display)\r\n                    return action.display(action);\r\n\r\n                  const cssClass = action.isPrimary\r\n                    ? 'tw-text-white tw-bg-blue-600 hover:tw-bg-blue-700 tw-border-transparent focus:tw-ring-blue-500'\r\n                    : action.isDangerous ? 'tw-text-white tw-bg-red-600 hover:tw-bg-red-700 tw-border-transparent focus:tw-ring-red-500'\r\n                      : 'tw-bg-white tw-border-gray-300 tw-text-gray-700 hover:tw-bg-gray-50 focus:tw-ring-blue-500';\r\n\r\n                  const buttonType = action.type == ModalActionType.Submit ? 'submit' : 'button';\r\n                  const cancelHandler = () => this.hideInternal(true);\r\n                  const defaultHandler = (args: ModalActionClickArgs) => this.actionInvoked.emit(args);\r\n                  const clickHandler = !!action.onClick ? action.onClick : action.type == ModalActionType.Cancel ? cancelHandler : defaultHandler;\r\n\r\n                  return <button type={buttonType}\r\n                                 onClick={e => {\r\n                                   clickHandler({e, action, instance: this.modalDialogInstance});\r\n                                   if (this.autoHide)\r\n                                     this.hideInternal(true);\r\n                                 }}\r\n                                 class={`${cssClass} tw-mt-3 tw-w-full tw-inline-flex tw-justify-center tw-rounded-md tw-border tw-shadow-sm tw-px-4 tw-py-2 tw-text-base tw-font-medium focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-offset-2 sm:tw-mt-0 sm:tw-ml-3 sm:tw-w-auto sm:tw-text-sm`}>\r\n                    {action.text}\r\n                  </button>\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import {Component, h, Host} from '@stencil/core';\r\nimport state from './state';\r\nimport {ModalDialogInstance} from \"./models\";\r\nimport {ModalType} from \"./modal-type\";\r\n\r\n@Component({\r\n  tag: 'elsa-modal-dialog-container',\r\n  shadow: false,\r\n})\r\nexport class ModalDialogContainer {\r\n\r\n  private onInstanceHidden = (instance: ModalDialogInstance) => {\r\n    let instances: Array<ModalDialogInstance> = state.instances;\r\n    instances = instances.filter(x => x != instance);\r\n    state.instances = instances;\r\n  }\r\n\r\n  render() {\r\n    const instances: Array<ModalDialogInstance> = state.instances;\r\n\r\n    return (\r\n      <Host>\r\n        {instances.map(instance => {\r\n          const options = instance.options;\r\n          const actions = options?.actions ?? [];\r\n          const modalType = options?.modalType ?? ModalType.Default;\r\n          const size = options?.size ?? 'sm:tw-max-w-6xl';\r\n\r\n          return (<elsa-modal-dialog\r\n            ref={el => instance.modalDialogRef = el}\r\n            type={modalType}\r\n            size={size}\r\n            modalDialogInstance={instance}\r\n            content={instance.content}\r\n            actions={actions}\r\n            onActionInvoked={e => {\r\n              const args = e.detail;\r\n              instance.actionInvoked(args);\r\n            }}\r\n            onHidden={() => this.onInstanceHidden(instance)}/>);\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import {Component, Host, h, Prop, State} from '@stencil/core';\r\nimport {NotificationDisplayType, NotificationType} from \"./models\";\r\nimport { formatTextWithLineBreaks } from '../../utils';\r\n\r\n@Component({\r\n  tag: 'elsa-notification-template',\r\n  shadow: false,\r\n})\r\nexport class NotificationTemplate {\r\n\r\n  @Prop() public notification: NotificationType;\r\n  @State() time: string;\r\n  private timer: number;\r\n\r\n\r\n  connectedCallback() {\r\n    this.time = this.notification.timestamp.fromNow();\r\n    this.timer = window.setInterval(() => {\r\n      this.time = this.notification.timestamp.fromNow();\r\n    }, 60 * 1000);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.clearInterval(this.timer);\r\n  }\r\n\r\n  render() {\r\n    const {notification} = this;\r\n    const {type = NotificationDisplayType.Success} = notification;\r\n\r\n    return (\r\n      <div class=\"tw-flex tw-items-start tw-z-30\">\r\n        <div class=\"tw-flex-shrink-0 tw-z-30\">\r\n          {type === NotificationDisplayType.Success ?\r\n            <svg class=\"tw-h-6 tw-w-6 tw-text-green-400 tw-z-30\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\r\n                 viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                    d=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\r\n\r\n            </svg> : null\r\n          }\r\n          {type === NotificationDisplayType.InProgress ?\r\n            <svg class=\"tw-animate-spin tw-h-6 tw-w-6 tw-text-green-400\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                 fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"tw-opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"/>\r\n              <path class=\"tw-opacity-75\" fill=\"currentColor\"\r\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\r\n            </svg> : null\r\n          }\r\n          {type === NotificationDisplayType.Warning ?\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                 stroke=\"currentColor\" class=\"tw-w-6 tw-h-6 tw-text-orange-600\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                    d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"/>\r\n            </svg>\r\n            : null\r\n          }\r\n          {type === NotificationDisplayType.Error ?\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\"\r\n                 stroke=\"currentColor\" class=\"tw-w-6 tw-h-6 tw-text-red-400\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                    d=\"M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z\"/>\r\n            </svg>\r\n            : null\r\n          }\r\n        </div>\r\n        <div class=\"tw-ml-3 tw-w-0 tw-flex-1 tw-pt-0.5 tw-z-30\">\r\n          <p class=\"tw-text-sm tw-font-medium tw-text-gray-900\">{notification.title}</p>\r\n          <p class=\"tw-mt-1 tw-text-sm tw-text-gray-500\" innerHTML={formatTextWithLineBreaks(notification.text)}></p>\r\n          <p class=\"tw-mt-1 tw-text-sm tw-text-gray-700 tw-text-right\">{this.time}</p>\r\n        </div>\r\n        <div class=\"tw-ml-4 tw-flex tw-flex-shrink-0 tw-z-30\">\r\n          <slot name=\"close-button\"/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import {Component, h, Prop, Watch} from '@stencil/core';\r\nimport {leave, toggle} from 'el-transition'\r\nimport notificationStore from './notification-store';\r\nimport {EventBus} from '../../services';\r\nimport NotificationService from './notification-service';\r\n\r\n@Component({\r\n  tag: 'elsa-notifications-manager',\r\n  shadow: false,\r\n  styleUrl: '',\r\n})\r\nexport class NotificationManager {\r\n  @Prop() public modalState: boolean;\r\n\r\n  @Watch('modalState')\r\n  onModalStateChange(value) {\r\n    toggle(this.modal);\r\n  }\r\n\r\n  private readonly eventBus: EventBus;\r\n\r\n  modal: HTMLElement;\r\n  overlay: HTMLElement;\r\n\r\n  static NotificationServiceLocal = NotificationService;\r\n\r\n  deleteNotif = (id) => {\r\n    notificationStore.notifications = notificationStore.notifications.filter(item => item.id !== id)\r\n  }\r\n\r\n  handleToggle = () => {\r\n    NotificationManager.NotificationServiceLocal.toggleNotification();\r\n    toggle(this.modal);\r\n  };\r\n\r\n  private closeMenu() {\r\n    leave(this.modal);\r\n  }\r\n\r\n  private toggleMenu() {\r\n    toggle(this.modal);\r\n  }\r\n\r\n\r\n  render() {\r\n    const {notifications} = notificationStore;\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          ref={el => this.modal = el}\r\n          data-transition-enter=\"tw-transform tw-transition tw-ease-in-out tw-duration-100 sm:tw-duration-100\"\r\n          data-transition-enter-start=\"tw-translate-x-full\"\r\n          data-transition-leave=\"tw-transform tw-transition tw-ease-in-out tw-duration-100 sm:tw-duration-100\"\r\n          data-transition-leave-start=\"tw-translate-x-0\"\r\n          data-transition-leave-end=\"tw-translate-x-full\"\r\n          class='hidden tw-z-50 tw-top-16 tw-fixed tw-inset-y-0 tw-right-0 tw-flex tw-max-w-full tw-pl-10 sm:tw-pl-16'>\r\n\r\n          <div class=\"tw-w-screen tw-max-w-md\">\r\n            <div class=\"tw-flex tw-h-full tw-flex-col tw-overflow-y-scroll tw-bg-white tw-shadow-xl\">\r\n              <div class=\"tw-p-6 tw-border-b\">\r\n                <div class=\"tw-flex tw-items-start tw-justify-between\">\r\n                  <h2 class=\"tw-text-lg tw-font-medium tw-text-gray-900\" id=\"slide-over-title\">Notifications</h2>\r\n                  <div class=\"tw-ml-3 tw-flex tw-h-7 tw-items-center\">\r\n                    <button onClick={() => this.handleToggle()}\r\n                            type=\"button\"\r\n                            class=\"tw-rounded-md tw-bg-white tw-text-gray-400 hover:tw-text-gray-500 focus:tw-ring-2 focus:tw-ring-blue-500\">\r\n                      <span class=\"tw-sr-only\">Close panel</span>\r\n                      <svg class=\"tw-h-6 tw-w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                           stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\"/>\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {notifications.length === 0 && <div\r\n                class=\"tw-p-6 tw-pointer-events-auto tw-w-full tw-overflow-hidden tw-border-b tw-ring-1 tw-ring-black tw-ring-opacity-5\">There are no notifications</div>}\r\n              <ul role=\"list\"\r\n                  class=\"tw-pointer-events-auto tw-overflow-y-auto tw-flex-1 tw-divide-y tw-divide-gray-200 tw-overflow-y-auto\">\r\n                {notifications.map(notification => (\r\n                  <li>\r\n                    <div class=\"tw-border-b tw-group tw-relative tw-flex tw-items-center tw-py-6 tw-px-5\">\r\n                      <a href=\"#\" class=\"-tw-m-1 tw-block tw-flex-1 tw-p-1\">\r\n                        <elsa-notification-template notification={notification}>\r\n                          <div slot=\"close-button\" class=\"tw-relative tw-ml-2 tw-inline-block tw-flex-shrink-0 tw-text-left\">\r\n                            <button onClick={() => this.deleteNotif(notification.id)}>\r\n                              <svg class=\"tw-h-6 tw-w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\r\n                                   viewBox=\"0 0 24 24\"\r\n                                   stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\"/>\r\n                              </svg>\r\n                            </button>\r\n                          </div>\r\n                        </elsa-notification-template>\r\n                      </a>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n",":host {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n\r\n.elsa-studio-content {\r\n  position: absolute;\r\n  top: 64px;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n","import {Component, Element, EventEmitter, h, Host, Prop, Watch, Event} from '@stencil/core';\nimport 'reflect-metadata';\nimport {Container} from 'typedi';\nimport {AuthContext, EventBus, PluginRegistry, ServerSettings} from '../../services';\nimport {MonacoEditorSettings} from \"../../services/monaco-editor-settings\";\nimport {WorkflowDefinitionManager} from \"../../modules/workflow-definitions/services/manager\";\nimport {EventTypes} from \"../../models\";\nimport studioComponentStore from \"../../data/studio-component-store\";\nimport optionsStore from '../../data/designer-options-store';\nimport {StudioInitializingContext} from \"../../models/studio\";\n\n@Component({\n  tag: 'elsa-studio',\n  styleUrl: 'studio.css',\n})\nexport class Studio {\n  private readonly eventBus: EventBus;\n  private readonly workflowDefinitionManager: WorkflowDefinitionManager;\n  private readonly pluginRegistry: PluginRegistry;\n\n  constructor() {\n    this.eventBus = Container.get(EventBus);\n    this.workflowDefinitionManager = Container.get(WorkflowDefinitionManager);\n    this.pluginRegistry = Container.get(PluginRegistry);\n  }\n\n  @Element() private el: HTMLElsaStudioElement;\n  @Prop({attribute: 'server'}) serverUrl: string;\n  @Prop({attribute: 'monaco-lib-path'}) monacoLibPath: string;\n  @Prop({attribute: 'enable-flexible-ports'}) enableFlexiblePorts: boolean;\n  @Prop({attribute: 'disable-auth'}) disableAuth: boolean;\n  @Event() initializing: EventEmitter<StudioInitializingContext>;\n\n  @Watch('serverUrl')\n  private handleServerUrl(value: string) {\n    const settings = Container.get(ServerSettings);\n    settings.baseAddress = value;\n  }\n\n  @Watch('monacoLibPath')\n  private handleMonacoLibPath(value: string) {\n    const settings = Container.get(MonacoEditorSettings);\n    settings.monacoLibPath = value;\n  }\n\n  async componentWillLoad() {\n    const pluginRegistry = Container.get(PluginRegistry);\n    const context: StudioInitializingContext = {container: Container, pluginRegistry};\n    this.initializing.emit(context);\n\n    this.handleMonacoLibPath(this.monacoLibPath);\n    this.handleServerUrl(this.serverUrl);\n    optionsStore.enableFlexiblePorts = this.enableFlexiblePorts;\n    await this.eventBus.emit(EventTypes.Studio.Initializing, this);\n    await this.pluginRegistry.initialize();\n\n    // If we have a valid session, emit the signed in event so that descriptors will be loaded.\n    const authContext = Container.get(AuthContext);\n\n    if (this.disableAuth || authContext.getIsSignedIn()) {\n      const eventBus = Container.get(EventBus);\n      await eventBus.emit(EventTypes.Auth.SignedIn)\n    }\n  }\n\n  render() {\n    return <Host>\n      <elsa-workflow-toolbar/>\n      <div class=\"elsa-studio-content\">\n        {studioComponentStore.activeComponentFactory()}\n      </div>\n      {studioComponentStore.modalComponents.map(modal => modal())}\n      <elsa-modal-dialog-container/>\n    </Host>;\n  }\n}\n","import { Component, Host, h } from '@stencil/core';\r\nimport notificationStore from \"./notification-store\";\r\n\r\n@Component({\r\n  tag: 'elsa-toast-manager',\r\n  shadow: false,\r\n})\r\n\r\nexport class ToastManager {\r\n\r\n  render() {\r\n    const {notifications} = notificationStore;\r\n    const notification = notifications.find(notification => notification.showToast !== false);\r\n\r\n    if (notification) {\r\n      return (\r\n          <elsa-toast-notification notification={notification}></elsa-toast-notification>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import {Component, h, State, Prop, Watch} from \"@stencil/core\";\r\nimport {NotificationType} from \"./models\";\r\nimport notificationStore from \"./notification-store\";\r\nimport NotificationService from \"./notification-service\";\r\n\r\n@Component({\r\n  tag: 'elsa-toast-notification',\r\n  shadow: false,\r\n  styleUrl: '',\r\n})\r\nexport class ToastNotification {\r\n  @Prop() public notification: NotificationType;\r\n  @Prop() public showDuration = 6000;\r\n  private timer;\r\n\r\n  componentDidRender() {\r\n    this.timer = setTimeout(() => {\r\n      this.hideToast();\r\n    }, this.showDuration);\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.hideToast();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.clearTimeout(this.timer);\r\n    this.hideToast();\r\n  }\r\n\r\n  hideToast = () => {\r\n    NotificationService.hideToast(this.notification);\r\n  }\r\n\r\n  render() {\r\n    const {infoPanelBoolean} = notificationStore;\r\n\r\n    return (\r\n      (this.notification.showToast !== false && !infoPanelBoolean) ? (\r\n        <div class=\"tw-mt-2 tw-pr-2 tw-flex tw-w-full tw-flex-col tw-items-center tw-space-y-4 sm:tw-items-end\">\r\n          <div\r\n            class=\"tw-pointer-events-auto tw-w-full tw-max-w-sm tw-rounded-lg tw-z-50 tw-bg-white tw-shadow-lg tw-ring-1 tw-ring-black tw-ring-opacity-5\">\r\n            <div class=\"tw-p-4 tw-z-30\">\r\n              <elsa-notification-template notification={this.notification}>\r\n                <siv slot=\"close-button\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={this.handleClick}\r\n                    class=\"tw-inline-flex tw-rounded-md tw-bg-white tw-text-gray-400 hover:tw-text-gray-500 focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-blue-500 focus:tw-ring-offset-2\">\r\n                    <span class=\"tw-sr-only\">Close</span>\r\n                    <svg class=\"tw-h-5 tw-w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"\r\n                         fill=\"currentColor\" aria-hidden=\"true\">\r\n                      <path\r\n                        d=\"M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z\"/>\r\n                    </svg>\r\n                  </button>\r\n                </siv>\r\n              </elsa-notification-template>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null\r\n    );\r\n  }\r\n}\r\n","export const NotificationEventTypes = {\r\n  Add: 'notification-added',\r\n  Update: 'notification-updated',\r\n  Toggle: 'notification-toggle',\r\n};\r\n","import {Service} from \"typedi\";\r\nimport {ElsaClientProvider} from \"./elsa-client\";\r\nimport { PackageVersion } from \"../../models\";\r\n\r\n@Service()\r\nexport class PackagesApi {\r\n  private provider: ElsaClientProvider;\r\n\r\n  constructor(provider: ElsaClientProvider) {\r\n    this.provider = provider;\r\n  }\r\n\r\n  async getVersion(): Promise<PackageVersion> {\r\n    const httpClient = await this.getHttpClient();\r\n    const response = await httpClient.get<PackageVersion>(`package/version`);\r\n    return response.data;\r\n  }\r\n\r\n  private getHttpClient = async () => await this.provider.getHttpClient();\r\n}\r\n","import {Component, State, h, getAssetPath} from '@stencil/core';\r\nimport Container from 'typedi';\r\nimport {NotificationEventTypes} from '../../../modules/notifications/event-types';\r\nimport {EventBus} from '../../../services';\r\nimport toolbarComponentStore from \"../../../data/toolbar-component-store\";\r\nimport notificationService from '../../../modules/notifications/notification-service';\r\nimport notificationStore from \"../../../modules/notifications/notification-store\";\r\nimport {PackagesApi} from \"../../../services/api-client/packages-api\";\r\n\r\n@Component({\r\n  tag: 'elsa-workflow-toolbar',\r\n  assetsDirs: ['assets']\r\n})\r\nexport class WorkflowToolbar {\r\n  private readonly eventBus: EventBus;\r\n  private readonly packagesApi: PackagesApi;\r\n\r\n  private currentElsaVersion: string;\r\n\r\n  static NotificationService = notificationService;\r\n\r\n  constructor() {\r\n    this.eventBus = Container.get(EventBus);\r\n    this.packagesApi = Container.get(PackagesApi);\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    var response = await this.packagesApi.getVersion();\r\n    return this.currentElsaVersion = response.packageVersion;\r\n  }\r\n\r\n  onNotificationClick = async e => {\r\n    e.stopPropagation();\r\n    await this.eventBus.emit(NotificationEventTypes.Toggle, this);\r\n    WorkflowToolbar.NotificationService.toggleNotification();\r\n  };\r\n\r\n  render() {\r\n    const logoPath = getAssetPath('./assets/logo.png');\r\n    const infoPanelBoolean = notificationStore.infoPanelBoolean;\r\n\r\n    return (\r\n      <div>\r\n        <nav class=\"tw-bg-gray-800\">\r\n          <div class=\"tw-mx-auto tw-px-2 sm:tw-px-6 lg:tw-px-6\">\r\n\r\n            <div class=\"tw-flex tw-items-center tw-h-16\">\r\n              <div class=\"tw-flex-shrink-0\">\r\n                <div class=\"tw-flex tw-items-end tw-space-x-1\">\r\n                  <div>\r\n                    <a href=\"#\"><img class=\"tw-h-6 tw-w-6\" src={logoPath} alt=\"Workflow\"/></a>\r\n                  </div>\r\n                  <div>\r\n                    <span class=\"tw-text-gray-300 tw-text-sm\">{this.currentElsaVersion}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"tw-flex-grow\"></div>\r\n\r\n              <div class=\"tw-relative tw-flex tw-items-center tw-justify-end tw-h-16\">\r\n                <div class=\"tw-absolute tw-inset-y-0 tw-right-0 tw-flex tw-items-center tw-pr-2 sm:tw-static sm:tw-inset-auto sm:tw-ml-6 sm:tw-pr-0 tw-z-40\">\r\n                  <div class=\"tw-inset-y-0 tw-right-0 tw-flex tw-items-center tw-pr-2 sm:tw-static sm:tw-inset-auto sm:tw-ml-6 sm:tw-pr-0 tw-z-40\">\r\n                    {/* Notifications*/}\r\n                    <button\r\n                      onClick={e => this.onNotificationClick(e)}\r\n                      type=\"button\"\r\n                      class=\"tw-bg-gray-800 tw-p-1 tw-rounded-full tw-text-gray-400 hover:tw-text-white focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-offset-2 focus:tw-ring-offset-gray-800 focus:tw-ring-white tw-mr-4\"\r\n                    >\r\n                      <span class=\"tw-sr-only\">View notifications</span>\r\n                      <svg class=\"tw-h-6 tw-w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                        <path\r\n                          stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"\r\n                          stroke-width=\"2\"\r\n                          d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n\r\n                    {toolbarComponentStore.components.map(component => (\r\n                      <div class=\"tw-flex-shrink-0 tw-mr-4\">\r\n                        {component()}\r\n                      </div>\r\n                    ))}\r\n\r\n                    {/* Menu */}\r\n                    <elsa-workflow-toolbar-menu/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </nav>\r\n        <elsa-notifications-manager modalState={infoPanelBoolean}></elsa-notifications-manager>\r\n        <elsa-toast-manager></elsa-toast-manager>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {Component, Event, EventEmitter, Host, h, Listen, Prop, State} from '@stencil/core';\r\nimport {leave, toggle} from 'el-transition';\r\nimport {EventBus} from \"../../../services\";\r\nimport {Container} from \"typedi\";\r\nimport {ToolbarMenuItem} from \"./models\";\r\nimport toolbarButtonMenuItemStore from \"../../../data/toolbar-button-menu-item-store\";\r\nimport NotificationService from \"../../../modules/notifications/notification-service\";\r\n\r\n@Component({\r\n  tag: 'elsa-workflow-toolbar-menu',\r\n  shadow: false,\r\n})\r\nexport class WorkflowToolbarMenu {\r\n  private readonly eventBus: EventBus;\r\n  private menu: HTMLElement;\r\n  private element: HTMLElement;\r\n  private isMenuOpen = false;\r\n\r\n  constructor() {\r\n    this.eventBus = Container.get(EventBus);\r\n  }\r\n\r\n  private closeMenu = () => {\r\n    leave(this.menu);\r\n    this.isMenuOpen = false;\r\n  };\r\n\r\n  private toggleMenu = () => {\r\n    toggle(this.menu);\r\n    this.isMenuOpen = !this.isMenuOpen;\r\n    if (this.isMenuOpen) {\r\n      NotificationService.hideAllNotifications();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const menuItems: Array<ToolbarMenuItem> = toolbarButtonMenuItemStore.items;\r\n\r\n    return (\r\n      <Host class=\"tw-block\" ref={el => this.element = el}>\r\n        <div class=\"elsa-toolbar-menu-wrapper tw-relative\">\r\n          <div>\r\n            <button onClick={() => this.toggleMenu()}\r\n                    type=\"button\"\r\n                    class=\"tw-bg-gray-800 tw-flex tw-text-sm tw-rounded-full focus:tw-outline-none focus:tw-ring-1 focus:tw-ring-offset-1 focus:tw-ring-gray-600\"\r\n                    aria-expanded=\"false\" aria-haspopup=\"true\">\r\n              <span class=\"tw-sr-only\">Open user menu</span>\r\n              <svg class=\"tw-h-8 tw-w-8 tw-text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div ref={el => this.menu = el}\r\n               data-transition-enter=\"tw-transition tw-ease-out tw-duration-100\"\r\n               data-transition-enter-start=\"tw-transform tw-opacity-0 tw-scale-95\"\r\n               data-transition-enter-end=\"tw-transform tw-opacity-100 tw-scale-100\"\r\n               data-transition-leave=\"tw-transition tw-ease-in tw-duration-75\"\r\n               data-transition-leave-start=\"tw-transform tw-opacity-100 tw-scale-100\"\r\n               data-transition-leave-end=\"tw-transform tw-opacity-0 tw-scale-95\"\r\n               class=\"hidden tw-origin-top-right tw-absolute tw-right-0 tw-mt-2 tw-w-48 tw-rounded-md tw-shadow-lg tw-py-1 tw-bg-white tw-ring-1 tw-ring-black tw-ring-opacity-5 focus:tw-outline-none\"\r\n               role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu-button\" tabindex=\"-1\">\r\n            {menuItems.map(menuItem => <a onClick={e => this.onMenuItemClick(e, menuItem)} href=\"#\" role=\"menuitem\" tabindex=\"-1\">{menuItem.text}</a>)}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n  @Listen('click', {target: 'window'})\r\n  private onWindowClicked(event: Event) {\r\n    const target = event.target as HTMLElement;\r\n\r\n    if (!this.element.contains(target))\r\n      this.closeMenu();\r\n  }\r\n\r\n  private onMenuItemClick = async (e: MouseEvent, menuItem: ToolbarMenuItem) => {\r\n    e.preventDefault();\r\n    await menuItem.onClick();\r\n    this.closeMenu();\r\n  };\r\n}\r\n"],"mappings":"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"}