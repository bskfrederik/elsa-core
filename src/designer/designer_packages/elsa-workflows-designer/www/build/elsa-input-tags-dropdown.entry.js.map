{"file":"elsa-input-tags-dropdown.entry.esm.js","mappings":"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","names":["uniq"],"sources":["./src/components/shared/input-tags/input-tags-dropdown.tsx"],"sourcesContent":["import {Component, h, Prop, Event, EventEmitter, State, Watch} from '@stencil/core';\r\nimport {uniq} from 'lodash';\r\nimport {SelectListItem} from '../../../models';\r\n\r\n@Component({\r\n  tag: 'elsa-input-tags-dropdown',\r\n  shadow: false,\r\n})\r\nexport class InputTagsDropdown {\r\n\r\n  @Prop() fieldName?: string;\r\n  @Prop() fieldId?: string;\r\n  @Prop() placeHolder?: string = 'Add tag';\r\n  @Prop() values?: Array<string | SelectListItem> = [];\r\n  @Prop() dropdownValues?: Array<SelectListItem> = [];\r\n  @Event({bubbles: true}) valueChanged: EventEmitter<SelectListItem[]| string[]>;\r\n  @State() currentValues?: Array<SelectListItem> = [];\r\n\r\n  @Watch('values')\r\n  private valuesChangedHandler(newValue: Array<string | SelectListItem>) {\r\n    this.updateCurrentValues(newValue);\r\n  }\r\n\r\n  public componentWillLoad() {\r\n    this.updateCurrentValues(this.values);\r\n  }\r\n\r\n  private updateCurrentValues = (newValue: Array<string | SelectListItem>) => {\r\n    const dropdownValues = this.dropdownValues || [];\r\n    let values: Array<SelectListItem> = [];\r\n\r\n    if (!!newValue) {\r\n      newValue.forEach(value => {\r\n        const valueKey = typeof (value) == 'string' ? value as string : (value as SelectListItem).value;\r\n        const tag = dropdownValues.find(x => x.value == valueKey);\r\n\r\n        if (!!tag)\r\n          values.push(tag);\r\n      })\r\n    }\r\n\r\n    this.currentValues = values;\r\n  };\r\n\r\n  private async onTagSelected(e: any) {\r\n    e.preventDefault();\r\n\r\n    const input = e.target as HTMLSelectElement;\r\n    const currentTag: SelectListItem = {\r\n      text: input.options[input.selectedIndex].text.trim(),\r\n      value: input.value\r\n    }\r\n\r\n    if (currentTag.value.length == 0)\r\n      return;\r\n\r\n    const values: Array<SelectListItem> = uniq([...this.currentValues, currentTag]);\r\n    input.value = \"Add\";\r\n    await this.valueChanged.emit(values);\r\n  }\r\n\r\n  async onDeleteTagClick(e: any, currentTag: SelectListItem) {\r\n    e.preventDefault();\r\n\r\n    this.currentValues = this.currentValues.filter(tag => tag.value !== currentTag.value);\r\n    await this.valueChanged.emit(this.currentValues);\r\n  }\r\n\r\n  render() {\r\n    let values: Array<SelectListItem> = this.currentValues || [];\r\n    let dropdownItems = this.dropdownValues.filter(x => values.findIndex(y => y.value === x.value) < 0);\r\n\r\n    if (!Array.isArray(values))\r\n      values = [];\r\n\r\n    const valuesJson = JSON.stringify(values.map(tag => tag.value));\r\n\r\n    return (\r\n      <div class=\"tw-py-2 tw-px-3 tw-bg-white tw-shadow-sm tw-border tw-border-gray-300 tw-rounded-md\">\r\n        {values.map(tag => (\r\n          <a href=\"#\" onClick={e => this.onDeleteTagClick(e, tag)} class=\"tw-inline-block tw-text-xs tw-bg-blue-400 tw-text-white tw-py-2 tw-px-3 tw-mr-1 tw-mb-1 tw-rounded\">\r\n            <input type=\"hidden\" value={tag.value}/>\r\n            <span>{tag.text}</span>\r\n            <span class=\"tw-text-white hover:tw-text-white tw-ml-1\">&times;</span>\r\n          </a>\r\n        ))}\r\n\r\n        <select\r\n          id={this.fieldId}\r\n          class=\"tw-inline-block tw-text-xs tw-py-2 tw-px-3 tw-mr-1 tw-mb-1 tw-pr-8 tw-border-gray-300 focus:tw-outline-none focus:tw-ring-blue-500 focus:tw-border-blue-500 tw-rounded\"\r\n          onChange={(e) => this.onTagSelected(e)}>\r\n          <option value=\"Add\" disabled selected>{this.placeHolder}</option>\r\n          {dropdownItems.map(tag => <option value={tag.value}>{tag.text}</option>)}\r\n        </select>\r\n        <input type=\"hidden\" name={this.fieldName} value={valuesJson}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"version":3}